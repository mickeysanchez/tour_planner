require "temboo"

module Amazon




  module EC2



    ##############################################################################
    #
    # AllocateAddress
    #
    # Acquires an Elastic IP address for use with your AWS account.
    #
    ##############################################################################

    class AllocateAddress < Choreography

      ####
      #  Create a new instance of the AllocateAddress Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/AllocateAddress")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AllocateAddressInputSet
      ####
      def new_input_set()
        return AllocateAddressInputSet.new()
      end

      def make_result_set()
        return AllocateAddressResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AllocateAddressResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AllocateAddress
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AllocateAddressInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Domain input for this Choreo. 
        # 
        # @param String - (conditional, string) Set to "vpc" to allocate the address for use with instances in a VPC.
        ###

        def set_Domain(value)
          set_input("Domain", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AllocateAddress Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AllocateAddressResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AllocateAddress



    ##############################################################################
    #
    # AssociateAddress
    #
    # Associates an Elastic IP address with an instance or a network interface.
    #
    ##############################################################################

    class AssociateAddress < Choreography

      ####
      #  Create a new instance of the AssociateAddress Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/AssociateAddress")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AssociateAddressInputSet
      ####
      def new_input_set()
        return AssociateAddressInputSet.new()
      end

      def make_result_set()
        return AssociateAddressResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AssociateAddressResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AssociateAddress
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AssociateAddressInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AllocationId input for this Choreo. 
        # 
        # @param String - (optional, string) [EC2-VPC] The allocation ID.  Required for a VPC.
        ###

        def set_AllocationId(value)
          set_input("AllocationId", value)
        end
        #### 
        # Set the value of the AllowReassociation input for this Choreo. 
        # 
        # @param String - (optional, string) [EC2-VPC] Allows an Elastic IP address that is already associated with an instance or network interface to be re-associated with the specified instance or network interface. False if not specified.
        ###

        def set_AllowReassociation(value)
          set_input("AllowReassociation", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (conditional, string) The ID of the instance.  Required for EC2-Classic. For a VPC, you can specify either an instance ID or a network interface ID, but not both.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the NetworkInterfaceId input for this Choreo. 
        # 
        # @param String - (optional, string) [EC2-VPC] The ID of the network interface. Association fails when specifying an instance ID unless exactly one interface is attached.
        ###

        def set_NetworkInterfaceId(value)
          set_input("NetworkInterfaceId", value)
        end
        #### 
        # Set the value of the PrivateIpAddress input for this Choreo. 
        # 
        # @param String - (optional, string) [EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If nothing is specified, the Elastic IP address is associated with the primary private IP address.
        ###

        def set_PrivateIpAddress(value)
          set_input("PrivateIpAddress", value)
        end
        #### 
        # Set the value of the PublicIp input for this Choreo. 
        # 
        # @param String - (conditional, string) The Elastic IP address.
        ###

        def set_PublicIp(value)
          set_input("PublicIp", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AssociateAddress Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AssociateAddressResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AssociateAddress



    ##############################################################################
    #
    # AttachVolume
    #
    # Attaches an Amazon EBS volume to a running instance and exposes it as the specified device.
    #
    ##############################################################################

    class AttachVolume < Choreography

      ####
      #  Create a new instance of the AttachVolume Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/AttachVolume")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AttachVolumeInputSet
      ####
      def new_input_set()
        return AttachVolumeInputSet.new()
      end

      def make_result_set()
        return AttachVolumeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AttachVolumeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AttachVolume
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AttachVolumeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Device input for this Choreo. 
        # 
        # @param String - (required, string) How the device is exposed to the instance (i.e. " /dev/sdh" or "xvdh").
        ###

        def set_Device(value)
          set_input("Device", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of the instance to which the volume attaches. The volume and instance must be within the same Availability Zone and the instance must be running.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VolumeId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone and the instance must be running.
        ###

        def set_VolumeId(value)
          set_input("VolumeId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AttachVolume Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AttachVolumeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AttachVolume



    ##############################################################################
    #
    # AuthorizeSecurityGroupIngress
    #
    # Adds an ingress rule to a security group.
    #
    ##############################################################################

    class AuthorizeSecurityGroupIngress < Choreography

      ####
      #  Create a new instance of the AuthorizeSecurityGroupIngress Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/AuthorizeSecurityGroupIngress")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AuthorizeSecurityGroupIngressInputSet
      ####
      def new_input_set()
        return AuthorizeSecurityGroupIngressInputSet.new()
      end

      def make_result_set()
        return AuthorizeSecurityGroupIngressResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AuthorizeSecurityGroupIngressResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AuthorizeSecurityGroupIngress
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AuthorizeSecurityGroupIngressInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupId input for this Choreo. 
        # 
        # @param String - (conditional, string) The ID of the security group to modify. Can be used instead of GroupName.
        ###

        def set_GroupId(value)
          set_input("GroupId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (conditional, string) The name of the security group to modify. Can be used instead of GroupId.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the IpPermissionsCidrIp input for this Choreo. 
        # 
        # @param String - (optional, string) The CIDR range. Cannot be used when specifying a source security group.
        ###

        def set_IpPermissionsCidrIp(value)
          set_input("IpPermissionsCidrIp", value)
        end
        #### 
        # Set the value of the IpPermissionsFromPort input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, you can use -1 to specify all ICMP types.
        ###

        def set_IpPermissionsFromPort(value)
          set_input("IpPermissionsFromPort", value)
        end
        #### 
        # Set the value of the IpPermissionsGroupId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the source security group. Cannot be used when specifying a CIDR IP address.
        ###

        def set_IpPermissionsGroupId(value)
          set_input("IpPermissionsGroupId", value)
        end
        #### 
        # Set the value of the IpPermissionsGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the source security group. Cannot be used when specifying a CIDR IP address.
        ###

        def set_IpPermissionsGroupName(value)
          set_input("IpPermissionsGroupName", value)
        end
        #### 
        # Set the value of the IpPermissionsIpProtocol input for this Choreo. 
        # 
        # @param String - (required, string) The IP protocol name or number. Valid values for EC2-Classic: tcp, udp, icmp (or 6, 17, 1). Valid values for EC2-VPC: tcp, udp, icmp, any valid protocol number (0-254), or -1 (to specify all).
        ###

        def set_IpPermissionsIpProtocol(value)
          set_input("IpPermissionsIpProtocol", value)
        end
        #### 
        # Set the value of the IpPermissionsToPort input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, you can use -1 to specify all ICMP codes for the given ICMP type.
        ###

        def set_IpPermissionsToPort(value)
          set_input("IpPermissionsToPort", value)
        end
        #### 
        # Set the value of the IpPermissionsUserId input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS account ID that owns the source security group. Cannot be used when specifying a CIDR IP address.
        ###

        def set_IpPermissionsUserId(value)
          set_input("IpPermissionsUserId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AuthorizeSecurityGroupIngress Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AuthorizeSecurityGroupIngressResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AuthorizeSecurityGroupIngress



    ##############################################################################
    #
    # CreateImage
    #
    # Creates an Amazon Machine Image from an Amazon EBS-backed instance. The image can be used later to launch other identical servers.
    #
    ##############################################################################

    class CreateImage < Choreography

      ####
      #  Create a new instance of the CreateImage Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/CreateImage")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateImageInputSet
      ####
      def new_input_set()
        return CreateImageInputSet.new()
      end

      def make_result_set()
        return CreateImageResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateImageResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateImage
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateImageInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DeleteOnTermination input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Whether the volume is deleted on instance termination. Defaults to "true".
        ###

        def set_DeleteOnTermination(value)
          set_input("DeleteOnTermination", value)
        end
        #### 
        # Set the value of the Description input for this Choreo. 
        # 
        # @param String - (optional, string) A description for the image you want to create.
        ###

        def set_Description(value)
          set_input("Description", value)
        end
        #### 
        # Set the value of the DeviceName input for this Choreo. 
        # 
        # @param String - (conditional, string) The device name exposed to the instance (i.e. /dev/sdh or xvdh). When registering an AMI from a snapshot, DiviceName is required as well as SnapshotId.
        ###

        def set_DeviceName(value)
          set_input("DeviceName", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of the instance to create the image on.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the Iops input for this Choreo. 
        # 
        # @param Integer - (conditional, integer) The number of I/O operations per second (IOPS) that the volume supports. Valid range is 100 to 2000.
        ###

        def set_Iops(value)
          set_input("Iops", value)
        end
        #### 
        # Set the value of the Name input for this Choreo. 
        # 
        # @param String - (required, string) The name for the image you are creating.
        ###

        def set_Name(value)
          set_input("Name", value)
        end
        #### 
        # Set the value of the NoDevice input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Suppresses a device mapping. Defaults to "true".
        ###

        def set_NoDevice(value)
          set_input("NoDevice", value)
        end
        #### 
        # Set the value of the NoReboot input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Defaults to "false". Amazon EC2 will attempt to shut down the instance before and after creating the image. Set to "true" for NoReboot.
        ###

        def set_NoReboot(value)
          set_input("NoReboot", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SnapshotId input for this Choreo. 
        # 
        # @param String - (conditional, string) The ID of the snapshot. Required when registering from a snapshot. You must also specify DeviceName with the root device name.
        ###

        def set_SnapshotId(value)
          set_input("SnapshotId", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VirtualName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the virtual device.
        ###

        def set_VirtualName(value)
          set_input("VirtualName", value)
        end
        #### 
        # Set the value of the VolumeSize input for this Choreo. 
        # 
        # @param String - (conditional, string) The size of the volume, in GiBs. Required unless you're creating the volume from a snapshot which indicates that the size will be the size of the snapshot.
        ###

        def set_VolumeSize(value)
          set_input("VolumeSize", value)
        end
        #### 
        # Set the value of the VolumeType input for this Choreo. 
        # 
        # @param String - (optional, string) The volume type. Valid values are: standard (the default) and io1.
        ###

        def set_VolumeType(value)
          set_input("VolumeType", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateImage Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateImageResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateImage



    ##############################################################################
    #
    # CreateKeyPair
    #
    # Creates a new 2048-bit RSA key pair with the specified name. 
    #
    ##############################################################################

    class CreateKeyPair < Choreography

      ####
      #  Create a new instance of the CreateKeyPair Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/CreateKeyPair")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateKeyPairInputSet
      ####
      def new_input_set()
        return CreateKeyPairInputSet.new()
      end

      def make_result_set()
        return CreateKeyPairResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateKeyPairResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateKeyPair
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateKeyPairInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the KeyName input for this Choreo. 
        # 
        # @param String - (required, string) A unique name for the key pair.
        ###

        def set_KeyName(value)
          set_input("KeyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateKeyPair Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateKeyPairResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateKeyPair



    ##############################################################################
    #
    # CreateSecurityGroup
    #
    # Creates a new EC2 security group.
    #
    ##############################################################################

    class CreateSecurityGroup < Choreography

      ####
      #  Create a new instance of the CreateSecurityGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/CreateSecurityGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateSecurityGroupInputSet
      ####
      def new_input_set()
        return CreateSecurityGroupInputSet.new()
      end

      def make_result_set()
        return CreateSecurityGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateSecurityGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateSecurityGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateSecurityGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupDescription input for this Choreo. 
        # 
        # @param String - (required, string) A description for the security group that that you want to create.
        ###

        def set_GroupDescription(value)
          set_input("GroupDescription", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) A name for the security group to create.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VpcId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the VPC. Required for EC2-VPC.
        ###

        def set_VpcId(value)
          set_input("VpcId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateSecurityGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateSecurityGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateSecurityGroup



    ##############################################################################
    #
    # CreateSnapshot
    #
    # Create a snapshot from a specified EBS volume.
    #
    ##############################################################################

    class CreateSnapshot < Choreography

      ####
      #  Create a new instance of the CreateSnapshot Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/CreateSnapshot")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateSnapshotInputSet
      ####
      def new_input_set()
        return CreateSnapshotInputSet.new()
      end

      def make_result_set()
        return CreateSnapshotResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateSnapshotResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateSnapshot
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateSnapshotInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Description input for this Choreo. 
        # 
        # @param String - (optional, string) A description for the volume that you want to create.
        ###

        def set_Description(value)
          set_input("Description", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VolumeId input for this Choreo. 
        # 
        # @param String - (required, string) The id of the EBS volume to snapshot.
        ###

        def set_VolumeId(value)
          set_input("VolumeId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateSnapshot Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateSnapshotResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateSnapshot



    ##############################################################################
    #
    # CreateTags
    #
    # Adds or overwrites one or more tags for the specified EC2 resource or resources.
    #
    ##############################################################################

    class CreateTags < Choreography

      ####
      #  Create a new instance of the CreateTags Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/CreateTags")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateTagsInputSet
      ####
      def new_input_set()
        return CreateTagsInputSet.new()
      end

      def make_result_set()
        return CreateTagsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateTagsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateTags
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateTagsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResourceId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of a resource to tag. This can be a comma-separated list of up to 10  Resource IDs.
        ###

        def set_ResourceId(value)
          set_input("ResourceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the TagKey input for this Choreo. 
        # 
        # @param String - (required, string) The key for a tag.
        ###

        def set_TagKey(value)
          set_input("TagKey", value)
        end
        #### 
        # Set the value of the TagValue input for this Choreo. 
        # 
        # @param String - (conditional, string) The value for a tag. If empty, the value will be set to be an empty string.
        ###

        def set_TagValue(value)
          set_input("TagValue", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateTags Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateTagsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateTags



    ##############################################################################
    #
    # CreateVolume
    #
    # Creates a new EBS volume that your EC2 instance can attach to.
    #
    ##############################################################################

    class CreateVolume < Choreography

      ####
      #  Create a new instance of the CreateVolume Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/CreateVolume")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateVolumeInputSet
      ####
      def new_input_set()
        return CreateVolumeInputSet.new()
      end

      def make_result_set()
        return CreateVolumeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateVolumeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateVolume
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateVolumeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AvailabilityZone input for this Choreo. 
        # 
        # @param String - (required, string) The Availability Zone to use when creating thew new volume (i.e us-east-1a).
        ###

        def set_AvailabilityZone(value)
          set_input("AvailabilityZone", value)
        end
        #### 
        # Set the value of the Iops input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The number of I/O operations per second (IOPS) that the volume supports. Valid range is 100 to 2000. Required when the volume type is io1.
        ###

        def set_Iops(value)
          set_input("Iops", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the Size input for this Choreo. 
        # 
        # @param Integer - (conditional, integer) The size for the volume (in gigabytes) that you are creating. Valid Values are 1-1024. Required if you're not creating a volume from a snapshot. If the volume type is io1, the min size is 10 GiB.
        ###

        def set_Size(value)
          set_input("Size", value)
        end
        #### 
        # Set the value of the SnapshotId input for this Choreo. 
        # 
        # @param String - (conditional, string) The snapshot from which to create the new volume. Required if you are creating a volume from a snapshot.
        ###

        def set_SnapshotId(value)
          set_input("SnapshotId", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VolumeType input for this Choreo. 
        # 
        # @param String - (optional, string) The volume type.Valid values are: "standard" (the default) and "io1".
        ###

        def set_VolumeType(value)
          set_input("VolumeType", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateVolume Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateVolumeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateVolume



    ##############################################################################
    #
    # DeleteKeyPair
    #
    # Deletes the specified key pair by removing the public key from Amazon EC2. You must own the key pair.
    #
    ##############################################################################

    class DeleteKeyPair < Choreography

      ####
      #  Create a new instance of the DeleteKeyPair Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DeleteKeyPair")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteKeyPairInputSet
      ####
      def new_input_set()
        return DeleteKeyPairInputSet.new()
      end

      def make_result_set()
        return DeleteKeyPairResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteKeyPairResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteKeyPair
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteKeyPairInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the KeyName input for this Choreo. 
        # 
        # @param String - (required, string) A unique name for the key pair.
        ###

        def set_KeyName(value)
          set_input("KeyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteKeyPair Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteKeyPairResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteKeyPair



    ##############################################################################
    #
    # DeleteSecurityGroup
    #
    # Deletes a security group using the group name you specify.
    #
    ##############################################################################

    class DeleteSecurityGroup < Choreography

      ####
      #  Create a new instance of the DeleteSecurityGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DeleteSecurityGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteSecurityGroupInputSet
      ####
      def new_input_set()
        return DeleteSecurityGroupInputSet.new()
      end

      def make_result_set()
        return DeleteSecurityGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteSecurityGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteSecurityGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteSecurityGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupId input for this Choreo. 
        # 
        # @param String - (conditional, string) The id of the security group to delete. Required unless providing the GroupName.
        ###

        def set_GroupId(value)
          set_input("GroupId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (conditional, string) The name of the security group to delete.Required unless providing the GroupId.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, any) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteSecurityGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteSecurityGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteSecurityGroup



    ##############################################################################
    #
    # DeleteSnapshot
    #
    # Deletes a snapshot using a snapshot id that you specify.
    #
    ##############################################################################

    class DeleteSnapshot < Choreography

      ####
      #  Create a new instance of the DeleteSnapshot Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DeleteSnapshot")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteSnapshotInputSet
      ####
      def new_input_set()
        return DeleteSnapshotInputSet.new()
      end

      def make_result_set()
        return DeleteSnapshotResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteSnapshotResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteSnapshot
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteSnapshotInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SnapshotId input for this Choreo. 
        # 
        # @param String - (required, string) The id of the snapshot to delete.
        ###

        def set_SnapshotId(value)
          set_input("SnapshotId", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteSnapshot Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteSnapshotResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteSnapshot



    ##############################################################################
    #
    # DeleteTags
    #
    # Deletes a specific set of tags from a specific set of resources.
    #
    ##############################################################################

    class DeleteTags < Choreography

      ####
      #  Create a new instance of the DeleteTags Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DeleteTags")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteTagsInputSet
      ####
      def new_input_set()
        return DeleteTagsInputSet.new()
      end

      def make_result_set()
        return DeleteTagsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteTagsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteTags
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteTagsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResourceId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of a resource to tag. This can be a comma-separated list of up to 10  Resource IDs.
        ###

        def set_ResourceId(value)
          set_input("ResourceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the TagKey input for this Choreo. 
        # 
        # @param String - (required, string) The key for a tag.
        ###

        def set_TagKey(value)
          set_input("TagKey", value)
        end
        #### 
        # Set the value of the TagValue input for this Choreo. 
        # 
        # @param String - (optional, string) Indicates a tag should be deleted only if the value matches.To delete a tag regardless of its value, leave this blank. To delete a tag with an empty string value (""), pass the string value "null".
        ###

        def set_TagValue(value)
          set_input("TagValue", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteTags Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteTagsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteTags



    ##############################################################################
    #
    # DeleteVolume
    #
    # Deletes a volume using a volume id that you specify.
    #
    ##############################################################################

    class DeleteVolume < Choreography

      ####
      #  Create a new instance of the DeleteVolume Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DeleteVolume")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteVolumeInputSet
      ####
      def new_input_set()
        return DeleteVolumeInputSet.new()
      end

      def make_result_set()
        return DeleteVolumeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteVolumeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteVolume
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteVolumeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VolumeId input for this Choreo. 
        # 
        # @param String - (required, string) The id of the volume to delete.
        ###

        def set_VolumeId(value)
          set_input("VolumeId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteVolume Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteVolumeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteVolume



    ##############################################################################
    #
    # DeregisterImage
    #
    # Deregisters the specified AMI.
    #
    ##############################################################################

    class DeregisterImage < Choreography

      ####
      #  Create a new instance of the DeregisterImage Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DeregisterImage")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeregisterImageInputSet
      ####
      def new_input_set()
        return DeregisterImageInputSet.new()
      end

      def make_result_set()
        return DeregisterImageResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeregisterImageResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeregisterImage
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeregisterImageInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ImageId input for this Choreo. 
        # 
        # @param String - (required, string) The AMI ID.
        ###

        def set_ImageId(value)
          set_input("ImageId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeregisterImage Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeregisterImageResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeregisterImage



    ##############################################################################
    #
    # DescribeAddresses
    #
    # Describes one or more of your Elastic IP addresses.
    #
    ##############################################################################

    class DescribeAddresses < Choreography

      ####
      #  Create a new instance of the DescribeAddresses Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeAddresses")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeAddressesInputSet
      ####
      def new_input_set()
        return DescribeAddressesInputSet.new()
      end

      def make_result_set()
        return DescribeAddressesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeAddressesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeAddresses
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeAddressesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AllocationId input for this Choreo. 
        # 
        # @param String - (optional, string) One or more allocation IDs corresponding to the address or addresses to describe (VPC addresses only). This can be a comma-separated list of up to 10 Allocation Ids.
        ###

        def set_AllocationId(value)
          set_input("AllocationId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow the results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the PublicIp input for this Choreo. 
        # 
        # @param String - (optional, string) One or more EC2 Elastic IP addresses.  This can be a comma-separated list of up to 10 IP addresses.
        ###

        def set_PublicIp(value)
          set_input("PublicIp", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeAddresses Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeAddressesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeAddresses



    ##############################################################################
    #
    # DescribeAvailabilityZones
    #
    # Returns Availability Zones that are available for your EC2 account.
    #
    ##############################################################################

    class DescribeAvailabilityZones < Choreography

      ####
      #  Create a new instance of the DescribeAvailabilityZones Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeAvailabilityZones")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeAvailabilityZonesInputSet
      ####
      def new_input_set()
        return DescribeAvailabilityZonesInputSet.new()
      end

      def make_result_set()
        return DescribeAvailabilityZonesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeAvailabilityZonesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeAvailabilityZones
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeAvailabilityZonesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the ZoneName input for this Choreo. 
        # 
        # @param String - (optional, string) One or more Availability Zones.  This can be a comma-separated list of up to 10 instance Zones.
        ###

        def set_ZoneName(value)
          set_input("ZoneName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeAvailabilityZones Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeAvailabilityZonesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeAvailabilityZones



    ##############################################################################
    #
    # DescribeImageAttribute
    #
    # Retrieves information about an attribute of an AMI.
    #
    ##############################################################################

    class DescribeImageAttribute < Choreography

      ####
      #  Create a new instance of the DescribeImageAttribute Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeImageAttribute")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeImageAttributeInputSet
      ####
      def new_input_set()
        return DescribeImageAttributeInputSet.new()
      end

      def make_result_set()
        return DescribeImageAttributeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeImageAttributeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeImageAttribute
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeImageAttributeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Attribute input for this Choreo. 
        # 
        # @param String - (required, string) The AMI attribute to get. Valid Values are: description | kernel | ramdisk | launchPermission | productCodes | blockDeviceMapping.
        ###

        def set_Attribute(value)
          set_input("Attribute", value)
        end
        #### 
        # Set the value of the ImageId input for this Choreo. 
        # 
        # @param String - (required, string) The AMI ID.
        ###

        def set_ImageId(value)
          set_input("ImageId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeImageAttribute Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeImageAttributeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeImageAttribute



    ##############################################################################
    #
    # DescribeImages
    #
    # Returns information about Amazon Machine Image(s) that are available to you.
    #
    ##############################################################################

    class DescribeImages < Choreography

      ####
      #  Create a new instance of the DescribeImages Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeImages")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeImagesInputSet
      ####
      def new_input_set()
        return DescribeImagesInputSet.new()
      end

      def make_result_set()
        return DescribeImagesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeImagesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeImages
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeImagesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ExecutableBy input for this Choreo. 
        # 
        # @param String - (optional, string) The user ID that has explicit launch permissions. The user ID can be an AWS account ID, "self", or "all" to return AMIs with public launch permissions.
        ###

        def set_ExecutableBy(value)
          set_input("ExecutableBy", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the ImageId input for this Choreo. 
        # 
        # @param String - (conditional, string) The ID of the AMI that you want to return. Returns all AMIs when this parameter is not specified.
        ###

        def set_ImageId(value)
          set_input("ImageId", value)
        end
        #### 
        # Set the value of the Owner input for this Choreo. 
        # 
        # @param String - (conditional, string) The IDs "amazon", "aws-marketplace", and "self" can be used to include AMIs owned by Amazon, AWS Marketplace, or AMIs owned by you, respectively.
        ###

        def set_Owner(value)
          set_input("Owner", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeImages Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeImagesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeImages



    ##############################################################################
    #
    # DescribeInstances
    #
    # Returns information on EC2 instances associated with your AWS account.
    #
    ##############################################################################

    class DescribeInstances < Choreography

      ####
      #  Create a new instance of the DescribeInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeInstancesInputSet
      ####
      def new_input_set()
        return DescribeInstancesInputSet.new()
      end

      def make_result_set()
        return DescribeInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID(s) of the instance(s) you want to monitor. This can be a comma-separated list of up to 10 instance IDs.  Returns all instances if this parameter is not specified.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeInstances



    ##############################################################################
    #
    # DescribeKeyPairs
    #
    # Describes one or more of your key pairs.
    #
    ##############################################################################

    class DescribeKeyPairs < Choreography

      ####
      #  Create a new instance of the DescribeKeyPairs Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeKeyPairs")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeKeyPairsInputSet
      ####
      def new_input_set()
        return DescribeKeyPairsInputSet.new()
      end

      def make_result_set()
        return DescribeKeyPairsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeKeyPairsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeKeyPairs
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeKeyPairsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow the results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the KeyName input for this Choreo. 
        # 
        # @param String - (optional, string) One or more key pair names to return. This can be a comma-separated list of up to 10 key pair namess.
        ###

        def set_KeyName(value)
          set_input("KeyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeKeyPairs Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeKeyPairsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeKeyPairs



    ##############################################################################
    #
    # DescribeRegions
    #
    # Describes one or more regions that are currently available to you.
    #
    ##############################################################################

    class DescribeRegions < Choreography

      ####
      #  Create a new instance of the DescribeRegions Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeRegions")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeRegionsInputSet
      ####
      def new_input_set()
        return DescribeRegionsInputSet.new()
      end

      def make_result_set()
        return DescribeRegionsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeRegionsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeRegions
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeRegionsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the RegionName input for this Choreo. 
        # 
        # @param String - (optional, string) One or more region names. This can be a comma-separated list of up to 10 region names.
        ###

        def set_RegionName(value)
          set_input("RegionName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeRegions Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeRegionsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeRegions



    ##############################################################################
    #
    # DescribeSecurityGroups
    #
    # Returns security group information associated with your AWS Account.
    #
    ##############################################################################

    class DescribeSecurityGroups < Choreography

      ####
      #  Create a new instance of the DescribeSecurityGroups Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeSecurityGroups")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeSecurityGroupsInputSet
      ####
      def new_input_set()
        return DescribeSecurityGroupsInputSet.new()
      end

      def make_result_set()
        return DescribeSecurityGroupsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeSecurityGroupsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeSecurityGroups
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeSecurityGroupsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the GroupId input for this Choreo. 
        # 
        # @param String - (optional, string) One or more security group IDs.  This can be a comma-separated list of up to 10 GroupIDs.  If no group names nor group IDs supplied, returns all groups.
        ###

        def set_GroupId(value)
          set_input("GroupId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (optional, string) One or more security group names. This can be a comma-separated list of up to 10 group names.  If no group names nor group IDs supplied, returns all groups.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeSecurityGroups Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeSecurityGroupsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeSecurityGroups



    ##############################################################################
    #
    # DescribeSnapshots
    #
    # Returns information on available Amazon EBS snapshots.
    #
    ##############################################################################

    class DescribeSnapshots < Choreography

      ####
      #  Create a new instance of the DescribeSnapshots Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeSnapshots")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeSnapshotsInputSet
      ####
      def new_input_set()
        return DescribeSnapshotsInputSet.new()
      end

      def make_result_set()
        return DescribeSnapshotsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeSnapshotsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeSnapshots
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeSnapshotsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the Owner input for this Choreo. 
        # 
        # @param String - (conditional, string) Returns the snapshots owned by the specified owner. Valid values are: "self" (the default), "amazon", or an AWS Account ID.
        ###

        def set_Owner(value)
          set_input("Owner", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RestorableBy input for this Choreo. 
        # 
        # @param String - (optional, string) AWS accounts ID that can create volumes from the snapshot.
        ###

        def set_RestorableBy(value)
          set_input("RestorableBy", value)
        end
        #### 
        # Set the value of the SnapshotId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the snapshot you want to retrieve. Returns all snapshots if not specified.
        ###

        def set_SnapshotId(value)
          set_input("SnapshotId", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeSnapshots Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeSnapshotsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeSnapshots



    ##############################################################################
    #
    # DescribeTags
    #
    # Describes one or more of the tags for your EC2 resources. 
    #
    ##############################################################################

    class DescribeTags < Choreography

      ####
      #  Create a new instance of the DescribeTags Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeTags")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeTagsInputSet
      ####
      def new_input_set()
        return DescribeTagsInputSet.new()
      end

      def make_result_set()
        return DescribeTagsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeTagsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeTags
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeTagsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeTags Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeTagsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeTags



    ##############################################################################
    #
    # DescribeVolumes
    #
    # Returns information for one or more of your Amazon EBS volumes.
    #
    ##############################################################################

    class DescribeVolumes < Choreography

      ####
      #  Create a new instance of the DescribeVolumes Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DescribeVolumes")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeVolumesInputSet
      ####
      def new_input_set()
        return DescribeVolumesInputSet.new()
      end

      def make_result_set()
        return DescribeVolumesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeVolumesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeVolumes
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeVolumesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the FilterName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of a supported filter to narrow results with.
        ###

        def set_FilterName(value)
          set_input("FilterName", value)
        end
        #### 
        # Set the value of the FilterValue input for this Choreo. 
        # 
        # @param String - (optional, string) A value for the specified filter.
        ###

        def set_FilterValue(value)
          set_input("FilterValue", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VolumeId input for this Choreo. 
        # 
        # @param String - (conditional, string) The ID of the volume to return. This can be a comma-separated list of up to 10 volume IDs.
        ###

        def set_VolumeId(value)
          set_input("VolumeId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeVolumes Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeVolumesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeVolumes



    ##############################################################################
    #
    # DetachVolume
    #
    # Detaches an Amazon EBS volume from an instance.
    #
    ##############################################################################

    class DetachVolume < Choreography

      ####
      #  Create a new instance of the DetachVolume Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DetachVolume")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DetachVolumeInputSet
      ####
      def new_input_set()
        return DetachVolumeInputSet.new()
      end

      def make_result_set()
        return DetachVolumeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DetachVolumeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DetachVolume
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DetachVolumeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Device input for this Choreo. 
        # 
        # @param String - (optional, string) The device name.
        ###

        def set_Device(value)
          set_input("Device", value)
        end
        #### 
        # Set the value of the Force input for this Choreo. 
        # 
        # @param Boolean - (required, boolean) Forces detachment if the previous detachment attempt did not occur cleanly. Use this option only as a last resort to detach a volume from a failed instance. Defaults to false.
        ###

        def set_Force(value)
          set_input("Force", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the instance.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VolumeId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of the volume.
        ###

        def set_VolumeId(value)
          set_input("VolumeId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DetachVolume Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DetachVolumeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DetachVolume



    ##############################################################################
    #
    # DisassociateAddress
    #
    # Disassociates an Elastic IP address from the instance or network interface it's associated with.
    #
    ##############################################################################

    class DisassociateAddress < Choreography

      ####
      #  Create a new instance of the DisassociateAddress Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/DisassociateAddress")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DisassociateAddressInputSet
      ####
      def new_input_set()
        return DisassociateAddressInputSet.new()
      end

      def make_result_set()
        return DisassociateAddressResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DisassociateAddressResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DisassociateAddress
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DisassociateAddressInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AssociationId input for this Choreo. 
        # 
        # @param String - (conditional, string) [EC2-VPC] The association ID corresponding to the Elastic IP address.
        ###

        def set_AssociationId(value)
          set_input("AssociationId", value)
        end
        #### 
        # Set the value of the PublicIp input for this Choreo. 
        # 
        # @param String - (conditional, string) [EC2-Classic] The Elastic IP address.
        ###

        def set_PublicIp(value)
          set_input("PublicIp", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DisassociateAddress Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DisassociateAddressResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DisassociateAddress



    ##############################################################################
    #
    # ImportKeyPair
    #
    # Imports the public key from an RSA key pair that you created with a third-party tool.
    #
    ##############################################################################

    class ImportKeyPair < Choreography

      ####
      #  Create a new instance of the ImportKeyPair Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/ImportKeyPair")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ImportKeyPairInputSet
      ####
      def new_input_set()
        return ImportKeyPairInputSet.new()
      end

      def make_result_set()
        return ImportKeyPairResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ImportKeyPairResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ImportKeyPair
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ImportKeyPairInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the KeyName input for this Choreo. 
        # 
        # @param String - (required, string) A unique name for the key pair.
        ###

        def set_KeyName(value)
          set_input("KeyName", value)
        end
        #### 
        # Set the value of the PublicKeyMaterial input for this Choreo. 
        # 
        # @param String - (required, string) The public key. You must Base64-encode the public key material before sending it to AWS.
        ###

        def set_PublicKeyMaterial(value)
          set_input("PublicKeyMaterial", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ImportKeyPair Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ImportKeyPairResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ImportKeyPair



    ##############################################################################
    #
    # ModifyImageAttribute
    #
    # Modifies an attribute of an AMI.
    #
    ##############################################################################

    class ModifyImageAttribute < Choreography

      ####
      #  Create a new instance of the ModifyImageAttribute Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/ModifyImageAttribute")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ModifyImageAttributeInputSet
      ####
      def new_input_set()
        return ModifyImageAttributeInputSet.new()
      end

      def make_result_set()
        return ModifyImageAttributeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ModifyImageAttributeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ModifyImageAttribute
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ModifyImageAttributeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AddGroup input for this Choreo. 
        # 
        # @param String - (optional, string) Adds the specified group to the image's list of launch permissions. The only valid value is "all".
        ###

        def set_AddGroup(value)
          set_input("AddGroup", value)
        end
        #### 
        # Set the value of the AddUserId input for this Choreo. 
        # 
        # @param String - (optional, string) Adds the specified AWS account ID to the AMI's list of launch permissions.
        ###

        def set_AddUserId(value)
          set_input("AddUserId", value)
        end
        #### 
        # Set the value of the Description input for this Choreo. 
        # 
        # @param String - (optional, string) Changes the AMI's description to the specified value.
        ###

        def set_Description(value)
          set_input("Description", value)
        end
        #### 
        # Set the value of the ImageId input for this Choreo. 
        # 
        # @param String - (required, string) The AMI ID.
        ###

        def set_ImageId(value)
          set_input("ImageId", value)
        end
        #### 
        # Set the value of the ProductCode input for this Choreo. 
        # 
        # @param String - (optional, string) Adds the specified product code to the specified Amazon S3-backed AMI. Once you add a product code to an AMI, it can't be removed.
        ###

        def set_ProductCode(value)
          set_input("ProductCode", value)
        end
        #### 
        # Set the value of the RemoveGroup input for this Choreo. 
        # 
        # @param String - (optional, string) Removes the specified group from the image's list of launch permissions. The only valid value is "all".
        ###

        def set_RemoveGroup(value)
          set_input("RemoveGroup", value)
        end
        #### 
        # Set the value of the RemoveUserId input for this Choreo. 
        # 
        # @param String - (optional, string) Removes the specified AWS account ID from the AMI's list of launch permissions.
        ###

        def set_RemoveUserId(value)
          set_input("RemoveUserId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ModifyImageAttribute Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ModifyImageAttributeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ModifyImageAttribute



    ##############################################################################
    #
    # MonitorInstances
    #
    # Enable monitoring for a specified instance.
    #
    ##############################################################################

    class MonitorInstances < Choreography

      ####
      #  Create a new instance of the MonitorInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/MonitorInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return MonitorInstancesInputSet
      ####
      def new_input_set()
        return MonitorInstancesInputSet.new()
      end

      def make_result_set()
        return MonitorInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = MonitorInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the MonitorInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class MonitorInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (required, string) The ID(s) of the instance(s) you want to monitor. This can be a comma-separated list of up to 10 instance IDs.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the MonitorInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class MonitorInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class MonitorInstances



    ##############################################################################
    #
    # RebootInstances
    #
    # Reboot an instance by specifying the instance id.
    #
    ##############################################################################

    class RebootInstances < Choreography

      ####
      #  Create a new instance of the RebootInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/RebootInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RebootInstancesInputSet
      ####
      def new_input_set()
        return RebootInstancesInputSet.new()
      end

      def make_result_set()
        return RebootInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RebootInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RebootInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RebootInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of the instance to reboot. This can be a comma-separated list of up to 10 instance IDs.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RebootInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RebootInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RebootInstances



    ##############################################################################
    #
    # RegisterImage
    #
    # Registers a new AMI with Amazon EC2.
    #
    ##############################################################################

    class RegisterImage < Choreography

      ####
      #  Create a new instance of the RegisterImage Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/RegisterImage")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RegisterImageInputSet
      ####
      def new_input_set()
        return RegisterImageInputSet.new()
      end

      def make_result_set()
        return RegisterImageResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RegisterImageResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RegisterImage
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RegisterImageInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Architecture input for this Choreo. 
        # 
        # @param String - (optional, string) The architecture of the image. Valid values are: i386 or x86_64. Defaults to i386.
        ###

        def set_Architecture(value)
          set_input("Architecture", value)
        end
        #### 
        # Set the value of the DeleteOnTermination input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Whether the Amazon EBS volume is deleted on instance termination. Defaults to true.
        ###

        def set_DeleteOnTermination(value)
          set_input("DeleteOnTermination", value)
        end
        #### 
        # Set the value of the Description input for this Choreo. 
        # 
        # @param String - (optional, string) The description of the AMI.
        ###

        def set_Description(value)
          set_input("Description", value)
        end
        #### 
        # Set the value of the DeviceName input for this Choreo. 
        # 
        # @param String - (conditional, string) If registering an Amazon EBS-backed AMI from a snapshot, specify this input with the root device name (e.g., /dev/sda1, or xvda), and SnapshotId.
        ###

        def set_DeviceName(value)
          set_input("DeviceName", value)
        end
        #### 
        # Set the value of the ImageLocation input for this Choreo. 
        # 
        # @param String - (conditional, string) Full path to your AMI manifest in Amazon S3 storage. Required if registering an Amazon-S3 backed AMI.
        ###

        def set_ImageLocation(value)
          set_input("ImageLocation", value)
        end
        #### 
        # Set the value of the Iops input for this Choreo. 
        # 
        # @param Integer - (conditional, integer) The number of I/O operations per second (IOPS) that the volume supports. A valid range is: 100 to 2000.
        ###

        def set_Iops(value)
          set_input("Iops", value)
        end
        #### 
        # Set the value of the KernelId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the kernel to select.
        ###

        def set_KernelId(value)
          set_input("KernelId", value)
        end
        #### 
        # Set the value of the Name input for this Choreo. 
        # 
        # @param String - (required, string) A name for your AMI.
        ###

        def set_Name(value)
          set_input("Name", value)
        end
        #### 
        # Set the value of the NoDevice input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies that no device should be mapped. Defaults to 1 (true).
        ###

        def set_NoDevice(value)
          set_input("NoDevice", value)
        end
        #### 
        # Set the value of the RamdiskId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the RAM disk to select.
        ###

        def set_RamdiskId(value)
          set_input("RamdiskId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RootDeviceName input for this Choreo. 
        # 
        # @param String - (conditional, string) The root device name (e.g., /dev/sda1, or xvda). Required if registering an Amazon EBS-backed AMI.
        ###

        def set_RootDeviceName(value)
          set_input("RootDeviceName", value)
        end
        #### 
        # Set the value of the SnapshotId input for this Choreo. 
        # 
        # @param String - (conditional, string) If registering an Amazon EBS-backed AMI from a snapshot, you must at least specify this input with the snapshot ID, and DeviceName with the root device name.
        ###

        def set_SnapshotId(value)
          set_input("SnapshotId", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VirtualName input for this Choreo. 
        # 
        # @param String - (optional, string) The virtual device name.
        ###

        def set_VirtualName(value)
          set_input("VirtualName", value)
        end
        #### 
        # Set the value of the VolumeSize input for this Choreo. 
        # 
        # @param Integer - (conditional, integer) The size of the volume, in GiBs. Required if you are not creating a volume from a snapshot.
        ###

        def set_VolumeSize(value)
          set_input("VolumeSize", value)
        end
        #### 
        # Set the value of the VolumeType input for this Choreo. 
        # 
        # @param String - (optional, string) The volume type. Valid values are: standard and io.
        ###

        def set_VolumeType(value)
          set_input("VolumeType", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RegisterImage Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RegisterImageResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RegisterImage



    ##############################################################################
    #
    # ReleaseAddress
    #
    # Releases an Elastic IP address allocated to your account.
    #
    ##############################################################################

    class ReleaseAddress < Choreography

      ####
      #  Create a new instance of the ReleaseAddress Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/ReleaseAddress")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ReleaseAddressInputSet
      ####
      def new_input_set()
        return ReleaseAddressInputSet.new()
      end

      def make_result_set()
        return ReleaseAddressResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ReleaseAddressResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ReleaseAddress
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ReleaseAddressInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AllocationId input for this Choreo. 
        # 
        # @param String - (conditional, string) [EC2-VPC] The allocation ID that AWS provided when you allocated the address for use with a VPC.
        ###

        def set_AllocationId(value)
          set_input("AllocationId", value)
        end
        #### 
        # Set the value of the PublicIp input for this Choreo. 
        # 
        # @param String - (conditional, string) [EC2-Classic] The Elastic IP address.
        ###

        def set_PublicIp(value)
          set_input("PublicIp", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ReleaseAddress Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ReleaseAddressResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ReleaseAddress



    ##############################################################################
    #
    # RevokeSecurityGroupIngress
    #
    # Removes one or more ingress rules from a security group.
    #
    ##############################################################################

    class RevokeSecurityGroupIngress < Choreography

      ####
      #  Create a new instance of the RevokeSecurityGroupIngress Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/RevokeSecurityGroupIngress")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RevokeSecurityGroupIngressInputSet
      ####
      def new_input_set()
        return RevokeSecurityGroupIngressInputSet.new()
      end

      def make_result_set()
        return RevokeSecurityGroupIngressResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RevokeSecurityGroupIngressResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RevokeSecurityGroupIngress
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RevokeSecurityGroupIngressInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupId input for this Choreo. 
        # 
        # @param String - (conditional, string) The ID of the security group to modify. Can be used instead of GroupName.
        ###

        def set_GroupId(value)
          set_input("GroupId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (conditional, string) The name of the security group to modify. Can be used instead of GroupId.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the IpPermissionsCidrIp input for this Choreo. 
        # 
        # @param String - (optional, string) The CIDR range. Cannot be used when specifying a source security group.
        ###

        def set_IpPermissionsCidrIp(value)
          set_input("IpPermissionsCidrIp", value)
        end
        #### 
        # Set the value of the IpPermissionsFromPort input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, you can use -1 to specify all ICMP types.
        ###

        def set_IpPermissionsFromPort(value)
          set_input("IpPermissionsFromPort", value)
        end
        #### 
        # Set the value of the IpPermissionsGroupId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the source security group. Cannot be used when specifying a CIDR IP address.
        ###

        def set_IpPermissionsGroupId(value)
          set_input("IpPermissionsGroupId", value)
        end
        #### 
        # Set the value of the IpPermissionsGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the source security group. Cannot be used when specifying a CIDR IP address.
        ###

        def set_IpPermissionsGroupName(value)
          set_input("IpPermissionsGroupName", value)
        end
        #### 
        # Set the value of the IpPermissionsIpProtocol input for this Choreo. 
        # 
        # @param String - (required, string) The IP protocol name or number. Valid values for EC2-Classic: tcp, udp, icmp (or 6, 17, 1). Valid values for EC2-VPC: tcp, udp, icmp, any valid protocol number (0-254), or -1 (to specify all).
        ###

        def set_IpPermissionsIpProtocol(value)
          set_input("IpPermissionsIpProtocol", value)
        end
        #### 
        # Set the value of the IpPermissionsToPort input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, you can use -1 to specify all ICMP codes for the given ICMP type.
        ###

        def set_IpPermissionsToPort(value)
          set_input("IpPermissionsToPort", value)
        end
        #### 
        # Set the value of the IpPermissionsUserId input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS account ID that owns the source security group. Cannot be used when specifying a CIDR IP address.
        ###

        def set_IpPermissionsUserId(value)
          set_input("IpPermissionsUserId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RevokeSecurityGroupIngress Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RevokeSecurityGroupIngressResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RevokeSecurityGroupIngress



    ##############################################################################
    #
    # RunInstances
    #
    # Launches the specified number of instances of an AMI for which you have permissions.
    #
    ##############################################################################

    class RunInstances < Choreography

      ####
      #  Create a new instance of the RunInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/RunInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RunInstancesInputSet
      ####
      def new_input_set()
        return RunInstancesInputSet.new()
      end

      def make_result_set()
        return RunInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RunInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RunInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RunInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DeleteOnTermination input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Sets whether the volume is deleted on instance termination. Defaults to "true". This is a Block Device Mapping parameter.
        ###

        def set_DeleteOnTermination(value)
          set_input("DeleteOnTermination", value)
        end
        #### 
        # Set the value of the DeviceName input for this Choreo. 
        # 
        # @param String - (optional, string) The device name exposed to the instance (i.e. /dev/sdh or xvdh). This is a Block Device Mapping parameter.
        ###

        def set_DeviceName(value)
          set_input("DeviceName", value)
        end
        #### 
        # Set the value of the ImageId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of the AMI.
        ###

        def set_ImageId(value)
          set_input("ImageId", value)
        end
        #### 
        # Set the value of the InstanceType input for this Choreo. 
        # 
        # @param String - (optional, string) The instance type (i.e. t1.micro, m1.small, m1.medium, m1.large, m1.xlarge). Default is m1.small.
        ###

        def set_InstanceType(value)
          set_input("InstanceType", value)
        end
        #### 
        # Set the value of the Iops input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The number of I/O operations per second (IOPS) that the volume supports. Valid range is 100 to 2000. This is a Block Device Mapping parameter.
        ###

        def set_Iops(value)
          set_input("Iops", value)
        end
        #### 
        # Set the value of the KernelId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the kernel with which to launch the instance.
        ###

        def set_KernelId(value)
          set_input("KernelId", value)
        end
        #### 
        # Set the value of the KeyName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the key pair to use.
        ###

        def set_KeyName(value)
          set_input("KeyName", value)
        end
        #### 
        # Set the value of the MaxCount input for this Choreo. 
        # 
        # @param Integer - (required, integer) The maximum number of instances to launch. If the value is more than Amazon EC2 can launch, the largest possible number above MinCount will be launched instead.
        ###

        def set_MaxCount(value)
          set_input("MaxCount", value)
        end
        #### 
        # Set the value of the MinCount input for this Choreo. 
        # 
        # @param Integer - (required, integer) The minimum number of instances to launch. If the value is more than Amazon EC2 can launch, no instances are launched at all.
        ###

        def set_MinCount(value)
          set_input("MinCount", value)
        end
        #### 
        # Set the value of the MonitoringEnabled input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Enables monitoring for the instance. Defaults to false.
        ###

        def set_MonitoringEnabled(value)
          set_input("MonitoringEnabled", value)
        end
        #### 
        # Set the value of the NoDevice input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Suppresses a device mapping. This is a Block Device Mapping parameter.
        ###

        def set_NoDevice(value)
          set_input("NoDevice", value)
        end
        #### 
        # Set the value of the PlacementAvailabilityZone input for this Choreo. 
        # 
        # @param String - (optional, string) The Availability Zone to launch the instance into.
        ###

        def set_PlacementAvailabilityZone(value)
          set_input("PlacementAvailabilityZone", value)
        end
        #### 
        # Set the value of the PlacementGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of an existing placement group you want to launch the instance into (for cluster instances).
        ###

        def set_PlacementGroupName(value)
          set_input("PlacementGroupName", value)
        end
        #### 
        # Set the value of the PlacementTenancy input for this Choreo. 
        # 
        # @param String - (optional, string) The tenancy of the instance. When set to "dedicated", the instance will run on single-tenant hardware and can only be launched into a VPC.
        ###

        def set_PlacementTenancy(value)
          set_input("PlacementTenancy", value)
        end
        #### 
        # Set the value of the RamdiskId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the RAM disk.
        ###

        def set_RamdiskId(value)
          set_input("RamdiskId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SecurityGroupId input for this Choreo. 
        # 
        # @param String - (optional, string) One or more security group IDs. This can be a comma-separated list of up to 10 security group ids.
        ###

        def set_SecurityGroupId(value)
          set_input("SecurityGroupId", value)
        end
        #### 
        # Set the value of the SecurityGroup input for this Choreo. 
        # 
        # @param String - (optional, string) One or more security group names. This can be a comma-separated list of up to 10 security group names.
        ###

        def set_SecurityGroup(value)
          set_input("SecurityGroup", value)
        end
        #### 
        # Set the value of the ShutdownBehavior input for this Choreo. 
        # 
        # @param String - (optional, string) Whether the instance stops or terminates on instance-initiated shutdown. Valid values are: stop and terminate.
        ###

        def set_ShutdownBehavior(value)
          set_input("ShutdownBehavior", value)
        end
        #### 
        # Set the value of the SnapshotId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the snapshot. This is a Block Device Mapping parameter.
        ###

        def set_SnapshotId(value)
          set_input("SnapshotId", value)
        end
        #### 
        # Set the value of the SubnetId input for this Choreo. 
        # 
        # @param String - (optional, string) The ID of the subnet to launch the instance into (i.e. subnet-dea63cb7).
        ###

        def set_SubnetId(value)
          set_input("SubnetId", value)
        end
        #### 
        # Set the value of the UserData input for this Choreo. 
        # 
        # @param String - (optional, string) The Base64-encoded MIME user data to be made available to the instance(s).
        ###

        def set_UserData(value)
          set_input("UserData", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VirtualName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the virtual device. This is a Block Device Mapping parameter.
        ###

        def set_VirtualName(value)
          set_input("VirtualName", value)
        end
        #### 
        # Set the value of the VolumeSize input for this Choreo. 
        # 
        # @param String - (optional, string) The size of the volume, in GiBs. Required unless you're creating the volume from a snapshot which indicates that the size will be the size of the snapshot. This is a Block Device Mapping parameter.
        ###

        def set_VolumeSize(value)
          set_input("VolumeSize", value)
        end
        #### 
        # Set the value of the VolumeType input for this Choreo. 
        # 
        # @param String - (optional, string) The volume type. Valid values are: standard (the default) and io1. This is a Block Device Mapping parameter.
        ###

        def set_VolumeType(value)
          set_input("VolumeType", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RunInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RunInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RunInstances



    ##############################################################################
    #
    # StartInstances
    #
    # Allows you to start an Amazon Machine Image by specifying its Instance ID.
    #
    ##############################################################################

    class StartInstances < Choreography

      ####
      #  Create a new instance of the StartInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/StartInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return StartInstancesInputSet
      ####
      def new_input_set()
        return StartInstancesInputSet.new()
      end

      def make_result_set()
        return StartInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = StartInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the StartInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class StartInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (required, string) The instance ID to start. This can be a comma-separated list of up to 10 instance IDs.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the StartInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class StartInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class StartInstances



    ##############################################################################
    #
    # StopInstances
    #
    # Stops an Amazon EBS-backed instance.
    #
    ##############################################################################

    class StopInstances < Choreography

      ####
      #  Create a new instance of the StopInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/StopInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return StopInstancesInputSet
      ####
      def new_input_set()
        return StopInstancesInputSet.new()
      end

      def make_result_set()
        return StopInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = StopInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the StopInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class StopInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (required, string) The instance ID to stop. This can be a comma-separated list of up to 10 instance IDs.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the StopInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class StopInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class StopInstances



    ##############################################################################
    #
    # TerminateInstances
    #
    # Shuts down one or more instances.
    #
    ##############################################################################

    class TerminateInstances < Choreography

      ####
      #  Create a new instance of the TerminateInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/TerminateInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return TerminateInstancesInputSet
      ####
      def new_input_set()
        return TerminateInstancesInputSet.new()
      end

      def make_result_set()
        return TerminateInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = TerminateInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the TerminateInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class TerminateInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (required, string) The instance ID to terminate. This can be a comma-separated list of up to 10 instance IDs.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the TerminateInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class TerminateInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class TerminateInstances



    ##############################################################################
    #
    # UnmonitorInstances
    #
    # Disable monitoring for a specified instance.
    #
    ##############################################################################

    class UnmonitorInstances < Choreography

      ####
      #  Create a new instance of the UnmonitorInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/EC2/UnmonitorInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UnmonitorInstancesInputSet
      ####
      def new_input_set()
        return UnmonitorInstancesInputSet.new()
      end

      def make_result_set()
        return UnmonitorInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UnmonitorInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UnmonitorInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UnmonitorInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceId input for this Choreo. 
        # 
        # @param String - (required, string) The ID(s) of the instance(s) you want to stop monitoring. This can be a comma-separated list of up to 10 instance IDs.
        ###

        def set_InstanceId(value)
          set_input("InstanceId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the EC2 endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UnmonitorInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UnmonitorInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UnmonitorInstances




    module Util



      ##############################################################################
      #
      # CheckUserRegion
      #
      # 
      #
      ##############################################################################

      class CheckUserRegion < Choreography

        ####
        #  Create a new instance of the CheckUserRegion Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/EC2/Util/CheckUserRegion")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return CheckUserRegionInputSet
        ####
        def new_input_set()
          return CheckUserRegionInputSet.new()
        end

        def make_result_set()
          return CheckUserRegionResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = CheckUserRegionResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the CheckUserRegion
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class CheckUserRegionInputSet < Choreography::InputSet

          #### 
          # Set the value of the UserRegion input for this Choreo. 
          # 
          # @param String - (conditional, string) The region that corresponds to the EC2 endpoint you wish to access.
          ###

          def set_UserRegion(value)
            set_input("UserRegion", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the CheckUserRegion Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class CheckUserRegionResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Endpoint" output from this Choreo execution
        	#
        	# @return String - (string) The regional endpoint for Amazon EC2.
        	####
        	def get_Endpoint()
        	  return @outputs["Endpoint"]
        	end
        end

      end # class CheckUserRegion




    end # module Util

  end # module EC2

  module FPS



    ##############################################################################
    #
    # GetAccountActivity
    #
    # Returns account transactions from a specified start date.
    #
    ##############################################################################

    class GetAccountActivity < Choreography

      ####
      #  Create a new instance of the GetAccountActivity Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/FPS/GetAccountActivity")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetAccountActivityInputSet
      ####
      def new_input_set()
        return GetAccountActivityInputSet.new()
      end

      def make_result_set()
        return GetAccountActivityResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetAccountActivityResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetAccountActivity
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetAccountActivityInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Endpoint input for this Choreo. 
        # 
        # @param String - (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
        ###

        def set_Endpoint(value)
          set_input("Endpoint", value)
        end
        #### 
        # Set the value of the StartDate input for this Choreo. 
        # 
        # @param String - (required, date) The first date of transactions to return (epoch timestamp in milliseconds or formatted like 2009-10-07Z).
        ###

        def set_StartDate(value)
          set_input("StartDate", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetAccountActivity Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetAccountActivityResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetAccountActivity



    ##############################################################################
    #
    # GetAccountBalance
    #
    # Retrieves the current balance of your account.
    #
    ##############################################################################

    class GetAccountBalance < Choreography

      ####
      #  Create a new instance of the GetAccountBalance Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/FPS/GetAccountBalance")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetAccountBalanceInputSet
      ####
      def new_input_set()
        return GetAccountBalanceInputSet.new()
      end

      def make_result_set()
        return GetAccountBalanceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetAccountBalanceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetAccountBalance
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetAccountBalanceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Endpoint input for this Choreo. 
        # 
        # @param String - (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
        ###

        def set_Endpoint(value)
          set_input("Endpoint", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetAccountBalance Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetAccountBalanceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetAccountBalance



    ##############################################################################
    #
    # GetTransaction
    #
    # Returns transactions for a specified subscription id.
    #
    ##############################################################################

    class GetTransaction < Choreography

      ####
      #  Create a new instance of the GetTransaction Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/FPS/GetTransaction")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetTransactionInputSet
      ####
      def new_input_set()
        return GetTransactionInputSet.new()
      end

      def make_result_set()
        return GetTransactionResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetTransactionResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetTransaction
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetTransactionInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Endpoint input for this Choreo. 
        # 
        # @param String - (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
        ###

        def set_Endpoint(value)
          set_input("Endpoint", value)
        end
        #### 
        # Set the value of the SubscriptionId input for this Choreo. 
        # 
        # @param String - (required, string) The ID for the subscription to retrieve the transactions for.
        ###

        def set_SubscriptionId(value)
          set_input("SubscriptionId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetTransaction Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetTransactionResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetTransaction



    ##############################################################################
    #
    # GetTransactionStatus
    #
    # Retrieves the status of a specified transaction.
    #
    ##############################################################################

    class GetTransactionStatus < Choreography

      ####
      #  Create a new instance of the GetTransactionStatus Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/FPS/GetTransactionStatus")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetTransactionStatusInputSet
      ####
      def new_input_set()
        return GetTransactionStatusInputSet.new()
      end

      def make_result_set()
        return GetTransactionStatusResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetTransactionStatusResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetTransactionStatus
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetTransactionStatusInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Endpoint input for this Choreo. 
        # 
        # @param String - (optional, string) The endpoint should be fps.sandbox.amazonaws.com when accessing the sandbox. Defaults to production setting:  fps.amazonaws.com.
        ###

        def set_Endpoint(value)
          set_input("Endpoint", value)
        end
        #### 
        # Set the value of the TransactionId input for this Choreo. 
        # 
        # @param String - (required, string) The ID for the transaction status you want to retrieve.
        ###

        def set_TransactionId(value)
          set_input("TransactionId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetTransactionStatus Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetTransactionStatusResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetTransactionStatus




  end # module FPS

  module IAM



    ##############################################################################
    #
    # AddRoleToInstanceProfile
    #
    # Adds the specified role to the specified instance profile.
    #
    ##############################################################################

    class AddRoleToInstanceProfile < Choreography

      ####
      #  Create a new instance of the AddRoleToInstanceProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/AddRoleToInstanceProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AddRoleToInstanceProfileInputSet
      ####
      def new_input_set()
        return AddRoleToInstanceProfileInputSet.new()
      end

      def make_result_set()
        return AddRoleToInstanceProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AddRoleToInstanceProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AddRoleToInstanceProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AddRoleToInstanceProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceProfileName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the instance profile to update.
        ###

        def set_InstanceProfileName(value)
          set_input("InstanceProfileName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the role to add.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AddRoleToInstanceProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AddRoleToInstanceProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AddRoleToInstanceProfile



    ##############################################################################
    #
    # AddUserToGroup
    #
    # Adds a specified user to a specified group.
    #
    ##############################################################################

    class AddUserToGroup < Choreography

      ####
      #  Create a new instance of the AddUserToGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/AddUserToGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AddUserToGroupInputSet
      ####
      def new_input_set()
        return AddUserToGroupInputSet.new()
      end

      def make_result_set()
        return AddUserToGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AddUserToGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AddUserToGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AddUserToGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the group that the user will be added to.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to add.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AddUserToGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AddUserToGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AddUserToGroup



    ##############################################################################
    #
    # ChangePassword
    #
    # Allows the authenticating user to change their password.
    #
    ##############################################################################

    class ChangePassword < Choreography

      ####
      #  Create a new instance of the ChangePassword Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ChangePassword")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ChangePasswordInputSet
      ####
      def new_input_set()
        return ChangePasswordInputSet.new()
      end

      def make_result_set()
        return ChangePasswordResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ChangePasswordResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ChangePassword
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ChangePasswordInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The user's Access Key ID.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The user's Secret Key ID.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the NewPassword input for this Choreo. 
        # 
        # @param String - (required, string) The new password.
        ###

        def set_NewPassword(value)
          set_input("NewPassword", value)
        end
        #### 
        # Set the value of the OldPassword input for this Choreo. 
        # 
        # @param String - (required, string) The old password.
        ###

        def set_OldPassword(value)
          set_input("OldPassword", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ChangePassword Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ChangePasswordResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ChangePassword



    ##############################################################################
    #
    # CreateAccessKey
    #
    # Creates a new AWS Secret Access Key and corresponding AWS Access Key ID for a specified user.
    #
    ##############################################################################

    class CreateAccessKey < Choreography

      ####
      #  Create a new instance of the CreateAccessKey Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/CreateAccessKey")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateAccessKeyInputSet
      ####
      def new_input_set()
        return CreateAccessKeyInputSet.new()
      end

      def make_result_set()
        return CreateAccessKeyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateAccessKeyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateAccessKey
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateAccessKeyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (conditional, string) The user name that the new key will belong to.  If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request. 
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateAccessKey Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateAccessKeyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateAccessKey



    ##############################################################################
    #
    # CreateAccountAlias
    #
    # Creates an alias for your AWS account.
    #
    ##############################################################################

    class CreateAccountAlias < Choreography

      ####
      #  Create a new instance of the CreateAccountAlias Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/CreateAccountAlias")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateAccountAliasInputSet
      ####
      def new_input_set()
        return CreateAccountAliasInputSet.new()
      end

      def make_result_set()
        return CreateAccountAliasResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateAccountAliasResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateAccountAlias
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateAccountAliasInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AccountAlias input for this Choreo. 
        # 
        # @param String - (required, string) Name of the account alias to create. Must contain only digits, lowercase letters, and hyphens (-), but cannot begin or end with a hyphen. Ex.: alias-account-name.
        ###

        def set_AccountAlias(value)
          set_input("AccountAlias", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateAccountAlias Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateAccountAliasResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateAccountAlias



    ##############################################################################
    #
    # CreateGroup
    #
    # Creates a new group in your AWS account.
    #
    ##############################################################################

    class CreateGroup < Choreography

      ####
      #  Create a new instance of the CreateGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/CreateGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateGroupInputSet
      ####
      def new_input_set()
        return CreateGroupInputSet.new()
      end

      def make_result_set()
        return CreateGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the group to create.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the Path input for this Choreo. 
        # 
        # @param String - (optional, string) The path to the group. If it is not included, it defaults to a slash (/).
        ###

        def set_Path(value)
          set_input("Path", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateGroup



    ##############################################################################
    #
    # CreateInstanceProfile
    #
    # Creates a new instance profile.
    #
    ##############################################################################

    class CreateInstanceProfile < Choreography

      ####
      #  Create a new instance of the CreateInstanceProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/CreateInstanceProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateInstanceProfileInputSet
      ####
      def new_input_set()
        return CreateInstanceProfileInputSet.new()
      end

      def make_result_set()
        return CreateInstanceProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateInstanceProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateInstanceProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateInstanceProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceProfileName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the instance profile to create.
        ###

        def set_InstanceProfileName(value)
          set_input("InstanceProfileName", value)
        end
        #### 
        # Set the value of the Path input for this Choreo. 
        # 
        # @param String - (optional, string) The path for the user name. If it is not included, it defaults to a slash (/).
        ###

        def set_Path(value)
          set_input("Path", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateInstanceProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateInstanceProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateInstanceProfile



    ##############################################################################
    #
    # CreateLoginProfile
    #
    # Creates a password for the specified user, which gives the user the ability to access AWS services through the AWS Management Console.
    #
    ##############################################################################

    class CreateLoginProfile < Choreography

      ####
      #  Create a new instance of the CreateLoginProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/CreateLoginProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateLoginProfileInputSet
      ####
      def new_input_set()
        return CreateLoginProfileInputSet.new()
      end

      def make_result_set()
        return CreateLoginProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateLoginProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateLoginProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateLoginProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the MustChangePassword input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Whether or not the user is required to change their password immediately.  Valid values are true/false or 1/0.
        ###

        def set_MustChangePassword(value)
          set_input("MustChangePassword", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, string) The new password for the user.
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to create a password for.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateLoginProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateLoginProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateLoginProfile



    ##############################################################################
    #
    # CreateUser
    #
    # Creates a new user for your AWS account.
    #
    ##############################################################################

    class CreateUser < Choreography

      ####
      #  Create a new instance of the CreateUser Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/CreateUser")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateUserInputSet
      ####
      def new_input_set()
        return CreateUserInputSet.new()
      end

      def make_result_set()
        return CreateUserResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateUserResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateUser
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateUserInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Path input for this Choreo. 
        # 
        # @param String - (optional, string) The path for the user name. If it is not included, it defaults to a slash (/).
        ###

        def set_Path(value)
          set_input("Path", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to create.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateUser Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateUserResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateUser



    ##############################################################################
    #
    # CreateVirtualMFADevice
    #
    # Creates a new virtual MFA device for the AWS account.
    #
    ##############################################################################

    class CreateVirtualMFADevice < Choreography

      ####
      #  Create a new instance of the CreateVirtualMFADevice Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/CreateVirtualMFADevice")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateVirtualMFADeviceInputSet
      ####
      def new_input_set()
        return CreateVirtualMFADeviceInputSet.new()
      end

      def make_result_set()
        return CreateVirtualMFADeviceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateVirtualMFADeviceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateVirtualMFADevice
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateVirtualMFADeviceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Path input for this Choreo. 
        # 
        # @param String - (optional, string) The path for the virtual MFA device. If it is not included, it defaults to a slash (/).
        ###

        def set_Path(value)
          set_input("Path", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the VirtualMFADeviceName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.
        ###

        def set_VirtualMFADeviceName(value)
          set_input("VirtualMFADeviceName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateVirtualMFADevice Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateVirtualMFADeviceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateVirtualMFADevice



    ##############################################################################
    #
    # DeactivateMFADevice
    #
    # Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.
    #
    ##############################################################################

    class DeactivateMFADevice < Choreography

      ####
      #  Create a new instance of the DeactivateMFADevice Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeactivateMFADevice")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeactivateMFADeviceInputSet
      ####
      def new_input_set()
        return DeactivateMFADeviceInputSet.new()
      end

      def make_result_set()
        return DeactivateMFADeviceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeactivateMFADeviceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeactivateMFADevice
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeactivateMFADeviceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SerialNumber input for this Choreo. 
        # 
        # @param String - (required, string) The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.
        ###

        def set_SerialNumber(value)
          set_input("SerialNumber", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the user whose MFA device you want to deactivate.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeactivateMFADevice Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeactivateMFADeviceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeactivateMFADevice



    ##############################################################################
    #
    # DeleteAccessKey
    #
    # Deletes the access key associated with the specified user.
    #
    ##############################################################################

    class DeleteAccessKey < Choreography

      ####
      #  Create a new instance of the DeleteAccessKey Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteAccessKey")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteAccessKeyInputSet
      ####
      def new_input_set()
        return DeleteAccessKeyInputSet.new()
      end

      def make_result_set()
        return DeleteAccessKeyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteAccessKeyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteAccessKey
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteAccessKeyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) An AWS Access Key ID with sufficient permissions to delete the specified AccessKeyId.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID associated with the AWS AccessKey ID with sufficient permissions to delete the AccessKeyId.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AccessKeyId input for this Choreo. 
        # 
        # @param String - (conditional, string) The Access Key ID for the Access Key ID and Secret Access Key you want to delete.
        ###

        def set_AccessKeyId(value)
          set_input("AccessKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (conditional, string) Name of the user whose key you want to delete.  If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteAccessKey Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteAccessKeyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteAccessKey



    ##############################################################################
    #
    # DeleteAccountAlias
    #
    # Deletes the specified AWS account alias.
    #
    ##############################################################################

    class DeleteAccountAlias < Choreography

      ####
      #  Create a new instance of the DeleteAccountAlias Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteAccountAlias")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteAccountAliasInputSet
      ####
      def new_input_set()
        return DeleteAccountAliasInputSet.new()
      end

      def make_result_set()
        return DeleteAccountAliasResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteAccountAliasResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteAccountAlias
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteAccountAliasInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AccountAlias input for this Choreo. 
        # 
        # @param String - (required, string) Name of the account alias to delete.
        ###

        def set_AccountAlias(value)
          set_input("AccountAlias", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteAccountAlias Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteAccountAliasResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteAccountAlias



    ##############################################################################
    #
    # DeleteAccountPasswordPolicy
    #
    # Deletes the password policy for the AWS account.
    #
    ##############################################################################

    class DeleteAccountPasswordPolicy < Choreography

      ####
      #  Create a new instance of the DeleteAccountPasswordPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteAccountPasswordPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteAccountPasswordPolicyInputSet
      ####
      def new_input_set()
        return DeleteAccountPasswordPolicyInputSet.new()
      end

      def make_result_set()
        return DeleteAccountPasswordPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteAccountPasswordPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteAccountPasswordPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteAccountPasswordPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteAccountPasswordPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteAccountPasswordPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteAccountPasswordPolicy



    ##############################################################################
    #
    # DeleteGroup
    #
    # Deletes a specified group.
    #
    ##############################################################################

    class DeleteGroup < Choreography

      ####
      #  Create a new instance of the DeleteGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteGroupInputSet
      ####
      def new_input_set()
        return DeleteGroupInputSet.new()
      end

      def make_result_set()
        return DeleteGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the group to delete.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteGroup



    ##############################################################################
    #
    # DeleteGroupPolicy
    #
    # Deletes the specified policy that is associated with the specified group.
    #
    ##############################################################################

    class DeleteGroupPolicy < Choreography

      ####
      #  Create a new instance of the DeleteGroupPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteGroupPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteGroupPolicyInputSet
      ####
      def new_input_set()
        return DeleteGroupPolicyInputSet.new()
      end

      def make_result_set()
        return DeleteGroupPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteGroupPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteGroupPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteGroupPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the group the policy is associated with.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the policy document.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteGroupPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteGroupPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteGroupPolicy



    ##############################################################################
    #
    # DeleteInstanceProfile
    #
    # Deletes the specified instance profile. 
    #
    ##############################################################################

    class DeleteInstanceProfile < Choreography

      ####
      #  Create a new instance of the DeleteInstanceProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteInstanceProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteInstanceProfileInputSet
      ####
      def new_input_set()
        return DeleteInstanceProfileInputSet.new()
      end

      def make_result_set()
        return DeleteInstanceProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteInstanceProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteInstanceProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteInstanceProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceProfileName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the instance profile to delete.
        ###

        def set_InstanceProfileName(value)
          set_input("InstanceProfileName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteInstanceProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteInstanceProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteInstanceProfile



    ##############################################################################
    #
    # DeleteLoginProfile
    #
    # Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management Console.
    #
    ##############################################################################

    class DeleteLoginProfile < Choreography

      ####
      #  Create a new instance of the DeleteLoginProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteLoginProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteLoginProfileInputSet
      ####
      def new_input_set()
        return DeleteLoginProfileInputSet.new()
      end

      def make_result_set()
        return DeleteLoginProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteLoginProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteLoginProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteLoginProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the user whose login profile you want to delete.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteLoginProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteLoginProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteLoginProfile



    ##############################################################################
    #
    # DeleteRole
    #
    # Deletes the specified role.
    #
    ##############################################################################

    class DeleteRole < Choreography

      ####
      #  Create a new instance of the DeleteRole Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteRole")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteRoleInputSet
      ####
      def new_input_set()
        return DeleteRoleInputSet.new()
      end

      def make_result_set()
        return DeleteRoleResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteRoleResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteRole
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteRoleInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the role to delete.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteRole Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteRoleResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteRole



    ##############################################################################
    #
    # DeleteRolePolicy
    #
    # Deletes the specified policy associated with the specified role.
    #
    ##############################################################################

    class DeleteRolePolicy < Choreography

      ####
      #  Create a new instance of the DeleteRolePolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteRolePolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteRolePolicyInputSet
      ####
      def new_input_set()
        return DeleteRolePolicyInputSet.new()
      end

      def make_result_set()
        return DeleteRolePolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteRolePolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteRolePolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteRolePolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the policy document.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the role the associated with the policy.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteRolePolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteRolePolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteRolePolicy



    ##############################################################################
    #
    # DeleteServerCertificate
    #
    # Deletes the specified server certificate.
    #
    ##############################################################################

    class DeleteServerCertificate < Choreography

      ####
      #  Create a new instance of the DeleteServerCertificate Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteServerCertificate")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteServerCertificateInputSet
      ####
      def new_input_set()
        return DeleteServerCertificateInputSet.new()
      end

      def make_result_set()
        return DeleteServerCertificateResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteServerCertificateResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteServerCertificate
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteServerCertificateInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the ServerCertificateName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the server certificate you want to delete.
        ###

        def set_ServerCertificateName(value)
          set_input("ServerCertificateName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteServerCertificate Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteServerCertificateResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteServerCertificate



    ##############################################################################
    #
    # DeleteSigningCertificate
    #
    # Deletes the specified signing certificate associated with the specified user.
    #
    ##############################################################################

    class DeleteSigningCertificate < Choreography

      ####
      #  Create a new instance of the DeleteSigningCertificate Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteSigningCertificate")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteSigningCertificateInputSet
      ####
      def new_input_set()
        return DeleteSigningCertificateInputSet.new()
      end

      def make_result_set()
        return DeleteSigningCertificateResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteSigningCertificateResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteSigningCertificate
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteSigningCertificateInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the CertificateId input for this Choreo. 
        # 
        # @param String - (required, string) ID of the signing certificate to delete.
        ###

        def set_CertificateId(value)
          set_input("CertificateId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (optional, string) Name of the user the signing certificate belongs to.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteSigningCertificate Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteSigningCertificateResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteSigningCertificate



    ##############################################################################
    #
    # DeleteUser
    #
    # Deletes a specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached policies.
    #
    ##############################################################################

    class DeleteUser < Choreography

      ####
      #  Create a new instance of the DeleteUser Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteUser")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteUserInputSet
      ####
      def new_input_set()
        return DeleteUserInputSet.new()
      end

      def make_result_set()
        return DeleteUserResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteUserResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteUser
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteUserInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to delete.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteUser Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteUserResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteUser



    ##############################################################################
    #
    # DeleteUserPolicy
    #
    # Deletes the specified policy associated with the specified user.
    #
    ##############################################################################

    class DeleteUserPolicy < Choreography

      ####
      #  Create a new instance of the DeleteUserPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteUserPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteUserPolicyInputSet
      ####
      def new_input_set()
        return DeleteUserPolicyInputSet.new()
      end

      def make_result_set()
        return DeleteUserPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteUserPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteUserPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteUserPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the user policy document you would like to delete.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the user to delete the specified policy for.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteUserPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteUserPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteUserPolicy



    ##############################################################################
    #
    # DeleteVirtualMFADevice
    #
    # Deletes a virtual MFA device.  You must deactivate a user's virtual MFA device before you can delete it.
    #
    ##############################################################################

    class DeleteVirtualMFADevice < Choreography

      ####
      #  Create a new instance of the DeleteVirtualMFADevice Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/DeleteVirtualMFADevice")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteVirtualMFADeviceInputSet
      ####
      def new_input_set()
        return DeleteVirtualMFADeviceInputSet.new()
      end

      def make_result_set()
        return DeleteVirtualMFADeviceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteVirtualMFADeviceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteVirtualMFADevice
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteVirtualMFADeviceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SerialNumber input for this Choreo. 
        # 
        # @param String - (required, string) The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.
        ###

        def set_SerialNumber(value)
          set_input("SerialNumber", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteVirtualMFADevice Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteVirtualMFADeviceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteVirtualMFADevice



    ##############################################################################
    #
    # EnableMFADevice
    #
    # Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every subsequent login by the user name associated with the device.
    #
    ##############################################################################

    class EnableMFADevice < Choreography

      ####
      #  Create a new instance of the EnableMFADevice Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/EnableMFADevice")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return EnableMFADeviceInputSet
      ####
      def new_input_set()
        return EnableMFADeviceInputSet.new()
      end

      def make_result_set()
        return EnableMFADeviceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = EnableMFADeviceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the EnableMFADevice
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class EnableMFADeviceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AuthenticationCode1 input for this Choreo. 
        # 
        # @param String - (required, string) An authentication code emitted by the device.
        ###

        def set_AuthenticationCode1(value)
          set_input("AuthenticationCode1", value)
        end
        #### 
        # Set the value of the AuthenticationCode2 input for this Choreo. 
        # 
        # @param String - (required, string) A subsequent authentication code emitted by the device.
        ###

        def set_AuthenticationCode2(value)
          set_input("AuthenticationCode2", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SerialNumber input for this Choreo. 
        # 
        # @param String - (required, string) The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.
        ###

        def set_SerialNumber(value)
          set_input("SerialNumber", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the user for whom you want to enable the MFA device.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the EnableMFADevice Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class EnableMFADeviceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class EnableMFADevice



    ##############################################################################
    #
    # GetAccountPasswordPolicy
    #
    # Retrieves the password policy for the AWS account.
    #
    ##############################################################################

    class GetAccountPasswordPolicy < Choreography

      ####
      #  Create a new instance of the GetAccountPasswordPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetAccountPasswordPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetAccountPasswordPolicyInputSet
      ####
      def new_input_set()
        return GetAccountPasswordPolicyInputSet.new()
      end

      def make_result_set()
        return GetAccountPasswordPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetAccountPasswordPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetAccountPasswordPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetAccountPasswordPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetAccountPasswordPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetAccountPasswordPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetAccountPasswordPolicy



    ##############################################################################
    #
    # GetAccountSummary
    #
    # Retrieves account level information about account entity usage and IAM quotas.
    #
    ##############################################################################

    class GetAccountSummary < Choreography

      ####
      #  Create a new instance of the GetAccountSummary Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetAccountSummary")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetAccountSummaryInputSet
      ####
      def new_input_set()
        return GetAccountSummaryInputSet.new()
      end

      def make_result_set()
        return GetAccountSummaryResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetAccountSummaryResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetAccountSummary
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetAccountSummaryInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetAccountSummary Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetAccountSummaryResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetAccountSummary



    ##############################################################################
    #
    # GetGroup
    #
    # Returns a list of users that are in the specified group.
    #
    ##############################################################################

    class GetGroup < Choreography

      ####
      #  Create a new instance of the GetGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetGroupInputSet
      ####
      def new_input_set()
        return GetGroupInputSet.new()
      end

      def make_result_set()
        return GetGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the group to return.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetGroup



    ##############################################################################
    #
    # GetGroupPolicy
    #
    # Retrieves the specified policy document for the specified group.
    #
    ##############################################################################

    class GetGroupPolicy < Choreography

      ####
      #  Create a new instance of the GetGroupPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetGroupPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetGroupPolicyInputSet
      ####
      def new_input_set()
        return GetGroupPolicyInputSet.new()
      end

      def make_result_set()
        return GetGroupPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetGroupPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetGroupPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetGroupPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the group to return.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the policy document to get.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetGroupPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetGroupPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetGroupPolicy



    ##############################################################################
    #
    # GetInstanceProfile
    #
    # Retrieves information about the specified instance profile, including the instance profile's path, ARN, and RoleId.
    #
    ##############################################################################

    class GetInstanceProfile < Choreography

      ####
      #  Create a new instance of the GetInstanceProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetInstanceProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetInstanceProfileInputSet
      ####
      def new_input_set()
        return GetInstanceProfileInputSet.new()
      end

      def make_result_set()
        return GetInstanceProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetInstanceProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetInstanceProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetInstanceProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceProfileName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the instance profile to get information about.
        ###

        def set_InstanceProfileName(value)
          set_input("InstanceProfileName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetInstanceProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetInstanceProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetInstanceProfile



    ##############################################################################
    #
    # GetLoginProfile
    #
    # Retrieves the user name and password create date for the specified user.
    #
    ##############################################################################

    class GetLoginProfile < Choreography

      ####
      #  Create a new instance of the GetLoginProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetLoginProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetLoginProfileInputSet
      ####
      def new_input_set()
        return GetLoginProfileInputSet.new()
      end

      def make_result_set()
        return GetLoginProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetLoginProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetLoginProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetLoginProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the user whose login profile you want to retrieve.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetLoginProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetLoginProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetLoginProfile



    ##############################################################################
    #
    # GetRole
    #
    # Retrieves information about the specified role, including the role's path, ARN, RoleId, and the policy granting permission to EC2 to assume the role.
    #
    ##############################################################################

    class GetRole < Choreography

      ####
      #  Create a new instance of the GetRole Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetRole")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetRoleInputSet
      ####
      def new_input_set()
        return GetRoleInputSet.new()
      end

      def make_result_set()
        return GetRoleResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetRoleResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetRole
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetRoleInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the role to get information about.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetRole Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetRoleResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetRole



    ##############################################################################
    #
    # GetRolePolicy
    #
    # Retrieves the specified policy document for the specified role.
    #
    ##############################################################################

    class GetRolePolicy < Choreography

      ####
      #  Create a new instance of the GetRolePolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetRolePolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetRolePolicyInputSet
      ####
      def new_input_set()
        return GetRolePolicyInputSet.new()
      end

      def make_result_set()
        return GetRolePolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetRolePolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetRolePolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetRolePolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the policy document to get.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the role associated with the policy.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetRolePolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetRolePolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetRolePolicy



    ##############################################################################
    #
    # GetServerCertificate
    #
    # Retrieves information about the specified server certificate.
    #
    ##############################################################################

    class GetServerCertificate < Choreography

      ####
      #  Create a new instance of the GetServerCertificate Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetServerCertificate")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetServerCertificateInputSet
      ####
      def new_input_set()
        return GetServerCertificateInputSet.new()
      end

      def make_result_set()
        return GetServerCertificateResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetServerCertificateResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetServerCertificate
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetServerCertificateInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the ServerCertificateName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the server certificate you want to retrieve information about.
        ###

        def set_ServerCertificateName(value)
          set_input("ServerCertificateName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetServerCertificate Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetServerCertificateResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetServerCertificate



    ##############################################################################
    #
    # GetUser
    #
    # Retrieves details about a specified user, including the user's path, GUID, and ARN.
    #
    ##############################################################################

    class GetUser < Choreography

      ####
      #  Create a new instance of the GetUser Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetUser")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetUserInputSet
      ####
      def new_input_set()
        return GetUserInputSet.new()
      end

      def make_result_set()
        return GetUserResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetUserResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetUser
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetUserInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (conditional, string) The name of the user to retrieve. If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetUser Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetUserResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetUser



    ##############################################################################
    #
    # GetUserPolicy
    #
    # Retrieves the specified policy document for the specified user.
    #
    ##############################################################################

    class GetUserPolicy < Choreography

      ####
      #  Create a new instance of the GetUserPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/GetUserPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetUserPolicyInputSet
      ####
      def new_input_set()
        return GetUserPolicyInputSet.new()
      end

      def make_result_set()
        return GetUserPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetUserPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetUserPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetUserPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the policy document to get.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to retrieve.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetUserPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetUserPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetUserPolicy



    ##############################################################################
    #
    # ListAccessKeys
    #
    # Returns information about the Access Key IDs associated with the specified user.
    #
    ##############################################################################

    class ListAccessKeys < Choreography

      ####
      #  Create a new instance of the ListAccessKeys Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListAccessKeys")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListAccessKeysInputSet
      ####
      def new_input_set()
        return ListAccessKeysInputSet.new()
      end

      def make_result_set()
        return ListAccessKeysResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListAccessKeysResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListAccessKeys
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListAccessKeysInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (conditional, string) Name of the user.  If the UserName field is not specified, the UserName is determined implicitly based on the AWS Access Key ID used to sign the request.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListAccessKeys Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListAccessKeysResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListAccessKeys



    ##############################################################################
    #
    # ListAccountAliases
    #
    # Lists the account aliases associated with the account. 
    #
    ##############################################################################

    class ListAccountAliases < Choreography

      ####
      #  Create a new instance of the ListAccountAliases Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListAccountAliases")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListAccountAliasesInputSet
      ####
      def new_input_set()
        return ListAccountAliasesInputSet.new()
      end

      def make_result_set()
        return ListAccountAliasesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListAccountAliasesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListAccountAliases
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListAccountAliasesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListAccountAliases Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListAccountAliasesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListAccountAliases



    ##############################################################################
    #
    # ListGroupPolicies
    #
    # Lists the names of the policies associated with the specified group.
    #
    ##############################################################################

    class ListGroupPolicies < Choreography

      ####
      #  Create a new instance of the ListGroupPolicies Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListGroupPolicies")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListGroupPoliciesInputSet
      ####
      def new_input_set()
        return ListGroupPoliciesInputSet.new()
      end

      def make_result_set()
        return ListGroupPoliciesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListGroupPoliciesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListGroupPolicies
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListGroupPoliciesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the group to list policies for.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListGroupPolicies Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListGroupPoliciesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListGroupPolicies



    ##############################################################################
    #
    # ListGroups
    #
    # Returns a list of groups and allows you to filter the results with a specific path prefix.
    #
    ##############################################################################

    class ListGroups < Choreography

      ####
      #  Create a new instance of the ListGroups Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListGroups")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListGroupsInputSet
      ####
      def new_input_set()
        return ListGroupsInputSet.new()
      end

      def make_result_set()
        return ListGroupsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListGroupsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListGroups
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListGroupsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the PathPrefix input for this Choreo. 
        # 
        # @param String - (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
        ###

        def set_PathPrefix(value)
          set_input("PathPrefix", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListGroups Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListGroupsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListGroups



    ##############################################################################
    #
    # ListGroupsForUser
    #
    # Lists the groups the specified user belongs to.
    #
    ##############################################################################

    class ListGroupsForUser < Choreography

      ####
      #  Create a new instance of the ListGroupsForUser Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListGroupsForUser")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListGroupsForUserInputSet
      ####
      def new_input_set()
        return ListGroupsForUserInputSet.new()
      end

      def make_result_set()
        return ListGroupsForUserResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListGroupsForUserResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListGroupsForUser
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListGroupsForUserInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the PathPrefix input for this Choreo. 
        # 
        # @param String - (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
        ###

        def set_PathPrefix(value)
          set_input("PathPrefix", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) Lists the groups the specified user belongs to.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListGroupsForUser Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListGroupsForUserResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListGroupsForUser



    ##############################################################################
    #
    # ListInstanceProfiles
    #
    # Lists the instance profiles that have the specified path prefix.
    #
    ##############################################################################

    class ListInstanceProfiles < Choreography

      ####
      #  Create a new instance of the ListInstanceProfiles Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListInstanceProfiles")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListInstanceProfilesInputSet
      ####
      def new_input_set()
        return ListInstanceProfilesInputSet.new()
      end

      def make_result_set()
        return ListInstanceProfilesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListInstanceProfilesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListInstanceProfiles
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListInstanceProfilesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the PathPrefix input for this Choreo. 
        # 
        # @param String - (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
        ###

        def set_PathPrefix(value)
          set_input("PathPrefix", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListInstanceProfiles Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListInstanceProfilesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListInstanceProfiles



    ##############################################################################
    #
    # ListInstanceProfilesForRole
    #
    # Lists the names of the policies associated with the specified role. 
    #
    ##############################################################################

    class ListInstanceProfilesForRole < Choreography

      ####
      #  Create a new instance of the ListInstanceProfilesForRole Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListInstanceProfilesForRole")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListInstanceProfilesForRoleInputSet
      ####
      def new_input_set()
        return ListInstanceProfilesForRoleInputSet.new()
      end

      def make_result_set()
        return ListInstanceProfilesForRoleResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListInstanceProfilesForRoleResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListInstanceProfilesForRole
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListInstanceProfilesForRoleInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the role to list instance profiles for.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListInstanceProfilesForRole Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListInstanceProfilesForRoleResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListInstanceProfilesForRole



    ##############################################################################
    #
    # ListMFADevices
    #
    # Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS Access Key ID signing the request.
    #
    ##############################################################################

    class ListMFADevices < Choreography

      ####
      #  Create a new instance of the ListMFADevices Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListMFADevices")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListMFADevicesInputSet
      ####
      def new_input_set()
        return ListMFADevicesInputSet.new()
      end

      def make_result_set()
        return ListMFADevicesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListMFADevicesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListMFADevices
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListMFADevicesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (optional, string) Name of the user whose MFA devices you want to list.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListMFADevices Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListMFADevicesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListMFADevices



    ##############################################################################
    #
    # ListRolePolicies
    #
    # Lists the names of the policies associated with the specified role. 
    #
    ##############################################################################

    class ListRolePolicies < Choreography

      ####
      #  Create a new instance of the ListRolePolicies Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListRolePolicies")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListRolePoliciesInputSet
      ####
      def new_input_set()
        return ListRolePoliciesInputSet.new()
      end

      def make_result_set()
        return ListRolePoliciesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListRolePoliciesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListRolePolicies
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListRolePoliciesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the Role that you would like to retrieve policies for.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListRolePolicies Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListRolePoliciesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListRolePolicies



    ##############################################################################
    #
    # ListRoles
    #
    # Lists the roles that have the specified path prefix. If there are none, the action returns an empty list.
    #
    ##############################################################################

    class ListRoles < Choreography

      ####
      #  Create a new instance of the ListRoles Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListRoles")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListRolesInputSet
      ####
      def new_input_set()
        return ListRolesInputSet.new()
      end

      def make_result_set()
        return ListRolesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListRolesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListRoles
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListRolesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the PathPrefix input for this Choreo. 
        # 
        # @param String - (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
        ###

        def set_PathPrefix(value)
          set_input("PathPrefix", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListRoles Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListRolesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListRoles



    ##############################################################################
    #
    # ListServerCertificates
    #
    # Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list.
    #
    ##############################################################################

    class ListServerCertificates < Choreography

      ####
      #  Create a new instance of the ListServerCertificates Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListServerCertificates")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListServerCertificatesInputSet
      ####
      def new_input_set()
        return ListServerCertificatesInputSet.new()
      end

      def make_result_set()
        return ListServerCertificatesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListServerCertificatesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListServerCertificates
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListServerCertificatesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the PathPrefix input for this Choreo. 
        # 
        # @param String - (optional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all groups whose path starts with that string. If it is not included, it defaults to a slash (/).
        ###

        def set_PathPrefix(value)
          set_input("PathPrefix", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListServerCertificates Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListServerCertificatesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListServerCertificates



    ##############################################################################
    #
    # ListSigningCertificates
    #
    # Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty list.
    #
    ##############################################################################

    class ListSigningCertificates < Choreography

      ####
      #  Create a new instance of the ListSigningCertificates Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListSigningCertificates")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListSigningCertificatesInputSet
      ####
      def new_input_set()
        return ListSigningCertificatesInputSet.new()
      end

      def make_result_set()
        return ListSigningCertificatesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListSigningCertificatesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListSigningCertificates
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListSigningCertificatesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the user.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListSigningCertificates Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListSigningCertificatesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListSigningCertificates



    ##############################################################################
    #
    # ListUserPolicies
    #
    # Lists the names of the policies associated with the specified user.
    #
    ##############################################################################

    class ListUserPolicies < Choreography

      ####
      #  Create a new instance of the ListUserPolicies Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListUserPolicies")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListUserPoliciesInputSet
      ####
      def new_input_set()
        return ListUserPoliciesInputSet.new()
      end

      def make_result_set()
        return ListUserPoliciesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListUserPoliciesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListUserPolicies
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListUserPoliciesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to list policies for.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListUserPolicies Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListUserPoliciesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListUserPolicies



    ##############################################################################
    #
    # ListUsers
    #
    # Lists the users that have the specified path prefix. If there are none, the action returns an empty list.
    #
    ##############################################################################

    class ListUsers < Choreography

      ####
      #  Create a new instance of the ListUsers Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListUsers")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListUsersInputSet
      ####
      def new_input_set()
        return ListUsersInputSet.new()
      end

      def make_result_set()
        return ListUsersResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListUsersResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListUsers
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListUsersInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the PathPrefix input for this Choreo. 
        # 
        # @param String - (conditional, string) The path prefix for filtering the results. For example, "/division_abc/subdivision_xyz/" retrieves all users whose path starts with that string. If it is not included, it defaults to a slash (/).
        ###

        def set_PathPrefix(value)
          set_input("PathPrefix", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListUsers Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListUsersResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListUsers



    ##############################################################################
    #
    # ListVirtualMFADevices
    #
    # Lists the virtual MFA devices under the AWS account.
    #
    ##############################################################################

    class ListVirtualMFADevices < Choreography

      ####
      #  Create a new instance of the ListVirtualMFADevices Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ListVirtualMFADevices")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListVirtualMFADevicesInputSet
      ####
      def new_input_set()
        return ListVirtualMFADevicesInputSet.new()
      end

      def make_result_set()
        return ListVirtualMFADevicesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListVirtualMFADevicesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListVirtualMFADevices
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListVirtualMFADevicesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AssignmentStatus input for this Choreo. 
        # 
        # @param String - (optional, string) Filters by the whether the device is assigned or unassigned to a specific user. Valid values: "Unassigned", "Assigned" or "Any" (default - both assigned and unassigned devices).
        ###

        def set_AssignmentStatus(value)
          set_input("AssignmentStatus", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Used for pagination to indicate the starting point of the results to return.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxItems input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used for pagination to limit the number of results returned. Defaults to 100.
        ###

        def set_MaxItems(value)
          set_input("MaxItems", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListVirtualMFADevices Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListVirtualMFADevicesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListVirtualMFADevices



    ##############################################################################
    #
    # PutGroupPolicy
    #
    # Adds or updates a policy document associated with a specified group.
    #
    ##############################################################################

    class PutGroupPolicy < Choreography

      ####
      #  Create a new instance of the PutGroupPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/PutGroupPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutGroupPolicyInputSet
      ####
      def new_input_set()
        return PutGroupPolicyInputSet.new()
      end

      def make_result_set()
        return PutGroupPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutGroupPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutGroupPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutGroupPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the PolicyDocument input for this Choreo. 
        # 
        # @param String - (required, json) The policy document. See documentation for formatting examples.
        ###

        def set_PolicyDocument(value)
          set_input("PolicyDocument", value)
        end
        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the group to associate the policy with.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the policy document.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutGroupPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutGroupPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutGroupPolicy



    ##############################################################################
    #
    # PutRolePolicy
    #
    # Adds or updates a policy document associated with a specified role.
    #
    ##############################################################################

    class PutRolePolicy < Choreography

      ####
      #  Create a new instance of the PutRolePolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/PutRolePolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutRolePolicyInputSet
      ####
      def new_input_set()
        return PutRolePolicyInputSet.new()
      end

      def make_result_set()
        return PutRolePolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutRolePolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutRolePolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutRolePolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the PolicyDocument input for this Choreo. 
        # 
        # @param String - (required, json) The policy document. See documentation for formatting examples.
        ###

        def set_PolicyDocument(value)
          set_input("PolicyDocument", value)
        end
        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the policy document.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the role to associate the policy with.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutRolePolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutRolePolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutRolePolicy



    ##############################################################################
    #
    # PutUserPolicy
    #
    # Adds or updates a policy document associated with a specified user.
    #
    ##############################################################################

    class PutUserPolicy < Choreography

      ####
      #  Create a new instance of the PutUserPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/PutUserPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutUserPolicyInputSet
      ####
      def new_input_set()
        return PutUserPolicyInputSet.new()
      end

      def make_result_set()
        return PutUserPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutUserPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutUserPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutUserPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the PolicyDocument input for this Choreo. 
        # 
        # @param String - (required, json) The policy document. See documentation for formatting examples.
        ###

        def set_PolicyDocument(value)
          set_input("PolicyDocument", value)
        end
        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the PolicyName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the policy document.
        ###

        def set_PolicyName(value)
          set_input("PolicyName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to associate the policy with.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutUserPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutUserPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutUserPolicy



    ##############################################################################
    #
    # RemoveRoleFromInstanceProfile
    #
    # Removes the specified Role from the specified Instance Profile.
    #
    ##############################################################################

    class RemoveRoleFromInstanceProfile < Choreography

      ####
      #  Create a new instance of the RemoveRoleFromInstanceProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/RemoveRoleFromInstanceProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RemoveRoleFromInstanceProfileInputSet
      ####
      def new_input_set()
        return RemoveRoleFromInstanceProfileInputSet.new()
      end

      def make_result_set()
        return RemoveRoleFromInstanceProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RemoveRoleFromInstanceProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RemoveRoleFromInstanceProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RemoveRoleFromInstanceProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the InstanceProfileName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the instance profile to update.
        ###

        def set_InstanceProfileName(value)
          set_input("InstanceProfileName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the RoleName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the role to remove.
        ###

        def set_RoleName(value)
          set_input("RoleName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RemoveRoleFromInstanceProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RemoveRoleFromInstanceProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RemoveRoleFromInstanceProfile



    ##############################################################################
    #
    # RemoveUserFromGroup
    #
    # Removes the specified user from the specified group.
    #
    ##############################################################################

    class RemoveUserFromGroup < Choreography

      ####
      #  Create a new instance of the RemoveUserFromGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/RemoveUserFromGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RemoveUserFromGroupInputSet
      ####
      def new_input_set()
        return RemoveUserFromGroupInputSet.new()
      end

      def make_result_set()
        return RemoveUserFromGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RemoveUserFromGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RemoveUserFromGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RemoveUserFromGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the group to update.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the user to remove.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RemoveUserFromGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RemoveUserFromGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RemoveUserFromGroup



    ##############################################################################
    #
    # ResyncMFADevice
    #
    # Synchronizes the specified MFA device with AWS servers.
    #
    ##############################################################################

    class ResyncMFADevice < Choreography

      ####
      #  Create a new instance of the ResyncMFADevice Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/ResyncMFADevice")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ResyncMFADeviceInputSet
      ####
      def new_input_set()
        return ResyncMFADeviceInputSet.new()
      end

      def make_result_set()
        return ResyncMFADeviceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ResyncMFADeviceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ResyncMFADevice
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ResyncMFADeviceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AuthenticationCode1 input for this Choreo. 
        # 
        # @param String - (required, string) An authentication code emitted by the device.
        ###

        def set_AuthenticationCode1(value)
          set_input("AuthenticationCode1", value)
        end
        #### 
        # Set the value of the AuthenticationCode2 input for this Choreo. 
        # 
        # @param String - (required, string) A subsequent authentication code emitted by the device.
        ###

        def set_AuthenticationCode2(value)
          set_input("AuthenticationCode2", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SerialNumber input for this Choreo. 
        # 
        # @param String - (required, string) The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.
        ###

        def set_SerialNumber(value)
          set_input("SerialNumber", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the user for whom you want to enable the MFA device.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ResyncMFADevice Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ResyncMFADeviceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ResyncMFADevice



    ##############################################################################
    #
    # UpdateAccessKey
    #
    # Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key as part of a key rotation workflow.
    #
    ##############################################################################

    class UpdateAccessKey < Choreography

      ####
      #  Create a new instance of the UpdateAccessKey Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UpdateAccessKey")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UpdateAccessKeyInputSet
      ####
      def new_input_set()
        return UpdateAccessKeyInputSet.new()
      end

      def make_result_set()
        return UpdateAccessKeyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UpdateAccessKeyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UpdateAccessKey
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UpdateAccessKeyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AccessKeyId input for this Choreo. 
        # 
        # @param String - (conditional, string) The Access Key ID for the Access Key ID and Secret Access Key you want to delete.
        ###

        def set_AccessKeyId(value)
          set_input("AccessKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the Status input for this Choreo. 
        # 
        # @param String - (required, string) The status you want to assign to the Secret Access Key. Active means the key can be used for API calls to AWS, while Inactive means the key cannot be used.
        ###

        def set_Status(value)
          set_input("Status", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (conditional, string) Name of the user whose key you want to update.  If the UserName field is not specified, the UserName is determined implicitly based on the AWS Access Key ID used to sign the request.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UpdateAccessKey Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UpdateAccessKeyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UpdateAccessKey



    ##############################################################################
    #
    # UpdateAccountPasswordPolicy
    #
    # Updates the password policy settings for the account.
    #
    ##############################################################################

    class UpdateAccountPasswordPolicy < Choreography

      ####
      #  Create a new instance of the UpdateAccountPasswordPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UpdateAccountPasswordPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UpdateAccountPasswordPolicyInputSet
      ####
      def new_input_set()
        return UpdateAccountPasswordPolicyInputSet.new()
      end

      def make_result_set()
        return UpdateAccountPasswordPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UpdateAccountPasswordPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UpdateAccountPasswordPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UpdateAccountPasswordPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AllowUsersToChangePassword input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Determines whether users can set/change their own passwords. Valid values: "true" or "false" (the default).
        ###

        def set_AllowUsersToChangePassword(value)
          set_input("AllowUsersToChangePassword", value)
        end
        #### 
        # Set the value of the ExpirePasswords input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Determines whether the passwords expire. Valid values: "true" or "false" (the default).
        ###

        def set_ExpirePasswords(value)
          set_input("ExpirePasswords", value)
        end
        #### 
        # Set the value of the MaxPasswordsAge input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Maximum age of the passwords before they expire.
        ###

        def set_MaxPasswordsAge(value)
          set_input("MaxPasswordsAge", value)
        end
        #### 
        # Set the value of the MinimumPasswordLength input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Mininum length of the password. Defaults to none.
        ###

        def set_MinimumPasswordLength(value)
          set_input("MinimumPasswordLength", value)
        end
        #### 
        # Set the value of the RequireLowercaseCharacters input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Determines whether at least one lower-case character is required in the password. Valid values: "true" or "false" (the default).
        ###

        def set_RequireLowercaseCharacters(value)
          set_input("RequireLowercaseCharacters", value)
        end
        #### 
        # Set the value of the RequireNumbers input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Determines whether numbers are required in the password. Valid values: "true" or "false" (the default).
        ###

        def set_RequireNumbers(value)
          set_input("RequireNumbers", value)
        end
        #### 
        # Set the value of the RequireSymbols input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Determines whether symbols are required in the password. Valid values: "true" or "false" (the default).
        ###

        def set_RequireSymbols(value)
          set_input("RequireSymbols", value)
        end
        #### 
        # Set the value of the RequireUppercaseCharacters input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Determines whether at least one upper-case character is required in the password. Valid values: "true" or "false" (the default).
        ###

        def set_RequireUppercaseCharacters(value)
          set_input("RequireUppercaseCharacters", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UpdateAccountPasswordPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UpdateAccountPasswordPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UpdateAccountPasswordPolicy



    ##############################################################################
    #
    # UpdateGroup
    #
    # Updates the name and/or the path of a specified group.
    #
    ##############################################################################

    class UpdateGroup < Choreography

      ####
      #  Create a new instance of the UpdateGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UpdateGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UpdateGroupInputSet
      ####
      def new_input_set()
        return UpdateGroupInputSet.new()
      end

      def make_result_set()
        return UpdateGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UpdateGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UpdateGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UpdateGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the GroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the group to update.
        ###

        def set_GroupName(value)
          set_input("GroupName", value)
        end
        #### 
        # Set the value of the NewGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) The new name of the group. Include a value here only if you are updating the group's name.
        ###

        def set_NewGroupName(value)
          set_input("NewGroupName", value)
        end
        #### 
        # Set the value of the NewPath input for this Choreo. 
        # 
        # @param String - (optional, string) The new path for the group. Include a value here only if you are changing the user's existing path.
        ###

        def set_NewPath(value)
          set_input("NewPath", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UpdateGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UpdateGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UpdateGroup



    ##############################################################################
    #
    # UpdateLoginProfile
    #
    # Changes the password for the specified user.
    #
    ##############################################################################

    class UpdateLoginProfile < Choreography

      ####
      #  Create a new instance of the UpdateLoginProfile Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UpdateLoginProfile")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UpdateLoginProfileInputSet
      ####
      def new_input_set()
        return UpdateLoginProfileInputSet.new()
      end

      def make_result_set()
        return UpdateLoginProfileResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UpdateLoginProfileResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UpdateLoginProfile
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UpdateLoginProfileInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the MustChangePassword input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies whether or not the user should be required to change their password immediately.  Valid values are true/false or 1/0.
        ###

        def set_MustChangePassword(value)
          set_input("MustChangePassword", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, string) The new password for the user name.
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to update.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UpdateLoginProfile Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UpdateLoginProfileResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UpdateLoginProfile



    ##############################################################################
    #
    # UpdateServerCertificate
    #
    # Updates the name and/or the path of the specified server certificate.
    #
    ##############################################################################

    class UpdateServerCertificate < Choreography

      ####
      #  Create a new instance of the UpdateServerCertificate Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UpdateServerCertificate")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UpdateServerCertificateInputSet
      ####
      def new_input_set()
        return UpdateServerCertificateInputSet.new()
      end

      def make_result_set()
        return UpdateServerCertificateResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UpdateServerCertificateResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UpdateServerCertificate
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UpdateServerCertificateInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the NewPath input for this Choreo. 
        # 
        # @param String - (conditional, string) The new path for the server certificate. Include this only if you are updating the server certificate's path.
        ###

        def set_NewPath(value)
          set_input("NewPath", value)
        end
        #### 
        # Set the value of the NewServerCertificateName input for this Choreo. 
        # 
        # @param String - (conditional, string) The new name for the server certificate. Include this only if you are updating the server certificate's name.
        ###

        def set_NewServerCertificateName(value)
          set_input("NewServerCertificateName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the ServerCertificateName input for this Choreo. 
        # 
        # @param String - (required, string) The name for the server certificate. Do not include the path in this value.
        ###

        def set_ServerCertificateName(value)
          set_input("ServerCertificateName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UpdateServerCertificate Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UpdateServerCertificateResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UpdateServerCertificate



    ##############################################################################
    #
    # UpdateSigningCertificate
    #
    # Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a user's signing certificate as part of a certificate rotation workflow.
    #
    ##############################################################################

    class UpdateSigningCertificate < Choreography

      ####
      #  Create a new instance of the UpdateSigningCertificate Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UpdateSigningCertificate")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UpdateSigningCertificateInputSet
      ####
      def new_input_set()
        return UpdateSigningCertificateInputSet.new()
      end

      def make_result_set()
        return UpdateSigningCertificateResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UpdateSigningCertificateResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UpdateSigningCertificate
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UpdateSigningCertificateInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the CertificateId input for this Choreo. 
        # 
        # @param String - (required, string) The ID of the signing certificate you want to update.
        ###

        def set_CertificateId(value)
          set_input("CertificateId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the Status input for this Choreo. 
        # 
        # @param String - (required, string) The status you want to assign to the certificate. Active means the certificate can be used for API calls to AWS, while Inactive means the certificate cannot be used.
        ###

        def set_Status(value)
          set_input("Status", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (optional, string) Name of the user the signing certificate belongs to.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UpdateSigningCertificate Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UpdateSigningCertificateResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UpdateSigningCertificate



    ##############################################################################
    #
    # UpdateUser
    #
    # Updates the name and/or the path of a specified user.
    #
    ##############################################################################

    class UpdateUser < Choreography

      ####
      #  Create a new instance of the UpdateUser Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UpdateUser")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UpdateUserInputSet
      ####
      def new_input_set()
        return UpdateUserInputSet.new()
      end

      def make_result_set()
        return UpdateUserResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UpdateUserResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UpdateUser
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UpdateUserInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the NewPath input for this Choreo. 
        # 
        # @param String - (optional, string) The new path for the user. Include a value here only if you are changing the user's existing path. The path needs to start with and end with a slash(/).  For example, "/Division/HR/".
        ###

        def set_NewPath(value)
          set_input("NewPath", value)
        end
        #### 
        # Set the value of the NewUserName input for this Choreo. 
        # 
        # @param String - (optional, string) The new name of the user. Include a value here only if you are updating the user's name.
        ###

        def set_NewUserName(value)
          set_input("NewUserName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the user to update.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UpdateUser Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UpdateUserResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UpdateUser



    ##############################################################################
    #
    # UploadServerCertificate
    #
    # Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.
    #
    ##############################################################################

    class UploadServerCertificate < Choreography

      ####
      #  Create a new instance of the UploadServerCertificate Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UploadServerCertificate")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UploadServerCertificateInputSet
      ####
      def new_input_set()
        return UploadServerCertificateInputSet.new()
      end

      def make_result_set()
        return UploadServerCertificateResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UploadServerCertificateResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UploadServerCertificate
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UploadServerCertificateInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the CertificateBody input for this Choreo. 
        # 
        # @param String - (required, multiline) The contents of the signing certificate.
        ###

        def set_CertificateBody(value)
          set_input("CertificateBody", value)
        end
        #### 
        # Set the value of the CertificateChain input for this Choreo. 
        # 
        # @param String - (optional, multiline) The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.
        ###

        def set_CertificateChain(value)
          set_input("CertificateChain", value)
        end
        #### 
        # Set the value of the Path input for this Choreo. 
        # 
        # @param String - (optional, string) The path for the server certificate.
        ###

        def set_Path(value)
          set_input("Path", value)
        end
        #### 
        # Set the value of the PrivateKey input for this Choreo. 
        # 
        # @param String - (required, multiline) The contents of the private key in PEM-encoded format.
        ###

        def set_PrivateKey(value)
          set_input("PrivateKey", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the ServerCertificateName input for this Choreo. 
        # 
        # @param String - (required, string) The name for the server certificate. Do not include the path in this value.
        ###

        def set_ServerCertificateName(value)
          set_input("ServerCertificateName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UploadServerCertificate Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UploadServerCertificateResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UploadServerCertificate



    ##############################################################################
    #
    # UploadSigningCertificate
    #
    # Uploads an X.509 signing certificate and associates it with the specified user.
    #
    ##############################################################################

    class UploadSigningCertificate < Choreography

      ####
      #  Create a new instance of the UploadSigningCertificate Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/IAM/UploadSigningCertificate")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UploadSigningCertificateInputSet
      ####
      def new_input_set()
        return UploadSigningCertificateInputSet.new()
      end

      def make_result_set()
        return UploadSigningCertificateResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UploadSigningCertificateResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the UploadSigningCertificate
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UploadSigningCertificateInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the CertificateBody input for this Choreo. 
        # 
        # @param String - (required, multiline) The contents of the signing certificate.
        ###

        def set_CertificateBody(value)
          set_input("CertificateBody", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the UserName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the user.
        ###

        def set_UserName(value)
          set_input("UserName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the UploadSigningCertificate Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UploadSigningCertificateResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class UploadSigningCertificate




  end # module IAM

  module Marketplace




    module Feeds



      ##############################################################################
      #
      # AddOrUpdateInventoryItem
      #
      # Add or update an individual inventory listing.
      #
      ##############################################################################

      class AddOrUpdateInventoryItem < Choreography

        ####
        #  Create a new instance of the AddOrUpdateInventoryItem Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/AddOrUpdateInventoryItem")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return AddOrUpdateInventoryItemInputSet
        ####
        def new_input_set()
          return AddOrUpdateInventoryItemInputSet.new()
        end

        def make_result_set()
          return AddOrUpdateInventoryItemResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = AddOrUpdateInventoryItemResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the AddOrUpdateInventoryItem
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class AddOrUpdateInventoryItemInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ExpeditedShipping input for this Choreo. 
          # 
          # @param String - (optional, string) The expedited shipping options that you offer for this item. Valid values: 3 = UK Only; N = None, no express delivery offered.
          ###

          def set_ExpeditedShipping(value)
            set_input("ExpeditedShipping", value)
          end
          #### 
          # Set the value of the FulfillmentCenterId input for this Choreo. 
          # 
          # @param String - (conditional, string) For those merchants using Amazon fulfillment services, this designates which fulfillment network will be used. Required when using Amazon fulfillment services. Valid values are: AMAZON_EU, DEFAULT.
          ###

          def set_FulfillmentCenterId(value)
            set_input("FulfillmentCenterId", value)
          end
          #### 
          # Set the value of the ItemCondition input for this Choreo. 
          # 
          # @param Integer - (conditional, integer) A numerical entry that indicates the condition of the item. Required for new listings. Valid values are: 1-11. See documentation for description of item condition numeric values.
          ###

          def set_ItemCondition(value)
            set_input("ItemCondition", value)
          end
          #### 
          # Set the value of the ItemNote input for this Choreo. 
          # 
          # @param String - (optional, string) A description or note for the item you're adding or updating.
          ###

          def set_ItemNote(value)
            set_input("ItemNote", value)
          end
          #### 
          # Set the value of the Price input for this Choreo. 
          # 
          # @param BigDecimal - (conditional, decimal) The price at which the merchant offers the product for sale. Required if ProductId is provided.
          ###

          def set_Price(value)
            set_input("Price", value)
          end
          #### 
          # Set the value of the ProductIdType input for this Choreo. 
          # 
          # @param Integer - (conditional, integer) The type of standard, unique identifier entered in the product-id field. This is a required field if product-id is provided. Valid values are: 1 (ASIN), 2 (ISBN), 3 (UPC), 4  (EAN).
          ###

          def set_ProductIdType(value)
            set_input("ProductIdType", value)
          end
          #### 
          # Set the value of the ProductId input for this Choreo. 
          # 
          # @param String - (conditional, string) A standard, alphanumeric string that uniquely identifies the product. This could be a UPC, EAN or ISBN.  This is a required field if product-id-type is provided.
          ###

          def set_ProductId(value)
            set_input("ProductId", value)
          end
          #### 
          # Set the value of the Quantity input for this Choreo. 
          # 
          # @param Integer - (conditional, integer) Enter the quantity of the item you are making available for sale. Required for merchant-fulfilled items. Leave blank for amazon-fullfilled items.
          ###

          def set_Quantity(value)
            set_input("Quantity", value)
          end
          #### 
          # Set the value of the SKU input for this Choreo. 
          # 
          # @param String - (required, string) A unique identifier for the product, assigned by the merchant. The SKU must be unique for each product listed.
          ###

          def set_SKU(value)
            set_input("SKU", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end
          #### 
          # Set the value of the WillShipInternationally input for this Choreo. 
          # 
          # @param Integer - (optional, integer) Specify your international shipping options. Valid values are: 3 = UK Only; 4 = UK and Europe; 5 = UK, Europe, and North America; 6 = Worldwide
          ###

          def set_WillShipInternationally(value)
            set_input("WillShipInternationally", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the AddOrUpdateInventoryItem Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class AddOrUpdateInventoryItemResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) The response from Amazon after submitting the feed.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "ProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The processing status of the product submission which is parsed from the Amazon response.
        	####
        	def get_ProcessingStatus()
        	  return @outputs["ProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "SubmissionResult" output from this Choreo execution
        	#
        	# @return String - (string) The submission result returned from Amazon.
        	####
        	def get_SubmissionResult()
        	  return @outputs["SubmissionResult"]
        	end
        	####
        	# Retrieve the value for the "SubmissionId" output from this Choreo execution
        	#
        	# @return String - (integer) The submission id parsed from the Amazon response.
        	####
        	def get_SubmissionId()
        	  return @outputs["SubmissionId"]
        	end
        end

      end # class AddOrUpdateInventoryItem



      ##############################################################################
      #
      # AddOrUpdateInventoryItems
      #
      # Adds or updates one or more inventory listings in your Seller Central account with a given flat flile.
      #
      ##############################################################################

      class AddOrUpdateInventoryItems < Choreography

        ####
        #  Create a new instance of the AddOrUpdateInventoryItems Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/AddOrUpdateInventoryItems")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return AddOrUpdateInventoryItemsInputSet
        ####
        def new_input_set()
          return AddOrUpdateInventoryItemsInputSet.new()
        end

        def make_result_set()
          return AddOrUpdateInventoryItemsResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = AddOrUpdateInventoryItemsResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the AddOrUpdateInventoryItems
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class AddOrUpdateInventoryItemsInputSet < Choreography::InputSet

          #### 
          # Set the value of the FeedData input for this Choreo. 
          # 
          # @param String - (conditional, multiline) The feed data to sumbit to Amazon Marketplace.
          ###

          def set_FeedData(value)
            set_input("FeedData", value)
          end
          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end
          #### 
          # Set the value of the VaultFile input for this Choreo. 
          # 
          # @param TembooPath - The path to the vault file you want to submit. Required unless you using the FeedData input.
          ###

          def set_VaultFile(value)
            set_alias("VaultFile", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the AddOrUpdateInventoryItems Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class AddOrUpdateInventoryItemsResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "SubmissionResult" output from this Choreo execution
        	#
        	# @return String - (string) The submission result returned from Amazon.
        	####
        	def get_SubmissionResult()
        	  return @outputs["SubmissionResult"]
        	end
        	####
        	# Retrieve the value for the "SubmissionId" output from this Choreo execution
        	#
        	# @return String - (integer) The submission id parsed from the Amazon response.
        	####
        	def get_SubmissionId()
        	  return @outputs["SubmissionId"]
        	end
        	####
        	# Retrieve the value for the "ProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The processing status of the feed submission which is parsed from the Amazon response.
        	####
        	def get_ProcessingStatus()
        	  return @outputs["ProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) The response from Amazon after submitting the feed.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class AddOrUpdateInventoryItems



      ##############################################################################
      #
      # AddOrUpdateProductImage
      #
      # Adds or updates a product image with a given image location and SKU.
      #
      ##############################################################################

      class AddOrUpdateProductImage < Choreography

        ####
        #  Create a new instance of the AddOrUpdateProductImage Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/AddOrUpdateProductImage")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return AddOrUpdateProductImageInputSet
        ####
        def new_input_set()
          return AddOrUpdateProductImageInputSet.new()
        end

        def make_result_set()
          return AddOrUpdateProductImageResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = AddOrUpdateProductImageResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the AddOrUpdateProductImage
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class AddOrUpdateProductImageInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ImageLocation input for this Choreo. 
          # 
          # @param String - (required, string) The URL for the image location.
          ###

          def set_ImageLocation(value)
            set_input("ImageLocation", value)
          end
          #### 
          # Set the value of the ImageType input for this Choreo. 
          # 
          # @param String - (optional, string) The type of image (Main, Alternate, or Swatch). Defaults to "Main".
          ###

          def set_ImageType(value)
            set_input("ImageType", value)
          end
          #### 
          # Set the value of the SKU input for this Choreo. 
          # 
          # @param String - (required, string) A SKU is a "Stock Keeping Unit" which you can assign to your products to track your inventory. Provide the SKU for the product that is associated with the image you are uploading.
          ###

          def set_SKU(value)
            set_input("SKU", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the AddOrUpdateProductImage Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class AddOrUpdateProductImageResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "SubmissionResult" output from this Choreo execution
        	#
        	# @return String - (string) The submission result returned from Amazon.
        	####
        	def get_SubmissionResult()
        	  return @outputs["SubmissionResult"]
        	end
        	####
        	# Retrieve the value for the "SubmissionId" output from this Choreo execution
        	#
        	# @return String - (integer) The submission id parsed from the Amazon response.
        	####
        	def get_SubmissionId()
        	  return @outputs["SubmissionId"]
        	end
        	####
        	# Retrieve the value for the "ProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The processing status of the feed submission which is parsed from the Amazon response.
        	####
        	def get_ProcessingStatus()
        	  return @outputs["ProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) The response from Amazon after submitting the feed.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class AddOrUpdateProductImage



      ##############################################################################
      #
      # DeleteInventoryItem
      #
      # Deletes an individual inventory listings from a Seller Central account with a given SKU.
      #
      ##############################################################################

      class DeleteInventoryItem < Choreography

        ####
        #  Create a new instance of the DeleteInventoryItem Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/DeleteInventoryItem")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return DeleteInventoryItemInputSet
        ####
        def new_input_set()
          return DeleteInventoryItemInputSet.new()
        end

        def make_result_set()
          return DeleteInventoryItemResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = DeleteInventoryItemResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the DeleteInventoryItem
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class DeleteInventoryItemInputSet < Choreography::InputSet

          #### 
          # Set the value of the SKU input for this Choreo. 
          # 
          # @param String - (required, string) A individual SKU associating with the product to delete.
          ###

          def set_SKU(value)
            set_input("SKU", value)
          end
          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the DeleteOptions input for this Choreo. 
          # 
          # @param String - (optional, string) Use 'd' to reduce the listings inventory to 0 and keep details in the system. Use 'x'  to completely delete listings from your current inventory. Defaults to "d".
          ###

          def set_DeleteOptions(value)
            set_input("DeleteOptions", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end
          #### 
          # Set the value of the VaultFile input for this Choreo. 
          # 
          # @param TembooPath - The path to the vault file you want to submit.
          ###

          def set_VaultFile(value)
            set_alias("VaultFile", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the DeleteInventoryItem Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class DeleteInventoryItemResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "ProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The processing status of the feed submission which is parsed from the Amazon response.
        	####
        	def get_ProcessingStatus()
        	  return @outputs["ProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "SubmissionId" output from this Choreo execution
        	#
        	# @return String - (integer) The submission id parsed from the Amazon response.
        	####
        	def get_SubmissionId()
        	  return @outputs["SubmissionId"]
        	end
        	####
        	# Retrieve the value for the "SubmissionResult" output from this Choreo execution
        	#
        	# @return String - (string) The submission result returned from Amazon.
        	####
        	def get_SubmissionResult()
        	  return @outputs["SubmissionResult"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) The response from Amazon after submitting the feed.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class DeleteInventoryItem



      ##############################################################################
      #
      # DeleteInventoryItems
      #
      # Deletes inventory listings from a Seller Central account with a given flat file of SKUs.
      #
      ##############################################################################

      class DeleteInventoryItems < Choreography

        ####
        #  Create a new instance of the DeleteInventoryItems Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/DeleteInventoryItems")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return DeleteInventoryItemsInputSet
        ####
        def new_input_set()
          return DeleteInventoryItemsInputSet.new()
        end

        def make_result_set()
          return DeleteInventoryItemsResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = DeleteInventoryItemsResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the DeleteInventoryItems
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class DeleteInventoryItemsInputSet < Choreography::InputSet

          #### 
          # Set the value of the SKUs input for this Choreo. 
          # 
          # @param String - (conditional, multiline) The list of SKUs associating with the products to delete. SKUs are provided as Tab Delimited values (do not include a sku column name).
          ###

          def set_SKUs(value)
            set_input("SKUs", value)
          end
          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the DeleteOptions input for this Choreo. 
          # 
          # @param String - (optional, string) Use 'd' to reduce the listings inventory to 0 and keep details in the system. Use 'x'  to completely delete listings from your current inventory. Defaults to "d".
          ###

          def set_DeleteOptions(value)
            set_input("DeleteOptions", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end
          #### 
          # Set the value of the VaultFile input for this Choreo. 
          # 
          # @param TembooPath - The path to the vault file you want to submit.
          ###

          def set_VaultFile(value)
            set_alias("VaultFile", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the DeleteInventoryItems Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class DeleteInventoryItemsResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "ProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The processing status of the feed submission which is parsed from the Amazon response.
        	####
        	def get_ProcessingStatus()
        	  return @outputs["ProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) The response from Amazon after submitting the feed.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "SubmissionId" output from this Choreo execution
        	#
        	# @return String - (integer) The submission id parsed from the Amazon response.
        	####
        	def get_SubmissionId()
        	  return @outputs["SubmissionId"]
        	end
        	####
        	# Retrieve the value for the "SubmissionResult" output from this Choreo execution
        	#
        	# @return String - (string) The submission result returned from Amazon.
        	####
        	def get_SubmissionResult()
        	  return @outputs["SubmissionResult"]
        	end
        end

      end # class DeleteInventoryItems



      ##############################################################################
      #
      # GetFeedSubmissionList
      #
      # Returns a list of all feed submissions submitted in the previous 90 days.
      #
      ##############################################################################

      class GetFeedSubmissionList < Choreography

        ####
        #  Create a new instance of the GetFeedSubmissionList Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/GetFeedSubmissionList")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetFeedSubmissionListInputSet
        ####
        def new_input_set()
          return GetFeedSubmissionListInputSet.new()
        end

        def make_result_set()
          return GetFeedSubmissionListResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetFeedSubmissionListResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetFeedSubmissionList
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetFeedSubmissionListInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the FeedProcessingStatusList input for this Choreo. 
          # 
          # @param String - (optional, string) A comma separated list of one or more feed processing statuses by which to filter the list of feed submissions.
          ###

          def set_FeedProcessingStatusList(value)
            set_input("FeedProcessingStatusList", value)
          end
          #### 
          # Set the value of the FeedSubmissionIdList input for this Choreo. 
          # 
          # @param String - (optional, string) A comma separated list of FeedSubmmissionId values. If you pass in FeedSubmmissionId values in a request, other query conditions are ignored.
          ###

          def set_FeedSubmissionIdList(value)
            set_input("FeedSubmissionIdList", value)
          end
          #### 
          # Set the value of the FeedTypeList input for this Choreo. 
          # 
          # @param String - (optional, string) A comma separated list of one or more FeedType enumeration values by which to filter the list of feed submissions.
          ###

          def set_FeedTypeList(value)
            set_input("FeedTypeList", value)
          end
          #### 
          # Set the value of the MaxCount input for this Choreo. 
          # 
          # @param Integer - (optional, integer) A non-negative integer that indicates the maximum number of feed submissions to return in the list. Defaults to 10. Max is 100.
          ###

          def set_MaxCount(value)
            set_input("MaxCount", value)
          end
          #### 
          # Set the value of the SubmittedFromDate input for this Choreo. 
          # 
          # @param String - (optional, date) The earliest submission date that you are looking for, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_SubmittedFromDate(value)
            set_input("SubmittedFromDate", value)
          end
          #### 
          # Set the value of the SubmittedToDate input for this Choreo. 
          # 
          # @param String - (optional, date) The latest submission date that you are looking for, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_SubmittedToDate(value)
            set_input("SubmittedToDate", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetFeedSubmissionList Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetFeedSubmissionListResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "FeedProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The FeedProcessingStatus parsed from the Amazon response.
        	####
        	def get_FeedProcessingStatus()
        	  return @outputs["FeedProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "FeedSubmissionId" output from this Choreo execution
        	#
        	# @return String - (integer) The FeedSubmissionId parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
        	####
        	def get_FeedSubmissionId()
        	  return @outputs["FeedSubmissionId"]
        	end
        end

      end # class GetFeedSubmissionList



      ##############################################################################
      #
      # GetFeedSubmissionResult
      #
      # Returns the feed processing report and the Content-MD5 header.
      #
      ##############################################################################

      class GetFeedSubmissionResult < Choreography

        ####
        #  Create a new instance of the GetFeedSubmissionResult Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/GetFeedSubmissionResult")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetFeedSubmissionResultInputSet
        ####
        def new_input_set()
          return GetFeedSubmissionResultInputSet.new()
        end

        def make_result_set()
          return GetFeedSubmissionResultResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetFeedSubmissionResultResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetFeedSubmissionResult
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetFeedSubmissionResultInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the FeedSubmissionId input for this Choreo. 
          # 
          # @param String - (required, string) A FeedSubmmissionId value.
          ###

          def set_FeedSubmissionId(value)
            set_input("FeedSubmissionId", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetFeedSubmissionResult Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetFeedSubmissionResultResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "ContentMD5Header" output from this Choreo execution
        	#
        	# @return String - (string) The Content MD5 header returned from Amazon. This can used to check against an MD5 hash that you generate before submitting the feed to verify that the feed was submitted correctly.
        	####
        	def get_ContentMD5Header()
        	  return @outputs["ContentMD5Header"]
        	end
        end

      end # class GetFeedSubmissionResult



      ##############################################################################
      #
      # SubmitFeed
      #
      # Submits a feed, of the specified type, to Amazon Marketplace.
      #
      ##############################################################################

      class SubmitFeed < Choreography

        ####
        #  Create a new instance of the SubmitFeed Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/SubmitFeed")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return SubmitFeedInputSet
        ####
        def new_input_set()
          return SubmitFeedInputSet.new()
        end

        def make_result_set()
          return SubmitFeedResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = SubmitFeedResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the SubmitFeed
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class SubmitFeedInputSet < Choreography::InputSet

          #### 
          # Set the value of the FeedData input for this Choreo. 
          # 
          # @param String - (conditional, multiline) The feed data to submit to Amazon Marketplace.
          ###

          def set_FeedData(value)
            set_input("FeedData", value)
          end
          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the FeedType input for this Choreo. 
          # 
          # @param String - (optional, string) The type of feed being submitted.  Default value is set to  _POST_FLAT_FILE_INVLOADER_DATA_).
          ###

          def set_FeedType(value)
            set_input("FeedType", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end
          #### 
          # Set the value of the VaultFile input for this Choreo. 
          # 
          # @param TembooPath - The path to the vault file you want to submit. Required unless you using the FeedData input.
          ###

          def set_VaultFile(value)
            set_alias("VaultFile", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the SubmitFeed Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class SubmitFeedResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "SubmissionResult" output from this Choreo execution
        	#
        	# @return String - (string) The submission result returned from Amazon.
        	####
        	def get_SubmissionResult()
        	  return @outputs["SubmissionResult"]
        	end
        	####
        	# Retrieve the value for the "ProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The processing status of the feed submission which is parsed from the Amazon response.
        	####
        	def get_ProcessingStatus()
        	  return @outputs["ProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "SubmissionId" output from this Choreo execution
        	#
        	# @return String - (integer) The submission id parsed from the Amazon response.
        	####
        	def get_SubmissionId()
        	  return @outputs["SubmissionId"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) The response from Amazon after submitting the feed.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class SubmitFeed



      ##############################################################################
      #
      # UpdatePriceAndQuantity
      #
      # Updates only the price and quantity of a particular product with a given product SKU.
      #
      ##############################################################################

      class UpdatePriceAndQuantity < Choreography

        ####
        #  Create a new instance of the UpdatePriceAndQuantity Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Feeds/UpdatePriceAndQuantity")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return UpdatePriceAndQuantityInputSet
        ####
        def new_input_set()
          return UpdatePriceAndQuantityInputSet.new()
        end

        def make_result_set()
          return UpdatePriceAndQuantityResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = UpdatePriceAndQuantityResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the UpdatePriceAndQuantity
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class UpdatePriceAndQuantityInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the Price input for this Choreo. 
          # 
          # @param BigDecimal - (required, decimal) Enter the unit price for this product. The price must be greater than 0.00. Do NOT include the currency symbol (e.g. $).
          ###

          def set_Price(value)
            set_input("Price", value)
          end
          #### 
          # Set the value of the Quantity input for this Choreo. 
          # 
          # @param Integer - (required, integer) Enter the quantity of the product you have for sale. The quantity must be a whole number, and should be greater than zero.
          ###

          def set_Quantity(value)
            set_input("Quantity", value)
          end
          #### 
          # Set the value of the SKU input for this Choreo. 
          # 
          # @param String - (required, string) A SKU is a "Stock Keeping Unit" which you can assign to your products to track your inventory. Provide the SKU that you want to modify.
          ###

          def set_SKU(value)
            set_input("SKU", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the UpdatePriceAndQuantity Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class UpdatePriceAndQuantityResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) The response from Amazon after submitting the feed.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "SubmissionResult" output from this Choreo execution
        	#
        	# @return String - (string) The submission result returned from Amazon.
        	####
        	def get_SubmissionResult()
        	  return @outputs["SubmissionResult"]
        	end
        	####
        	# Retrieve the value for the "SubmissionId" output from this Choreo execution
        	#
        	# @return String - (integer) The submission id parsed from the Amazon response.
        	####
        	def get_SubmissionId()
        	  return @outputs["SubmissionId"]
        	end
        	####
        	# Retrieve the value for the "ProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The processing status of the feed submission which is parsed from the Amazon response.
        	####
        	def get_ProcessingStatus()
        	  return @outputs["ProcessingStatus"]
        	end
        end

      end # class UpdatePriceAndQuantity




    end # module Feeds

    module Inventory



      ##############################################################################
      #
      # ListInventorySupplyByDateRange
      #
      # Returns information about the availability of a seller's inventory using a given date range.
      #
      ##############################################################################

      class ListInventorySupplyByDateRange < Choreography

        ####
        #  Create a new instance of the ListInventorySupplyByDateRange Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Inventory/ListInventorySupplyByDateRange")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return ListInventorySupplyByDateRangeInputSet
        ####
        def new_input_set()
          return ListInventorySupplyByDateRangeInputSet.new()
        end

        def make_result_set()
          return ListInventorySupplyByDateRangeResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = ListInventorySupplyByDateRangeResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the ListInventorySupplyByDateRange
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class ListInventorySupplyByDateRangeInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the PageToken input for this Choreo. 
          # 
          # @param String - (conditional, string) The value returned in the NextPageToken output of this Choreo when there are multiple pages of inventory items to retrieve. Required unless providing QueryStartDateTime.
          ###

          def set_PageToken(value)
            set_input("PageToken", value)
          end
          #### 
          # Set the value of the QueryStartDateTime input for this Choreo. 
          # 
          # @param String - (conditional, date) A date used for selecting items that have had changes in inventory availability after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Required unless providing PageToken.
          ###

          def set_QueryStartDateTime(value)
            set_input("QueryStartDateTime", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end
          #### 
          # Set the value of the ResponseGroup input for this Choreo. 
          # 
          # @param String - (optional, string) Indicates whether or not to return the SupplyDetail element in the response. Valid values are: "Basic" (does not include SupplyDetail), and "Detailed" (includes SupplyDetail). Defaults to "Basic".
          ###

          def set_ResponseGroup(value)
            set_input("ResponseGroup", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the ListInventorySupplyByDateRange Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class ListInventorySupplyByDateRangeResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "NextPageToken" output from this Choreo execution
        	#
        	# @return String - (string) A token used to retrieve the next page of results. If a token is not returned, there are no more results to retrieve. This token can be passed to the PageToken input of this Choreo.
        	####
        	def get_NextPageToken()
        	  return @outputs["NextPageToken"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class ListInventorySupplyByDateRange



      ##############################################################################
      #
      # ListInventorySupplyBySKU
      #
      # Returns information about the availability of a seller's inventory using a given SellerSKU.
      #
      ##############################################################################

      class ListInventorySupplyBySKU < Choreography

        ####
        #  Create a new instance of the ListInventorySupplyBySKU Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Inventory/ListInventorySupplyBySKU")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return ListInventorySupplyBySKUInputSet
        ####
        def new_input_set()
          return ListInventorySupplyBySKUInputSet.new()
        end

        def make_result_set()
          return ListInventorySupplyBySKUResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = ListInventorySupplyBySKUResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the ListInventorySupplyBySKU
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class ListInventorySupplyBySKUInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end
          #### 
          # Set the value of the ResponseGroup input for this Choreo. 
          # 
          # @param String - (optional, string) Indicates whether or not to return the SupplyDetail element in the response. Valid values are: "Basic" (does not include SupplyDetail), and "Detailed" (includes SupplyDetail). Defaults to "Basic".
          ###

          def set_ResponseGroup(value)
            set_input("ResponseGroup", value)
          end
          #### 
          # Set the value of the SellerSKU input for this Choreo. 
          # 
          # @param String - (required, string) A seller SKU for an item that you want inventory availability information about.
          ###

          def set_SellerSKU(value)
            set_input("SellerSKU", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the ListInventorySupplyBySKU Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class ListInventorySupplyBySKUResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class ListInventorySupplyBySKU




    end # module Inventory

    module Orders



      ##############################################################################
      #
      # GetOrder
      #
      # Returns orders based on the AmazonOrderId values that you specify.
      #
      ##############################################################################

      class GetOrder < Choreography

        ####
        #  Create a new instance of the GetOrder Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Orders/GetOrder")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetOrderInputSet
        ####
        def new_input_set()
          return GetOrderInputSet.new()
        end

        def make_result_set()
          return GetOrderResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetOrderResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetOrder
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetOrderInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the AmazonOrderId input for this Choreo. 
          # 
          # @param String - (required, string) An AmazonOrderId value used to retrieve the order.
          ###

          def set_AmazonOrderId(value)
            set_input("AmazonOrderId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetOrder Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetOrderResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetOrder



      ##############################################################################
      #
      # ListOrders
      #
      # Returns orders created during a time frame that you specify.
      #
      ##############################################################################

      class ListOrders < Choreography

        ####
        #  Create a new instance of the ListOrders Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Orders/ListOrders")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return ListOrdersInputSet
        ####
        def new_input_set()
          return ListOrdersInputSet.new()
        end

        def make_result_set()
          return ListOrdersResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = ListOrdersResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the ListOrders
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class ListOrdersInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the CreatedAfter input for this Choreo. 
          # 
          # @param String - (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
          ###

          def set_CreatedAfter(value)
            set_input("CreatedAfter", value)
          end
          #### 
          # Set the value of the CreatedBefore input for this Choreo. 
          # 
          # @param String - (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
          ###

          def set_CreatedBefore(value)
            set_input("CreatedBefore", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the FullfillmentChannel input for this Choreo. 
          # 
          # @param String - (optional, string) A string indicating how an order was fulfilled. Use "AFN" for Amazon fulfilled orders, and "MFN" for seller fulfilled orders.
          ###

          def set_FullfillmentChannel(value)
            set_input("FullfillmentChannel", value)
          end
          #### 
          # Set the value of the MaxResultsPerPage input for this Choreo. 
          # 
          # @param Integer - (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
          ###

          def set_MaxResultsPerPage(value)
            set_input("MaxResultsPerPage", value)
          end
          #### 
          # Set the value of the OrderStatus input for this Choreo. 
          # 
          # @param String - (optional, string) An OrderStatus value to select only orders with a certain status. Valid values are: Pending, Unshipped, PartiallyShipped, Shipped, Canceled, Unfulfillable.
          ###

          def set_OrderStatus(value)
            set_input("OrderStatus", value)
          end
          #### 
          # Set the value of the PaymentMethod input for this Choreo. 
          # 
          # @param String - (optional, string) Used to select only orders of a certain payment type. Valid values are: COD (cash on delivery), CSV (convenience store payment), or Other (Any payment method other than COD or CVS).
          ###

          def set_PaymentMethod(value)
            set_input("PaymentMethod", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the ListOrders Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class ListOrdersResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class ListOrders



      ##############################################################################
      #
      # ListOrdersWithBuyerEmail
      #
      # Returns orders associated with a buyer's email address that you specify.
      #
      ##############################################################################

      class ListOrdersWithBuyerEmail < Choreography

        ####
        #  Create a new instance of the ListOrdersWithBuyerEmail Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Orders/ListOrdersWithBuyerEmail")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return ListOrdersWithBuyerEmailInputSet
        ####
        def new_input_set()
          return ListOrdersWithBuyerEmailInputSet.new()
        end

        def make_result_set()
          return ListOrdersWithBuyerEmailResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = ListOrdersWithBuyerEmailResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the ListOrdersWithBuyerEmail
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class ListOrdersWithBuyerEmailInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the BuyerEmail input for this Choreo. 
          # 
          # @param String - (required, string) The e-mail address of a buyer. Used to select only the orders that contain the specified e-mail address.
          ###

          def set_BuyerEmail(value)
            set_input("BuyerEmail", value)
          end
          #### 
          # Set the value of the CreatedAfter input for this Choreo. 
          # 
          # @param String - (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
          ###

          def set_CreatedAfter(value)
            set_input("CreatedAfter", value)
          end
          #### 
          # Set the value of the CreatedBefore input for this Choreo. 
          # 
          # @param String - (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
          ###

          def set_CreatedBefore(value)
            set_input("CreatedBefore", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the MaxResultsPerPage input for this Choreo. 
          # 
          # @param Integer - (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
          ###

          def set_MaxResultsPerPage(value)
            set_input("MaxResultsPerPage", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the ListOrdersWithBuyerEmail Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class ListOrdersWithBuyerEmailResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class ListOrdersWithBuyerEmail



      ##############################################################################
      #
      # ListOrdersWithSellerOrderId
      #
      # Returns orders associated with a seller order id that you specify.
      #
      ##############################################################################

      class ListOrdersWithSellerOrderId < Choreography

        ####
        #  Create a new instance of the ListOrdersWithSellerOrderId Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Orders/ListOrdersWithSellerOrderId")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return ListOrdersWithSellerOrderIdInputSet
        ####
        def new_input_set()
          return ListOrdersWithSellerOrderIdInputSet.new()
        end

        def make_result_set()
          return ListOrdersWithSellerOrderIdResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = ListOrdersWithSellerOrderIdResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the ListOrdersWithSellerOrderId
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class ListOrdersWithSellerOrderIdInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the CreatedAfter input for this Choreo. 
          # 
          # @param String - (optional, date) A date used for selecting orders created after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01). Defaults to today's date if not provided.
          ###

          def set_CreatedAfter(value)
            set_input("CreatedAfter", value)
          end
          #### 
          # Set the value of the CreatedBefore input for this Choreo. 
          # 
          # @param String - (optional, date) A date used for selecting orders created before (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
          ###

          def set_CreatedBefore(value)
            set_input("CreatedBefore", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the MaxResultsPerPage input for this Choreo. 
          # 
          # @param Integer - (optional, integer) A number that indicates the maximum number of orders that can be returned per page. Valid values are: 1-100.
          ###

          def set_MaxResultsPerPage(value)
            set_input("MaxResultsPerPage", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end
          #### 
          # Set the value of the SellerOrderId input for this Choreo. 
          # 
          # @param String - (required, string) An order identifier that is specified by the seller.
          ###

          def set_SellerOrderId(value)
            set_input("SellerOrderId", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the ListOrdersWithSellerOrderId Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class ListOrdersWithSellerOrderIdResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class ListOrdersWithSellerOrderId




    end # module Orders

    module OutboundShipments



      ##############################################################################
      #
      # CancelFulfillmentOrder
      #
      # Makes a requests to Amazon to cancel an existing fulfillment order.
      #
      ##############################################################################

      class CancelFulfillmentOrder < Choreography

        ####
        #  Create a new instance of the CancelFulfillmentOrder Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/OutboundShipments/CancelFulfillmentOrder")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return CancelFulfillmentOrderInputSet
        ####
        def new_input_set()
          return CancelFulfillmentOrderInputSet.new()
        end

        def make_result_set()
          return CancelFulfillmentOrderResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = CancelFulfillmentOrderResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the CancelFulfillmentOrder
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class CancelFulfillmentOrderInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end
          #### 
          # Set the value of the SellerFulfillmentOrderId input for this Choreo. 
          # 
          # @param String - (required, string) The fulfillment order id that you created and submitted using the CreateFulfillmentOrder Choreo.
          ###

          def set_SellerFulfillmentOrderId(value)
            set_input("SellerFulfillmentOrderId", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the CancelFulfillmentOrder Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class CancelFulfillmentOrderResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class CancelFulfillmentOrder



      ##############################################################################
      #
      # ListAllFulfillmentOrders
      #
      # Returns a list of fulfillment orders fulfilled after (or at) a specified date or by fulfillment method.
      #
      ##############################################################################

      class ListAllFulfillmentOrders < Choreography

        ####
        #  Create a new instance of the ListAllFulfillmentOrders Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/OutboundShipments/ListAllFulfillmentOrders")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return ListAllFulfillmentOrdersInputSet
        ####
        def new_input_set()
          return ListAllFulfillmentOrdersInputSet.new()
        end

        def make_result_set()
          return ListAllFulfillmentOrdersResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = ListAllFulfillmentOrdersResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the ListAllFulfillmentOrders
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class ListAllFulfillmentOrdersInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the FulfillmentMethod input for this Choreo. 
          # 
          # @param String - (optional, string) A value used for selecting fulfillment orders based on their fulfillment method. "Consumer" indicates a customer order, and "Removal" indicates that the inventory should be returned to the specified.
          ###

          def set_FulfillmentMethod(value)
            set_input("FulfillmentMethod", value)
          end
          #### 
          # Set the value of the QueryStartDateTime input for this Choreo. 
          # 
          # @param String - (optional, date) A date used for selecting items that have had changes in inventory availability after (or at) a specified time, in ISO 8601 date format (i.e. 2012-01-01).
          ###

          def set_QueryStartDateTime(value)
            set_input("QueryStartDateTime", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the ListAllFulfillmentOrders Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class ListAllFulfillmentOrdersResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class ListAllFulfillmentOrders




    end # module OutboundShipments

    module Products



      ##############################################################################
      #
      # GetCompetitivePricingForASIN
      #
      # Returns the current competitive pricing of products, based on  ASIN values and the MarketplaceId that you specify.
      #
      ##############################################################################

      class GetCompetitivePricingForASIN < Choreography

        ####
        #  Create a new instance of the GetCompetitivePricingForASIN Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/GetCompetitivePricingForASIN")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetCompetitivePricingForASINInputSet
        ####
        def new_input_set()
          return GetCompetitivePricingForASINInputSet.new()
        end

        def make_result_set()
          return GetCompetitivePricingForASINResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetCompetitivePricingForASINResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetCompetitivePricingForASIN
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetCompetitivePricingForASINInputSet < Choreography::InputSet

          #### 
          # Set the value of the ASIN input for this Choreo. 
          # 
          # @param String - (required, string) A comma-separated list of up to 20 ASIN values used to identify products in the given marketplace.
          ###

          def set_ASIN(value)
            set_input("ASIN", value)
          end
          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetCompetitivePricingForASIN Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetCompetitivePricingForASINResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetCompetitivePricingForASIN



      ##############################################################################
      #
      # GetCompetitivePricingForSKU
      #
      # Returns the current competitive pricing of products, based on SellerSKU values and the MarketplaceId that you specify.
      #
      ##############################################################################

      class GetCompetitivePricingForSKU < Choreography

        ####
        #  Create a new instance of the GetCompetitivePricingForSKU Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/GetCompetitivePricingForSKU")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetCompetitivePricingForSKUInputSet
        ####
        def new_input_set()
          return GetCompetitivePricingForSKUInputSet.new()
        end

        def make_result_set()
          return GetCompetitivePricingForSKUResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetCompetitivePricingForSKUResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetCompetitivePricingForSKU
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetCompetitivePricingForSKUInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end
          #### 
          # Set the value of the SellerSKU input for this Choreo. 
          # 
          # @param String - (required, string) A comma-separated list of up to 20 SellerSKU values used to identify products in the given marketplace.
          ###

          def set_SellerSKU(value)
            set_input("SellerSKU", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetCompetitivePricingForSKU Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetCompetitivePricingForSKUResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetCompetitivePricingForSKU



      ##############################################################################
      #
      # GetLowestOfferListingsForASIN
      #
      # Returns the lowest price offer listings for specific products by item condition. This method uses a MarketplaceId and ASIN values to uniquely identify products.
      #
      ##############################################################################

      class GetLowestOfferListingsForASIN < Choreography

        ####
        #  Create a new instance of the GetLowestOfferListingsForASIN Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/GetLowestOfferListingsForASIN")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetLowestOfferListingsForASINInputSet
        ####
        def new_input_set()
          return GetLowestOfferListingsForASINInputSet.new()
        end

        def make_result_set()
          return GetLowestOfferListingsForASINResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetLowestOfferListingsForASINResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetLowestOfferListingsForASIN
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetLowestOfferListingsForASINInputSet < Choreography::InputSet

          #### 
          # Set the value of the ASIN input for this Choreo. 
          # 
          # @param String - (required, string) A comma-separated list of up to 20 ASIN values used to identify products in the given marketplace.
          ###

          def set_ASIN(value)
            set_input("ASIN", value)
          end
          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ItemCondition input for this Choreo. 
          # 
          # @param String - (optional, string) Filters the offer listings to be considered based on item condition. Valid values: New, Used, Collectible, Refurbished, Club.
          ###

          def set_ItemCondition(value)
            set_input("ItemCondition", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetLowestOfferListingsForASIN Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetLowestOfferListingsForASINResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetLowestOfferListingsForASIN



      ##############################################################################
      #
      # GetLowestOfferListingsForSKU
      #
      # Returns the lowest price offer listings for specific products by item condition. This method uses a MarketplaceId and SellerSKU values to uniquely identify products.
      #
      ##############################################################################

      class GetLowestOfferListingsForSKU < Choreography

        ####
        #  Create a new instance of the GetLowestOfferListingsForSKU Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/GetLowestOfferListingsForSKU")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetLowestOfferListingsForSKUInputSet
        ####
        def new_input_set()
          return GetLowestOfferListingsForSKUInputSet.new()
        end

        def make_result_set()
          return GetLowestOfferListingsForSKUResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetLowestOfferListingsForSKUResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetLowestOfferListingsForSKU
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetLowestOfferListingsForSKUInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ExcludeMe input for this Choreo. 
          # 
          # @param Boolean - (optional, boolean) Excludes your own offer listings from the offer listings that are returned. Set to "true" to exclude your own offer listings from the results. Defaults to "false".
          ###

          def set_ExcludeMe(value)
            set_input("ExcludeMe", value)
          end
          #### 
          # Set the value of the ItemCondition input for this Choreo. 
          # 
          # @param String - (optional, string) Filters the offer listings to be considered based on item condition. Valid values: New, Used, Collectible, Refurbished, Club.
          ###

          def set_ItemCondition(value)
            set_input("ItemCondition", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end
          #### 
          # Set the value of the SellerSKU input for this Choreo. 
          # 
          # @param String - (required, string) A comma-separated list of up to 20 SellerSKU values used to identify products in the given marketplace.
          ###

          def set_SellerSKU(value)
            set_input("SellerSKU", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetLowestOfferListingsForSKU Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetLowestOfferListingsForSKUResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetLowestOfferListingsForSKU



      ##############################################################################
      #
      # GetMatchingProduct
      #
      # Returns a list of products and their attributes, based on ASIN values that you specify.
      #
      ##############################################################################

      class GetMatchingProduct < Choreography

        ####
        #  Create a new instance of the GetMatchingProduct Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/GetMatchingProduct")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetMatchingProductInputSet
        ####
        def new_input_set()
          return GetMatchingProductInputSet.new()
        end

        def make_result_set()
          return GetMatchingProductResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetMatchingProductResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetMatchingProduct
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetMatchingProductInputSet < Choreography::InputSet

          #### 
          # Set the value of the ASIN input for this Choreo. 
          # 
          # @param String - (required, string) A comma-separated list of up to 10 ASIN values used to identify products in the given marketplace.
          ###

          def set_ASIN(value)
            set_input("ASIN", value)
          end
          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetMatchingProduct Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetMatchingProductResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetMatchingProduct



      ##############################################################################
      #
      # GetProductCategoriesForASIN
      #
      # Returns the product categories that a product belongs to, including parent categories back to the root for the marketplace. This method uses a MarketplaceId and an ASIN to uniquely identify a product.
      #
      ##############################################################################

      class GetProductCategoriesForASIN < Choreography

        ####
        #  Create a new instance of the GetProductCategoriesForASIN Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/GetProductCategoriesForASIN")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetProductCategoriesForASINInputSet
        ####
        def new_input_set()
          return GetProductCategoriesForASINInputSet.new()
        end

        def make_result_set()
          return GetProductCategoriesForASINResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetProductCategoriesForASINResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetProductCategoriesForASIN
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetProductCategoriesForASINInputSet < Choreography::InputSet

          #### 
          # Set the value of the ASIN input for this Choreo. 
          # 
          # @param String - (required, string) An ASIN value used to identify a product in the given marketplace.
          ###

          def set_ASIN(value)
            set_input("ASIN", value)
          end
          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetProductCategoriesForASIN Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetProductCategoriesForASINResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetProductCategoriesForASIN



      ##############################################################################
      #
      # GetProductCategoriesForSKU
      #
      # Returns the product categories that a product belongs to, including parent categories back to the root for the marketplace. This method uses a MarketplaceId and a SellerSKU to uniquely identify a product.
      #
      ##############################################################################

      class GetProductCategoriesForSKU < Choreography

        ####
        #  Create a new instance of the GetProductCategoriesForSKU Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/GetProductCategoriesForSKU")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetProductCategoriesForSKUInputSet
        ####
        def new_input_set()
          return GetProductCategoriesForSKUInputSet.new()
        end

        def make_result_set()
          return GetProductCategoriesForSKUResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetProductCategoriesForSKUResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetProductCategoriesForSKU
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetProductCategoriesForSKUInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end
          #### 
          # Set the value of the SellerSKU input for this Choreo. 
          # 
          # @param String - (required, string) A SellerSKU value used to identify a product in the given marketplace.
          ###

          def set_SellerSKU(value)
            set_input("SellerSKU", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetProductCategoriesForSKU Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetProductCategoriesForSKUResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetProductCategoriesForSKU



      ##############################################################################
      #
      # GetServiceStatus
      #
      # This is the standard method following MWS API GetServiceStatus standard. It can return a GREEN, GREEN_I, YELLOW or RED status.
      #
      ##############################################################################

      class GetServiceStatus < Choreography

        ####
        #  Create a new instance of the GetServiceStatus Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/GetServiceStatus")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetServiceStatusInputSet
        ####
        def new_input_set()
          return GetServiceStatusInputSet.new()
        end

        def make_result_set()
          return GetServiceStatusResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetServiceStatusResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetServiceStatus
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetServiceStatusInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetServiceStatus Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetServiceStatusResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Status" output from this Choreo execution
        	#
        	# @return String - (string) The service status parsed from the Amazon response.
        	####
        	def get_Status()
        	  return @outputs["Status"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetServiceStatus



      ##############################################################################
      #
      # ListMatchingProducts
      #
      # Returns a list of products and their attributes, ordered by relevancy, based on a search query that you specify.
      #
      ##############################################################################

      class ListMatchingProducts < Choreography

        ####
        #  Create a new instance of the ListMatchingProducts Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Products/ListMatchingProducts")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return ListMatchingProductsInputSet
        ####
        def new_input_set()
          return ListMatchingProductsInputSet.new()
        end

        def make_result_set()
          return ListMatchingProductsResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = ListMatchingProductsResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the ListMatchingProducts
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class ListMatchingProductsInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the Query input for this Choreo. 
          # 
          # @param String - (required, string) A search string used to search for products.
          ###

          def set_Query(value)
            set_input("Query", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the ListMatchingProducts Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class ListMatchingProductsResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (xml) Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class ListMatchingProducts




    end # module Products

    module Reports



      ##############################################################################
      #
      # CancelReportRequest
      #
      # Cancels one or more report requests.
      #
      ##############################################################################

      class CancelReportRequest < Choreography

        ####
        #  Create a new instance of the CancelReportRequest Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/CancelReportRequest")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return CancelReportRequestInputSet
        ####
        def new_input_set()
          return CancelReportRequestInputSet.new()
        end

        def make_result_set()
          return CancelReportRequestResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = CancelReportRequestResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the CancelReportRequest
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class CancelReportRequestInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ReportProcessingStatus input for this Choreo. 
          # 
          # @param String - (optional, string) A report processing status by which to filter report requests. Valid values are: _SUBMITTED_, _IN_PROGRESS_, _CANCELLED_, _DONE_, _DONE_NO_DATA_.
          ###

          def set_ReportProcessingStatus(value)
            set_input("ReportProcessingStatus", value)
          end
          #### 
          # Set the value of the ReportRequestId input for this Choreo. 
          # 
          # @param String - (optional, string) A ReportRequestId value. If you pass in a ReportRequestId value, other query conditions are ignored.
          ###

          def set_ReportRequestId(value)
            set_input("ReportRequestId", value)
          end
          #### 
          # Set the value of the ReportType input for this Choreo. 
          # 
          # @param String - (optional, string) A ReportType enumeration value (i.e. GET_ORDERS_DATA_).
          ###

          def set_ReportType(value)
            set_input("ReportType", value)
          end
          #### 
          # Set the value of the RequestedFromDate input for this Choreo. 
          # 
          # @param String - (optional, date) The start of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_RequestedFromDate(value)
            set_input("RequestedFromDate", value)
          end
          #### 
          # Set the value of the RequestedToDate input for this Choreo. 
          # 
          # @param String - (optional, date) The end of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_RequestedToDate(value)
            set_input("RequestedToDate", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the CancelReportRequest Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class CancelReportRequestResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "Count" output from this Choreo execution
        	#
        	# @return String - (integer) A non-negative integer that represents the total number of report requests that were cancelled.
        	####
        	def get_Count()
        	  return @outputs["Count"]
        	end
        end

      end # class CancelReportRequest



      ##############################################################################
      #
      # FlatFileOrderReport
      #
      # Returns a tab-delimited flat file order report. The report shows orders from the previous 60 days.
      #
      ##############################################################################

      class FlatFileOrderReport < Choreography

        ####
        #  Create a new instance of the FlatFileOrderReport Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/FlatFileOrderReport")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return FlatFileOrderReportInputSet
        ####
        def new_input_set()
          return FlatFileOrderReportInputSet.new()
        end

        def make_result_set()
          return FlatFileOrderReportResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = FlatFileOrderReportResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the FlatFileOrderReport
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class FlatFileOrderReportInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the FlatFileOrderReport Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class FlatFileOrderReportResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Report" output from this Choreo execution
        	#
        	# @return String - (multiline) The report contents.
        	####
        	def get_Report()
        	  return @outputs["Report"]
        	end
        	####
        	# Retrieve the value for the "ReportProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The status of the report request parsed from the Amazon response.
        	####
        	def get_ReportProcessingStatus()
        	  return @outputs["ReportProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "ReportRequestId" output from this Choreo execution
        	#
        	# @return String - (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
        	####
        	def get_ReportRequestId()
        	  return @outputs["ReportRequestId"]
        	end
        	####
        	# Retrieve the value for the "GeneratedReportId" output from this Choreo execution
        	#
        	# @return String - (integer) The GeneratedReportId parsed from the Amazon response.
        	####
        	def get_GeneratedReportId()
        	  return @outputs["GeneratedReportId"]
        	end
        end

      end # class FlatFileOrderReport



      ##############################################################################
      #
      # GetReportById
      #
      # Returns the contents of a report with a given report id.
      #
      ##############################################################################

      class GetReportById < Choreography

        ####
        #  Create a new instance of the GetReportById Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/GetReportById")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetReportByIdInputSet
        ####
        def new_input_set()
          return GetReportByIdInputSet.new()
        end

        def make_result_set()
          return GetReportByIdResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetReportByIdResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetReportById
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetReportByIdInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ReportId input for this Choreo. 
          # 
          # @param Integer - (required, integer) The id of the report to retrieve.
          ###

          def set_ReportId(value)
            set_input("ReportId", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetReportById Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetReportByIdResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - The response from Amazon which contains the contents of the report requested. This is typically a flat file or XML information.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "ContentMD5Header" output from this Choreo execution
        	#
        	# @return String - (string) 
        	####
        	def get_ContentMD5Header()
        	  return @outputs["ContentMD5Header"]
        	end
        end

      end # class GetReportById



      ##############################################################################
      #
      # GetReportCount
      #
      # Retrieves the number of your available Amazon Marketplace reports, ready for download, that were generated in the last 90 days.
      #
      ##############################################################################

      class GetReportCount < Choreography

        ####
        #  Create a new instance of the GetReportCount Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/GetReportCount")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetReportCountInputSet
        ####
        def new_input_set()
          return GetReportCountInputSet.new()
        end

        def make_result_set()
          return GetReportCountResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetReportCountResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetReportCount
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetReportCountInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Acknowledged input for this Choreo. 
          # 
          # @param Boolean - (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to "true" to list order reports that have been acknowledged.
          ###

          def set_Acknowledged(value)
            set_input("Acknowledged", value)
          end
          #### 
          # Set the value of the AvailableFromDate input for this Choreo. 
          # 
          # @param String - (optional, date) The earliest date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_AvailableFromDate(value)
            set_input("AvailableFromDate", value)
          end
          #### 
          # Set the value of the AvailableToDate input for this Choreo. 
          # 
          # @param String - (optional, date) The most recent date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_AvailableToDate(value)
            set_input("AvailableToDate", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ReportType input for this Choreo. 
          # 
          # @param String - (optional, string) A ReportType enumeration value (i.e. _GET_FLAT_FILE_OPEN_LISTINGS_DATA_).
          ###

          def set_ReportType(value)
            set_input("ReportType", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetReportCount Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetReportCountResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Count" output from this Choreo execution
        	#
        	# @return String - (integer) A non-negative integer. parsed from the Amazon response, that represents the total number of reports available to download.
        	####
        	def get_Count()
        	  return @outputs["Count"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetReportCount



      ##############################################################################
      #
      # GetReportList
      #
      # Returns a list of reports that were created in the previous 90 days.
      #
      ##############################################################################

      class GetReportList < Choreography

        ####
        #  Create a new instance of the GetReportList Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/GetReportList")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetReportListInputSet
        ####
        def new_input_set()
          return GetReportListInputSet.new()
        end

        def make_result_set()
          return GetReportListResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetReportListResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetReportList
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetReportListInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Acknowledged input for this Choreo. 
          # 
          # @param Boolean - (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to "true" to list order reports that have been acknowledged.
          ###

          def set_Acknowledged(value)
            set_input("Acknowledged", value)
          end
          #### 
          # Set the value of the AvailableFromDate input for this Choreo. 
          # 
          # @param String - (optional, date) The earliest date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_AvailableFromDate(value)
            set_input("AvailableFromDate", value)
          end
          #### 
          # Set the value of the AvailableToDate input for this Choreo. 
          # 
          # @param String - (optional, date) The most recent date you are looking for, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_AvailableToDate(value)
            set_input("AvailableToDate", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the MaxCount input for this Choreo. 
          # 
          # @param Integer - (optional, integer) A non-negative integer that represents the maximum number of report requests to return. Defaults to 10. Max is 100.
          ###

          def set_MaxCount(value)
            set_input("MaxCount", value)
          end
          #### 
          # Set the value of the ReportRequestId input for this Choreo. 
          # 
          # @param Integer - (optional, integer) A ReportRequestId value. If you pass a ReportRequestId value, other query conditions are ignored.
          ###

          def set_ReportRequestId(value)
            set_input("ReportRequestId", value)
          end
          #### 
          # Set the value of the ReportType input for this Choreo. 
          # 
          # @param String - (optional, string) A ReportType enumeration value (i.e. GET_ORDERS_DATA_).
          ###

          def set_ReportType(value)
            set_input("ReportType", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (conditional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetReportList Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetReportListResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "ReportId" output from this Choreo execution
        	#
        	# @return String - (integer) The report id parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
        	####
        	def get_ReportId()
        	  return @outputs["ReportId"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class GetReportList



      ##############################################################################
      #
      # GetReportRequestList
      #
      # Returns a list of report requests that you can use to get the ReportProcessingStatus and ReportId in order to retrieve a report.
      #
      ##############################################################################

      class GetReportRequestList < Choreography

        ####
        #  Create a new instance of the GetReportRequestList Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/GetReportRequestList")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetReportRequestListInputSet
        ####
        def new_input_set()
          return GetReportRequestListInputSet.new()
        end

        def make_result_set()
          return GetReportRequestListResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetReportRequestListResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetReportRequestList
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetReportRequestListInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the MaxCount input for this Choreo. 
          # 
          # @param Integer - (optional, integer) A non-negative integer that represents the maximum number of report requests to return. Defaults to 10. Max is 100.
          ###

          def set_MaxCount(value)
            set_input("MaxCount", value)
          end
          #### 
          # Set the value of the ReportProcessingStatusList input for this Choreo. 
          # 
          # @param String - (optional, string) A comma separated list of up to three ReportProcessingStatuses by which to filter report requests.
          ###

          def set_ReportProcessingStatusList(value)
            set_input("ReportProcessingStatusList", value)
          end
          #### 
          # Set the value of the ReportRequestIdList input for this Choreo. 
          # 
          # @param String - (optional, string) A comma separated list of up to three ReportRequestId values. If you pass in a ReportRequestId values, other query conditions are ignored.
          ###

          def set_ReportRequestIdList(value)
            set_input("ReportRequestIdList", value)
          end
          #### 
          # Set the value of the ReportTypeList input for this Choreo. 
          # 
          # @param String - (optional, string) A comma separated list of up to three ReportType enumeration values.
          ###

          def set_ReportTypeList(value)
            set_input("ReportTypeList", value)
          end
          #### 
          # Set the value of the RequestedFromDate input for this Choreo. 
          # 
          # @param String - (optional, date) The start of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_RequestedFromDate(value)
            set_input("RequestedFromDate", value)
          end
          #### 
          # Set the value of the RequestedToDate input for this Choreo. 
          # 
          # @param String - (optional, date) The end of the date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_RequestedToDate(value)
            set_input("RequestedToDate", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetReportRequestList Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetReportRequestListResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "ReportRequestId" output from this Choreo execution
        	#
        	# @return String - (integer) The report request id parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
        	####
        	def get_ReportRequestId()
        	  return @outputs["ReportRequestId"]
        	end
        	####
        	# Retrieve the value for the "ReportProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The report status parsed from the Amazon response. If multiple records are returned, this output variable will contain the report status in the list.
        	####
        	def get_ReportProcessingStatus()
        	  return @outputs["ReportProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "GeneratedReportId" output from this Choreo execution
        	#
        	# @return String - (integer) The GeneratedReportId parsed from the Amazon response. If multiple records are returned, this output variable will contain the first id in the list.
        	####
        	def get_GeneratedReportId()
        	  return @outputs["GeneratedReportId"]
        	end
        end

      end # class GetReportRequestList



      ##############################################################################
      #
      # ListInventoryReport
      #
      # Returns a tab-delimited report of open listings. The report contains the SKU, ASIN, Price, and Quantity fields for inventory listings.
      #
      ##############################################################################

      class ListInventoryReport < Choreography

        ####
        #  Create a new instance of the ListInventoryReport Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/ListInventoryReport")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return ListInventoryReportInputSet
        ####
        def new_input_set()
          return ListInventoryReportInputSet.new()
        end

        def make_result_set()
          return ListInventoryReportResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = ListInventoryReportResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the ListInventoryReport
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class ListInventoryReportInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the ListInventoryReport Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class ListInventoryReportResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Report" output from this Choreo execution
        	#
        	# @return String - (multiline) The report contents.
        	####
        	def get_Report()
        	  return @outputs["Report"]
        	end
        	####
        	# Retrieve the value for the "ReportRequestId" output from this Choreo execution
        	#
        	# @return String - (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
        	####
        	def get_ReportRequestId()
        	  return @outputs["ReportRequestId"]
        	end
        	####
        	# Retrieve the value for the "ReportProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The status of the report request parsed from the Amazon response.
        	####
        	def get_ReportProcessingStatus()
        	  return @outputs["ReportProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "GeneratedReportId" output from this Choreo execution
        	#
        	# @return String - (integer) The GeneratedReportId parsed from the Amazon response.
        	####
        	def get_GeneratedReportId()
        	  return @outputs["GeneratedReportId"]
        	end
        end

      end # class ListInventoryReport



      ##############################################################################
      #
      # MerchantListingsLiteReport
      #
      # Returns a tab-delimited flat file active listings report that contains only the SKU, ASIN, Price, and Quantity fields for items that have a quantity greater than zero.
      #
      ##############################################################################

      class MerchantListingsLiteReport < Choreography

        ####
        #  Create a new instance of the MerchantListingsLiteReport Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/MerchantListingsLiteReport")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return MerchantListingsLiteReportInputSet
        ####
        def new_input_set()
          return MerchantListingsLiteReportInputSet.new()
        end

        def make_result_set()
          return MerchantListingsLiteReportResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = MerchantListingsLiteReportResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the MerchantListingsLiteReport
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class MerchantListingsLiteReportInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the MerchantListingsLiteReport Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class MerchantListingsLiteReportResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "ReportProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The status of the report request parsed from the Amazon response.
        	####
        	def get_ReportProcessingStatus()
        	  return @outputs["ReportProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "GeneratedReportId" output from this Choreo execution
        	#
        	# @return String - (integer) The GeneratedReportId parsed from the Amazon response.
        	####
        	def get_GeneratedReportId()
        	  return @outputs["GeneratedReportId"]
        	end
        	####
        	# Retrieve the value for the "Report" output from this Choreo execution
        	#
        	# @return String - (multiline) The report contents.
        	####
        	def get_Report()
        	  return @outputs["Report"]
        	end
        	####
        	# Retrieve the value for the "ReportRequestId" output from this Choreo execution
        	#
        	# @return String - (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
        	####
        	def get_ReportRequestId()
        	  return @outputs["ReportRequestId"]
        	end
        end

      end # class MerchantListingsLiteReport



      ##############################################################################
      #
      # MerchantListingsReport
      #
      # Returns a tab-delimited report of active listings.
      #
      ##############################################################################

      class MerchantListingsReport < Choreography

        ####
        #  Create a new instance of the MerchantListingsReport Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/MerchantListingsReport")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return MerchantListingsReportInputSet
        ####
        def new_input_set()
          return MerchantListingsReportInputSet.new()
        end

        def make_result_set()
          return MerchantListingsReportResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = MerchantListingsReportResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the MerchantListingsReport
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class MerchantListingsReportInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the MerchantListingsReport Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class MerchantListingsReportResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "ReportRequestId" output from this Choreo execution
        	#
        	# @return String - (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
        	####
        	def get_ReportRequestId()
        	  return @outputs["ReportRequestId"]
        	end
        	####
        	# Retrieve the value for the "Report" output from this Choreo execution
        	#
        	# @return String - (multiline) The report contents.
        	####
        	def get_Report()
        	  return @outputs["Report"]
        	end
        	####
        	# Retrieve the value for the "GeneratedReportId" output from this Choreo execution
        	#
        	# @return String - (integer) The GeneratedReportId parsed from the Amazon response.
        	####
        	def get_GeneratedReportId()
        	  return @outputs["GeneratedReportId"]
        	end
        	####
        	# Retrieve the value for the "ReportProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The status of the report request parsed from the Amazon response.
        	####
        	def get_ReportProcessingStatus()
        	  return @outputs["ReportProcessingStatus"]
        	end
        end

      end # class MerchantListingsReport



      ##############################################################################
      #
      # RequestReport
      #
      # Creates a report request and submits the request to Amazon MWS.
      #
      ##############################################################################

      class RequestReport < Choreography

        ####
        #  Create a new instance of the RequestReport Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/RequestReport")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return RequestReportInputSet
        ####
        def new_input_set()
          return RequestReportInputSet.new()
        end

        def make_result_set()
          return RequestReportResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = RequestReportResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the RequestReport
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class RequestReportInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the EndDate input for this Choreo. 
          # 
          # @param String - (optional, date) The end of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_EndDate(value)
            set_input("EndDate", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ReportOptions input for this Choreo. 
          # 
          # @param String - (optional, string) A Boolean value that shows or hides an additional column of information on several order reports. When set to ShowSalesChannel=true, an additional column is added showing the sales channel.
          ###

          def set_ReportOptions(value)
            set_input("ReportOptions", value)
          end
          #### 
          # Set the value of the ReportType input for this Choreo. 
          # 
          # @param String - (optional, string) A ReportType enumeration value. Defaults to _GET_FLAT_FILE_OPEN_LISTINGS_DATA_.
          ###

          def set_ReportType(value)
            set_input("ReportType", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end
          #### 
          # Set the value of the StartDate input for this Choreo. 
          # 
          # @param String - (optional, date) The start of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_StartDate(value)
            set_input("StartDate", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the RequestReport Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class RequestReportResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "ReportRequestId" output from this Choreo execution
        	#
        	# @return String - (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
        	####
        	def get_ReportRequestId()
        	  return @outputs["ReportRequestId"]
        	end
        	####
        	# Retrieve the value for the "ReportProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The status of the report request parsed from the Amazon response.
        	####
        	def get_ReportProcessingStatus()
        	  return @outputs["ReportProcessingStatus"]
        	end
        end

      end # class RequestReport



      ##############################################################################
      #
      # RetrieveReport
      #
      # Creates a report request of any report type, polls for the status of the report, and downloads the report when it's available.
      #
      ##############################################################################

      class RetrieveReport < Choreography

        ####
        #  Create a new instance of the RetrieveReport Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/RetrieveReport")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return RetrieveReportInputSet
        ####
        def new_input_set()
          return RetrieveReportInputSet.new()
        end

        def make_result_set()
          return RetrieveReportResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = RetrieveReportResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the RetrieveReport
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class RetrieveReportInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the EndDate input for this Choreo. 
          # 
          # @param String - (optional, date) The end of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_EndDate(value)
            set_input("EndDate", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ReportType input for this Choreo. 
          # 
          # @param String - (optional, string) A ReportType enumeration value. Defaults to _GET_FLAT_FILE_OPEN_LISTINGS_DATA_.
          ###

          def set_ReportType(value)
            set_input("ReportType", value)
          end
          #### 
          # Set the value of the StartDate input for this Choreo. 
          # 
          # @param String - (optional, date) The start of a date range used for selecting the data to report, in ISO8601 date format (i.e. 2012-01-01).
          ###

          def set_StartDate(value)
            set_input("StartDate", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 10 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the RetrieveReport Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class RetrieveReportResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "ReportRequestId" output from this Choreo execution
        	#
        	# @return String - (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
        	####
        	def get_ReportRequestId()
        	  return @outputs["ReportRequestId"]
        	end
        	####
        	# Retrieve the value for the "GeneratedReportId" output from this Choreo execution
        	#
        	# @return String - (integer) The GeneratedReportId parsed from the Amazon response.
        	####
        	def get_GeneratedReportId()
        	  return @outputs["GeneratedReportId"]
        	end
        	####
        	# Retrieve the value for the "ReportProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The status of the report request parsed from the Amazon response.
        	####
        	def get_ReportProcessingStatus()
        	  return @outputs["ReportProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "Report" output from this Choreo execution
        	#
        	# @return String - The report contents.
        	####
        	def get_Report()
        	  return @outputs["Report"]
        	end
        end

      end # class RetrieveReport



      ##############################################################################
      #
      # UnshippedOrdersReport
      #
      # Returns a tab-delimited flat file report that contains only orders that are not confirmed as shipped.
      #
      ##############################################################################

      class UnshippedOrdersReport < Choreography

        ####
        #  Create a new instance of the UnshippedOrdersReport Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/UnshippedOrdersReport")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return UnshippedOrdersReportInputSet
        ####
        def new_input_set()
          return UnshippedOrdersReportInputSet.new()
        end

        def make_result_set()
          return UnshippedOrdersReportResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = UnshippedOrdersReportResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the UnshippedOrdersReport
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class UnshippedOrdersReportInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the TimeToWait input for this Choreo. 
          # 
          # @param Integer - (optional, integer) By default, the Choreo will wait for 5 minutes to see if the report is ready for retrieval. Max is 120 minutes.
          ###

          def set_TimeToWait(value)
            set_input("TimeToWait", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the UnshippedOrdersReport Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class UnshippedOrdersReportResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "GeneratedReportId" output from this Choreo execution
        	#
        	# @return String - (integer) The GeneratedReportId parsed from the Amazon response.
        	####
        	def get_GeneratedReportId()
        	  return @outputs["GeneratedReportId"]
        	end
        	####
        	# Retrieve the value for the "Report" output from this Choreo execution
        	#
        	# @return String - (multiline) The report contents.
        	####
        	def get_Report()
        	  return @outputs["Report"]
        	end
        	####
        	# Retrieve the value for the "ReportProcessingStatus" output from this Choreo execution
        	#
        	# @return String - (string) The status of the report request parsed from the Amazon response.
        	####
        	def get_ReportProcessingStatus()
        	  return @outputs["ReportProcessingStatus"]
        	end
        	####
        	# Retrieve the value for the "ReportRequestId" output from this Choreo execution
        	#
        	# @return String - (integer) The ReportRequestId parsed from the Amazon response. This id is used in GetReportRequestList.
        	####
        	def get_ReportRequestId()
        	  return @outputs["ReportRequestId"]
        	end
        end

      end # class UnshippedOrdersReport



      ##############################################################################
      #
      # UpdateReportAcknowledgements
      #
      # Updates the acknowledged status of a report.
      #
      ##############################################################################

      class UpdateReportAcknowledgements < Choreography

        ####
        #  Create a new instance of the UpdateReportAcknowledgements Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/Marketplace/Reports/UpdateReportAcknowledgements")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return UpdateReportAcknowledgementsInputSet
        ####
        def new_input_set()
          return UpdateReportAcknowledgementsInputSet.new()
        end

        def make_result_set()
          return UpdateReportAcknowledgementsResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = UpdateReportAcknowledgementsResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the UpdateReportAcknowledgements
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class UpdateReportAcknowledgementsInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSMarketplaceId input for this Choreo. 
          # 
          # @param String - (required, string) The Marketplace ID provided by Amazon Web Services.
          ###

          def set_AWSMarketplaceId(value)
            set_input("AWSMarketplaceId", value)
          end
          #### 
          # Set the value of the AWSMerchantId input for this Choreo. 
          # 
          # @param String - (required, string) The Merchant ID provided by Amazon Web Services.
          ###

          def set_AWSMerchantId(value)
            set_input("AWSMerchantId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the Acknowledged input for this Choreo. 
          # 
          # @param Boolean - (optional, boolean) A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to true to list order reports that have been acknowledged.
          ###

          def set_Acknowledged(value)
            set_input("Acknowledged", value)
          end
          #### 
          # Set the value of the Endpoint input for this Choreo. 
          # 
          # @param String - (conditional, string) The base URL for the MWS endpoint. Defaults to mws.amazonservices.co.uk.
          ###

          def set_Endpoint(value)
            set_input("Endpoint", value)
          end
          #### 
          # Set the value of the ReportId input for this Choreo. 
          # 
          # @param Integer - (required, integer) The id of the report to acknowledge.
          ###

          def set_ReportId(value)
            set_input("ReportId", value)
          end
          #### 
          # Set the value of the ResponseFormat input for this Choreo. 
          # 
          # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
          ###

          def set_ResponseFormat(value)
            set_input("ResponseFormat", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the UpdateReportAcknowledgements Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class UpdateReportAcknowledgementsResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - Stores the response from Amazon.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class UpdateReportAcknowledgements




    end # module Reports

  end # module Marketplace

  module RDS



    ##############################################################################
    #
    # AuthorizeDBSecurityGroupIngress
    #
    # Allows restricted access to your database instance by adding EC2 Security Groups to the DBSecurityGroup or by specifying an allowed IP range.
    #
    ##############################################################################

    class AuthorizeDBSecurityGroupIngress < Choreography

      ####
      #  Create a new instance of the AuthorizeDBSecurityGroupIngress Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/AuthorizeDBSecurityGroupIngress")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AuthorizeDBSecurityGroupIngressInputSet
      ####
      def new_input_set()
        return AuthorizeDBSecurityGroupIngressInputSet.new()
      end

      def make_result_set()
        return AuthorizeDBSecurityGroupIngressResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AuthorizeDBSecurityGroupIngressResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AuthorizeDBSecurityGroupIngress
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AuthorizeDBSecurityGroupIngressInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the CIDRIP input for this Choreo. 
        # 
        # @param String - (conditional, string) IP range that should have access. Required unless EC2SecurityGroupName and EC2SecurityGroupOwnerId are used.
        ###

        def set_CIDRIP(value)
          set_input("CIDRIP", value)
        end
        #### 
        # Set the value of the DBSecurityGroupName input for this Choreo. 
        # 
        # @param String - (required, string) A unique name for the security group you want to authorize.
        ###

        def set_DBSecurityGroupName(value)
          set_input("DBSecurityGroupName", value)
        end
        #### 
        # Set the value of the EC2SecurityGroupName input for this Choreo. 
        # 
        # @param String - (conditional, string) The EC2 security group to authorize. This and EC2SecurityGroupOwnerId are required if CIDRIP is not used.
        ###

        def set_EC2SecurityGroupName(value)
          set_input("EC2SecurityGroupName", value)
        end
        #### 
        # Set the value of the EC2SecurityGroupOwnerId input for this Choreo. 
        # 
        # @param String - (conditional, string) The AWS account number for the security group owner. This and EC2SecurityGroupName are required if CIDRIP is not used.
        ###

        def set_EC2SecurityGroupOwnerId(value)
          set_input("EC2SecurityGroupOwnerId", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AuthorizeDBSecurityGroupIngress Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AuthorizeDBSecurityGroupIngressResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AuthorizeDBSecurityGroupIngress



    ##############################################################################
    #
    # CreateDBInstance
    #
    # Creates a new database instance.
    #
    ##############################################################################

    class CreateDBInstance < Choreography

      ####
      #  Create a new instance of the CreateDBInstance Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/CreateDBInstance")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateDBInstanceInputSet
      ####
      def new_input_set()
        return CreateDBInstanceInputSet.new()
      end

      def make_result_set()
        return CreateDBInstanceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateDBInstanceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateDBInstance
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateDBInstanceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AllocatedStorage input for this Choreo. 
        # 
        # @param Integer - (required, integer) Storage amount (in gigabytes) to be configured for the DB. Use 5 to 1024 for MySQL , 10 to 1024 for Oracle, or 200 to 1024 for SQLServer.
        ###

        def set_AllocatedStorage(value)
          set_input("AllocatedStorage", value)
        end
        #### 
        # Set the value of the AutoMinorVersionUpgrade input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Indicates that minor engine upgrades will be applied to the DB Instance automatically during the maintenance window.
        ###

        def set_AutoMinorVersionUpgrade(value)
          set_input("AutoMinorVersionUpgrade", value)
        end
        #### 
        # Set the value of the AvailabilityZone input for this Choreo. 
        # 
        # @param String - (optional, string) The EC2 Availability Zone that the database instance will be created in (e.g. us-east-1a, us-east-1b, us-east-1c).
        ###

        def set_AvailabilityZone(value)
          set_input("AvailabilityZone", value)
        end
        #### 
        # Set the value of the BackupRetentionPeriod input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The number of days for which automated backups are retained. When set to a positive number, backups are enabled. Set to 0 to disable automated backups.
        ###

        def set_BackupRetentionPeriod(value)
          set_input("BackupRetentionPeriod", value)
        end
        #### 
        # Set the value of the CharacterSetName input for this Choreo. 
        # 
        # @param String - (optional, string) Indicates that the DB Instance should be associated with the specified CharacterSet.
        ###

        def set_CharacterSetName(value)
          set_input("CharacterSetName", value)
        end
        #### 
        # Set the value of the DBInstanceClass input for this Choreo. 
        # 
        # @param String - (required, string) Capacity for the DB instance.  (db.t1.micro, db.m1.small, db.m1.large, db.m1.xlarge, db.m2.xlarge, db.m2.2xlarge, or db.m2.4xlarge).
        ###

        def set_DBInstanceClass(value)
          set_input("DBInstanceClass", value)
        end
        #### 
        # Set the value of the DBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The DB Instance identifier. Should be in all lowercase.
        ###

        def set_DBInstanceIdentifier(value)
          set_input("DBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the DBName input for this Choreo. 
        # 
        # @param String - (conditional, string) For MySQL, this is the name of the db that is created on the instance. For Oracle, it refers to the SID. Must be null for SQLServer.
        ###

        def set_DBName(value)
          set_input("DBName", value)
        end
        #### 
        # Set the value of the DBParameterGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the DB Parameter Group to associate with this DB instance. If this argument is omitted, the default DBParameterGroup for the specified engine will be used.
        ###

        def set_DBParameterGroupName(value)
          set_input("DBParameterGroupName", value)
        end
        #### 
        # Set the value of the DBSecurityGroups input for this Choreo. 
        # 
        # @param String - (optional, string) A comma separated list of up to 10 DB Security Groups to associate with this DB Instance.
        ###

        def set_DBSecurityGroups(value)
          set_input("DBSecurityGroups", value)
        end
        #### 
        # Set the value of the DBSubnetGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) A DB Subnet Group to associate with this DB Instance. When not specified, it indicates that this is a non-VPC DB instance.
        ###

        def set_DBSubnetGroupName(value)
          set_input("DBSubnetGroupName", value)
        end
        #### 
        # Set the value of the EngineVersion input for this Choreo. 
        # 
        # @param String - (optional, string) The version number of the database engine to use.
        ###

        def set_EngineVersion(value)
          set_input("EngineVersion", value)
        end
        #### 
        # Set the value of the Engine input for this Choreo. 
        # 
        # @param String - (required, string) The name of the database engine to use for the instance. Options are: MySQL, oracle-se1, oracle-se, oracle-ee, sqlserver-ee, sqlserver-se, sqlserver-ex, sqlserver-web.
        ###

        def set_Engine(value)
          set_input("Engine", value)
        end
        #### 
        # Set the value of the Iops input for this Choreo. 
        # 
        # @param String - (optional, string) The amount of provisioned input/output operations per second to be initially allocated for the DB Instance.
        ###

        def set_Iops(value)
          set_input("Iops", value)
        end
        #### 
        # Set the value of the LicenseModel input for this Choreo. 
        # 
        # @param String - (optional, string) License model information for this DB Instance. Valid values are: license-included, bring-your-own-license, general-public-license.
        ###

        def set_LicenseModel(value)
          set_input("LicenseModel", value)
        end
        #### 
        # Set the value of the MasterUserPassword input for this Choreo. 
        # 
        # @param String - (required, password) The master password for the DB instance.
        ###

        def set_MasterUserPassword(value)
          set_input("MasterUserPassword", value)
        end
        #### 
        # Set the value of the MasterUsername input for this Choreo. 
        # 
        # @param String - (required, string) The master username for the DB instance.
        ###

        def set_MasterUsername(value)
          set_input("MasterUsername", value)
        end
        #### 
        # Set the value of the MultiAZ input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true.
        ###

        def set_MultiAZ(value)
          set_input("MultiAZ", value)
        end
        #### 
        # Set the value of the OptionGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) Indicates that the DB Instance should be associated with the specified option group.
        ###

        def set_OptionGroupName(value)
          set_input("OptionGroupName", value)
        end
        #### 
        # Set the value of the Port input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The port number on which the database accepts connections. Valid range for MySQL is 1150-65535. Valid range for Oracle is 1150-65535. Valid range for SQLServer is 1150-65535 except for 1434 and 3389.
        ###

        def set_Port(value)
          set_input("Port", value)
        end
        #### 
        # Set the value of the PreferredBackupWindow input for this Choreo. 
        # 
        # @param String - (optional, string) The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter. Must be in the format hh24:mi-hh24:mi (in UTC).
        ###

        def set_PreferredBackupWindow(value)
          set_input("PreferredBackupWindow", value)
        end
        #### 
        # Set the value of the PreferredMaintenanceWindow input for this Choreo. 
        # 
        # @param String - (optional, string) The weekly time range (in UTC) during which system maintenance can occur. Format: ddd:hh24:mi-ddd:hh24:mi.
        ###

        def set_PreferredMaintenanceWindow(value)
          set_input("PreferredMaintenanceWindow", value)
        end
        #### 
        # Set the value of the PubliclyAccessible input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies the accessibility options for the DB Instance. The default behavior varies depending on whether a VPC has been requested or not.
        ###

        def set_PubliclyAccessible(value)
          set_input("PubliclyAccessible", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VpcSecurityGroupIds input for this Choreo. 
        # 
        # @param String - (optional, string) A comma separated list of up to 10 EC2 VPC Security Groups to associate with this DB Instance.
        ###

        def set_VpcSecurityGroupIds(value)
          set_input("VpcSecurityGroupIds", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateDBInstance Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateDBInstanceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateDBInstance



    ##############################################################################
    #
    # CreateDBSecurityGroup
    #
    # Creates a new database security group which you can use to control the access to the database instance.
    #
    ##############################################################################

    class CreateDBSecurityGroup < Choreography

      ####
      #  Create a new instance of the CreateDBSecurityGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/CreateDBSecurityGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateDBSecurityGroupInputSet
      ####
      def new_input_set()
        return CreateDBSecurityGroupInputSet.new()
      end

      def make_result_set()
        return CreateDBSecurityGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateDBSecurityGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateDBSecurityGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateDBSecurityGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBSecurityGroupDescription input for this Choreo. 
        # 
        # @param String - (required, string) A description for the security group you're creating.
        ###

        def set_DBSecurityGroupDescription(value)
          set_input("DBSecurityGroupDescription", value)
        end
        #### 
        # Set the value of the DBSecurityGroupName input for this Choreo. 
        # 
        # @param String - (required, string) A unique name for the security group you want to create.
        ###

        def set_DBSecurityGroupName(value)
          set_input("DBSecurityGroupName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateDBSecurityGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateDBSecurityGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateDBSecurityGroup



    ##############################################################################
    #
    # CreateDBSnapshot
    #
    # Creates a snapshot of an existing database instance.
    #
    ##############################################################################

    class CreateDBSnapshot < Choreography

      ####
      #  Create a new instance of the CreateDBSnapshot Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/CreateDBSnapshot")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateDBSnapshotInputSet
      ####
      def new_input_set()
        return CreateDBSnapshotInputSet.new()
      end

      def make_result_set()
        return CreateDBSnapshotResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateDBSnapshotResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateDBSnapshot
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateDBSnapshotInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The DB Instance identifier. Should be in all lowercase.
        ###

        def set_DBInstanceIdentifier(value)
          set_input("DBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the DBSnapshotIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The unique identifier for the db snapshot you're creating.
        ###

        def set_DBSnapshotIdentifier(value)
          set_input("DBSnapshotIdentifier", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateDBSnapshot Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateDBSnapshotResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateDBSnapshot



    ##############################################################################
    #
    # DeleteDBInstance
    #
    # Deletes a specified database instance.
    #
    ##############################################################################

    class DeleteDBInstance < Choreography

      ####
      #  Create a new instance of the DeleteDBInstance Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/DeleteDBInstance")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteDBInstanceInputSet
      ####
      def new_input_set()
        return DeleteDBInstanceInputSet.new()
      end

      def make_result_set()
        return DeleteDBInstanceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteDBInstanceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteDBInstance
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteDBInstanceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The ID for the DB instance to delete.
        ###

        def set_DBInstanceIdentifier(value)
          set_input("DBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteDBInstance Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteDBInstanceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteDBInstance



    ##############################################################################
    #
    # DeleteDBSecurityGroup
    #
    # Deletes a specified database security group.
    #
    ##############################################################################

    class DeleteDBSecurityGroup < Choreography

      ####
      #  Create a new instance of the DeleteDBSecurityGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/DeleteDBSecurityGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteDBSecurityGroupInputSet
      ####
      def new_input_set()
        return DeleteDBSecurityGroupInputSet.new()
      end

      def make_result_set()
        return DeleteDBSecurityGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteDBSecurityGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteDBSecurityGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteDBSecurityGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBSecurityGroupName input for this Choreo. 
        # 
        # @param String - (required, string) The name for the security group you want to delete.
        ###

        def set_DBSecurityGroupName(value)
          set_input("DBSecurityGroupName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteDBSecurityGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteDBSecurityGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (string) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteDBSecurityGroup



    ##############################################################################
    #
    # DeleteDBSnapshot
    #
    # Deletes a specified database snapshot.
    #
    ##############################################################################

    class DeleteDBSnapshot < Choreography

      ####
      #  Create a new instance of the DeleteDBSnapshot Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/DeleteDBSnapshot")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteDBSnapshotInputSet
      ####
      def new_input_set()
        return DeleteDBSnapshotInputSet.new()
      end

      def make_result_set()
        return DeleteDBSnapshotResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteDBSnapshotResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteDBSnapshot
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteDBSnapshotInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBSnapshotIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) A unique identifier for the snapshot you want to delete.
        ###

        def set_DBSnapshotIdentifier(value)
          set_input("DBSnapshotIdentifier", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteDBSnapshot Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteDBSnapshotResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteDBSnapshot



    ##############################################################################
    #
    # DescribeDBInstances
    #
    # Returns information about privisioned database instances.
    #
    ##############################################################################

    class DescribeDBInstances < Choreography

      ####
      #  Create a new instance of the DescribeDBInstances Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/DescribeDBInstances")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeDBInstancesInputSet
      ####
      def new_input_set()
        return DescribeDBInstancesInputSet.new()
      end

      def make_result_set()
        return DescribeDBInstancesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeDBInstancesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeDBInstances
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeDBInstancesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (optional, string) The DB Instance identifier. Should be in all lowercase.
        ###

        def set_DBInstanceIdentifier(value)
          set_input("DBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param Integer - (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxRecords input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
        ###

        def set_MaxRecords(value)
          set_input("MaxRecords", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeDBInstances Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeDBInstancesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeDBInstances



    ##############################################################################
    #
    # DescribeDBSecurityGroup
    #
    # Returns a list of DBSecurityGroup descriptions. The list will can be filtered by specifying a DBSecurityGroupName.
    #
    ##############################################################################

    class DescribeDBSecurityGroup < Choreography

      ####
      #  Create a new instance of the DescribeDBSecurityGroup Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/DescribeDBSecurityGroup")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeDBSecurityGroupInputSet
      ####
      def new_input_set()
        return DescribeDBSecurityGroupInputSet.new()
      end

      def make_result_set()
        return DescribeDBSecurityGroupResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeDBSecurityGroupResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeDBSecurityGroup
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeDBSecurityGroupInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBSecurityGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) The name for the security group you want to retrieve information for.
        ###

        def set_DBSecurityGroupName(value)
          set_input("DBSecurityGroupName", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param Integer - (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxRecords input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
        ###

        def set_MaxRecords(value)
          set_input("MaxRecords", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeDBSecurityGroup Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeDBSecurityGroupResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeDBSecurityGroup



    ##############################################################################
    #
    # DescribeDBSnapshot
    #
    # Returns information about DB Snapshots.
    #
    ##############################################################################

    class DescribeDBSnapshot < Choreography

      ####
      #  Create a new instance of the DescribeDBSnapshot Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/DescribeDBSnapshot")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeDBSnapshotInputSet
      ####
      def new_input_set()
        return DescribeDBSnapshotInputSet.new()
      end

      def make_result_set()
        return DescribeDBSnapshotResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeDBSnapshotResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeDBSnapshot
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeDBSnapshotInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (optional, string) The DB Instance identifier. Should be in all lowercase.
        ###

        def set_DBInstanceIdentifier(value)
          set_input("DBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the DBSnapshotIdentifier input for this Choreo. 
        # 
        # @param String - (optional, string) The unique identifier for the db snapshot you're retrieving information for.
        ###

        def set_DBSnapshotIdentifier(value)
          set_input("DBSnapshotIdentifier", value)
        end
        #### 
        # Set the value of the MaxRecords input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The max number of results to return in the response. Defaults to 100. Minimum is 20.
        ###

        def set_MaxRecords(value)
          set_input("MaxRecords", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeDBSnapshot Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeDBSnapshotResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeDBSnapshot



    ##############################################################################
    #
    # DescribeEvents
    #
    # Returns events related to DB Instances, DB Security Groups, DB Snapshots and DB Parameter Groups for the past 14 days.
    #
    ##############################################################################

    class DescribeEvents < Choreography

      ####
      #  Create a new instance of the DescribeEvents Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/DescribeEvents")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DescribeEventsInputSet
      ####
      def new_input_set()
        return DescribeEventsInputSet.new()
      end

      def make_result_set()
        return DescribeEventsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DescribeEventsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DescribeEvents
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DescribeEventsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Duration input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The number of minutes to retrieve events for. Defaults to 60.
        ###

        def set_Duration(value)
          set_input("Duration", value)
        end
        #### 
        # Set the value of the EndTime input for this Choreo. 
        # 
        # @param String - (optional, date) The end of the time interval for which to retrieve events, specified in ISO 8601 format (i.e. 2009-07-08T18:00Z).
        ###

        def set_EndTime(value)
          set_input("EndTime", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param Integer - (optional, integer) If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxRecords input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The maximum number of records to include in the response. If more records exist, a marker is included in the response so that the remaining results may be retrieved. Defaults to max (100). Min is 20.
        ###

        def set_MaxRecords(value)
          set_input("MaxRecords", value)
        end
        #### 
        # Set the value of the SourceIdentifier input for this Choreo. 
        # 
        # @param String - (optional, string) The identifier of the event source for which events will be returned. If not specified, then all sources are included in the response.
        ###

        def set_SourceIdentifier(value)
          set_input("SourceIdentifier", value)
        end
        #### 
        # Set the value of the SourceType input for this Choreo. 
        # 
        # @param String - (optional, string) The event source to retrieve events for. If no value is specified, all events are returned. Valid values are: db-instance | db-parameter-group | db-security-group | db-snapshot.
        ###

        def set_SourceType(value)
          set_input("SourceType", value)
        end
        #### 
        # Set the value of the StartTime input for this Choreo. 
        # 
        # @param String - (optional, date) The beginning of the time interval to retrieve events for, specified in ISO 8601 format (i.e. 2009-07-08T18:00Z)
        ###

        def set_StartTime(value)
          set_input("StartTime", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DescribeEvents Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DescribeEventsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DescribeEvents



    ##############################################################################
    #
    # ModifyDBInstance
    #
    # Modify settings for a DB Instance. You can change one or more database configuration parameters by specifying values for the Choreo inputs.
    #
    ##############################################################################

    class ModifyDBInstance < Choreography

      ####
      #  Create a new instance of the ModifyDBInstance Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/ModifyDBInstance")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ModifyDBInstanceInputSet
      ####
      def new_input_set()
        return ModifyDBInstanceInputSet.new()
      end

      def make_result_set()
        return ModifyDBInstanceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ModifyDBInstanceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ModifyDBInstance
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ModifyDBInstanceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AllocatedStorage input for this Choreo. 
        # 
        # @param Integer - (required, integer) Storage amount (in gigabytes) to be configured for the DB. Use 5 to 1024 for MySQL or 10 to 1024 for Oracle. Value supplied must be at least 10% greater than the current value
        ###

        def set_AllocatedStorage(value)
          set_input("AllocatedStorage", value)
        end
        #### 
        # Set the value of the AllowMajorVersionUpgrade input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Indicates that major version upgrades are allowed. Defaults to 0 (false).
        ###

        def set_AllowMajorVersionUpgrade(value)
          set_input("AllowMajorVersionUpgrade", value)
        end
        #### 
        # Set the value of the ApplyImmediately input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies whether or not the modifications applied as soon as possible, regardless of the PreferredMaintenanceWindow setting for the DB Instance. Defaults to 0 (false).
        ###

        def set_ApplyImmediately(value)
          set_input("ApplyImmediately", value)
        end
        #### 
        # Set the value of the AutoMinorVersionUpgrade input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
        ###

        def set_AutoMinorVersionUpgrade(value)
          set_input("AutoMinorVersionUpgrade", value)
        end
        #### 
        # Set the value of the BackupRetentionPeriod input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Number of days to retain automated backups. Setting to a positive number enables backups. Setting to 0 disables automated backups. Must be a value from 0 to 8. Defaults to 0 (disabled).
        ###

        def set_BackupRetentionPeriod(value)
          set_input("BackupRetentionPeriod", value)
        end
        #### 
        # Set the value of the DBInstanceClass input for this Choreo. 
        # 
        # @param String - (required, string) Capacity for the DB instance.  (db.m1.small, db.m1.large, db.m1.xlarge, db.m2.xlarge, db.m2.2xlarge, or db.m2.4xlarge).
        ###

        def set_DBInstanceClass(value)
          set_input("DBInstanceClass", value)
        end
        #### 
        # Set the value of the DBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The DB Instance identifier. Should be in all lowercase.
        ###

        def set_DBInstanceIdentifier(value)
          set_input("DBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the DBParameterGroupName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the DB Parameter Group to apply to this DB Instance.
        ###

        def set_DBParameterGroupName(value)
          set_input("DBParameterGroupName", value)
        end
        #### 
        # Set the value of the DBSecurityGroup input for this Choreo. 
        # 
        # @param String - (optional, string) A DB Security Groups to authorize on this DB Instance.
        ###

        def set_DBSecurityGroup(value)
          set_input("DBSecurityGroup", value)
        end
        #### 
        # Set the value of the EngineVersion input for this Choreo. 
        # 
        # @param String - (optional, string) The version number of the database engine to upgrade to.
        ###

        def set_EngineVersion(value)
          set_input("EngineVersion", value)
        end
        #### 
        # Set the value of the MasterUserPassword input for this Choreo. 
        # 
        # @param String - (required, string) The new password for the DB Instance master user.
        ###

        def set_MasterUserPassword(value)
          set_input("MasterUserPassword", value)
        end
        #### 
        # Set the value of the MultiAZ input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment.
        ###

        def set_MultiAZ(value)
          set_input("MultiAZ", value)
        end
        #### 
        # Set the value of the PreferredBackupWindow input for this Choreo. 
        # 
        # @param String - (optional, string) The daily time range during which automated backups are created. Format: hh24:mi-hh24:mi (in UTC). Must be at least 30 minutes. Can not conflict with PreferredMaintenanceWindow setting.
        ###

        def set_PreferredBackupWindow(value)
          set_input("PreferredBackupWindow", value)
        end
        #### 
        # Set the value of the PreferredMaintenanceWindow input for this Choreo. 
        # 
        # @param String - (optional, string) The weekly time range (in UTC) during which system maintenance can occur, which may result in an outage. Format: ddd:hh24:mi-ddd:hh24:mi. Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun.
        ###

        def set_PreferredMaintenanceWindow(value)
          set_input("PreferredMaintenanceWindow", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ModifyDBInstance Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ModifyDBInstanceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ModifyDBInstance



    ##############################################################################
    #
    # RebootDBInstance
    #
    # Reboots a specified database instance.
    #
    ##############################################################################

    class RebootDBInstance < Choreography

      ####
      #  Create a new instance of the RebootDBInstance Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/RebootDBInstance")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RebootDBInstanceInputSet
      ####
      def new_input_set()
        return RebootDBInstanceInputSet.new()
      end

      def make_result_set()
        return RebootDBInstanceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RebootDBInstanceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RebootDBInstance
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RebootDBInstanceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The ID for the DB instance to reboot.
        ###

        def set_DBInstanceIdentifier(value)
          set_input("DBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RebootDBInstance Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RebootDBInstanceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RebootDBInstance



    ##############################################################################
    #
    # RestoreDBInstanceFromDBSnapshot
    #
    # Creates a new DB Instance from a DB snapshot.
    #
    ##############################################################################

    class RestoreDBInstanceFromDBSnapshot < Choreography

      ####
      #  Create a new instance of the RestoreDBInstanceFromDBSnapshot Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/RestoreDBInstanceFromDBSnapshot")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RestoreDBInstanceFromDBSnapshotInputSet
      ####
      def new_input_set()
        return RestoreDBInstanceFromDBSnapshotInputSet.new()
      end

      def make_result_set()
        return RestoreDBInstanceFromDBSnapshotResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RestoreDBInstanceFromDBSnapshotResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RestoreDBInstanceFromDBSnapshot
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RestoreDBInstanceFromDBSnapshotInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AutoMinorVersionUpgrade input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
        ###

        def set_AutoMinorVersionUpgrade(value)
          set_input("AutoMinorVersionUpgrade", value)
        end
        #### 
        # Set the value of the AvailabilityZone input for this Choreo. 
        # 
        # @param String - (optional, string) The EC2 Availability Zone that the database instance will be created in. A random one is chose if not provided. Can not be specified if the MultiAZ parameter is set to 1 (true).
        ###

        def set_AvailabilityZone(value)
          set_input("AvailabilityZone", value)
        end
        #### 
        # Set the value of the DBInstanceClass input for this Choreo. 
        # 
        # @param String - (optional, string) The compute and memory capacity of the Amazon RDS DB instance. Valid Values: db.m1.small | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge.
        ###

        def set_DBInstanceClass(value)
          set_input("DBInstanceClass", value)
        end
        #### 
        # Set the value of the DBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The identifier for the new DB instance that will be created from the specified Snapshot.
        ###

        def set_DBInstanceIdentifier(value)
          set_input("DBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the DBName input for this Choreo. 
        # 
        # @param String - (optional, string) The database name for the restored DB Instance. Note that this parameter doesn't apply to the MySQL engine.
        ###

        def set_DBName(value)
          set_input("DBName", value)
        end
        #### 
        # Set the value of the DBSnapshotIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The name of the DB Snapshot to use.
        ###

        def set_DBSnapshotIdentifier(value)
          set_input("DBSnapshotIdentifier", value)
        end
        #### 
        # Set the value of the Engine input for this Choreo. 
        # 
        # @param String - (optional, string) The database engine to use for the new instance. Valid Values: MySQL | oracle-se1 | oracle-se | oracle-ee.
        ###

        def set_Engine(value)
          set_input("Engine", value)
        end
        #### 
        # Set the value of the LicenseModel input for this Choreo. 
        # 
        # @param String - (optional, string) License model information for the restored DB Instance. Valid values: license-included | bring-your-own-license | general-public-license.
        ###

        def set_LicenseModel(value)
          set_input("LicenseModel", value)
        end
        #### 
        # Set the value of the MultiAZ input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment. Do not specify the AvailabilityZone parameter if the MultiAZ parameter is set to 1 (true).
        ###

        def set_MultiAZ(value)
          set_input("MultiAZ", value)
        end
        #### 
        # Set the value of the Port input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The port number on which the database accepts connections.
        ###

        def set_Port(value)
          set_input("Port", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RestoreDBInstanceFromDBSnapshot Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RestoreDBInstanceFromDBSnapshotResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RestoreDBInstanceFromDBSnapshot



    ##############################################################################
    #
    # RestoreDBInstanceToPointInTime
    #
    # Restores a DB Instance to an specified point-in-time.
    #
    ##############################################################################

    class RestoreDBInstanceToPointInTime < Choreography

      ####
      #  Create a new instance of the RestoreDBInstanceToPointInTime Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/RestoreDBInstanceToPointInTime")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RestoreDBInstanceToPointInTimeInputSet
      ####
      def new_input_set()
        return RestoreDBInstanceToPointInTimeInputSet.new()
      end

      def make_result_set()
        return RestoreDBInstanceToPointInTimeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RestoreDBInstanceToPointInTimeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RestoreDBInstanceToPointInTime
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RestoreDBInstanceToPointInTimeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AutoMinorVersionUpgrade input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Indicates that minor version upgrades will be applied automatically to the DB Instance during the maintenance window. Defaults to 0 (false).
        ###

        def set_AutoMinorVersionUpgrade(value)
          set_input("AutoMinorVersionUpgrade", value)
        end
        #### 
        # Set the value of the AvailabilityZone input for this Choreo. 
        # 
        # @param String - (optional, string) The EC2 Availability Zone that the database instance will be created in. A random one is chose if not provided. Can not be specified if the MultiAZ parameter is set to 1 (true).
        ###

        def set_AvailabilityZone(value)
          set_input("AvailabilityZone", value)
        end
        #### 
        # Set the value of the DBInstanceClass input for this Choreo. 
        # 
        # @param String - (optional, string) The compute and memory capacity of the Amazon RDS DB instance. Valid Values: db.m1.small | db.m1.large | db.m1.xlarge | db.m2.2xlarge | db.m2.4xlarge.
        ###

        def set_DBInstanceClass(value)
          set_input("DBInstanceClass", value)
        end
        #### 
        # Set the value of the DBName input for this Choreo. 
        # 
        # @param String - (optional, string) The database name for the restored DB Instance. Note that this parameter doesn't apply to the MySQL engine.
        ###

        def set_DBName(value)
          set_input("DBName", value)
        end
        #### 
        # Set the value of the Engine input for this Choreo. 
        # 
        # @param String - (optional, string) The database engine to use for the new instance. Valid Values: MySQL | oracle-se1 | oracle-se | oracle-ee.
        ###

        def set_Engine(value)
          set_input("Engine", value)
        end
        #### 
        # Set the value of the LicenseModel input for this Choreo. 
        # 
        # @param String - (optional, string) License model information for the restored DB Instance. Valid values: license-included | bring-your-own-license | general-public-license.
        ###

        def set_LicenseModel(value)
          set_input("LicenseModel", value)
        end
        #### 
        # Set the value of the MultiAZ input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies if the DB Instance is a Multi-AZ deployment. Do not specify the AvailabilityZone parameter if the MultiAZ parameter is set to 1 (true).
        ###

        def set_MultiAZ(value)
          set_input("MultiAZ", value)
        end
        #### 
        # Set the value of the Port input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The port number on which the database accepts connections.
        ###

        def set_Port(value)
          set_input("Port", value)
        end
        #### 
        # Set the value of the RestoreTime input for this Choreo. 
        # 
        # @param String - (optional, date) The date and time to restore from in UTC. Cannot be specified if UseLatestRestorableTime parameter is set to 1. (format: 2009-09-07T23:45:00Z).
        ###

        def set_RestoreTime(value)
          set_input("RestoreTime", value)
        end
        #### 
        # Set the value of the SourceDBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The identifier of the source DB Instance from which to restore.
        ###

        def set_SourceDBInstanceIdentifier(value)
          set_input("SourceDBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the TargetDBInstanceIdentifier input for this Choreo. 
        # 
        # @param String - (required, string) The name of the new database instance to be created.
        ###

        def set_TargetDBInstanceIdentifier(value)
          set_input("TargetDBInstanceIdentifier", value)
        end
        #### 
        # Set the value of the UseLatestRestorableTime input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Specifies whether or not the DB Instance is restored from the latest backup time. Defaults to 0 (false).
        ###

        def set_UseLatestRestorableTime(value)
          set_input("UseLatestRestorableTime", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RestoreDBInstanceToPointInTime Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RestoreDBInstanceToPointInTimeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RestoreDBInstanceToPointInTime



    ##############################################################################
    #
    # RevokeDBSecurityGroupIngress
    #
    # Revokes access from a DBSecurityGroup for previously authorized IP ranges or EC2 Security Groups.
    #
    ##############################################################################

    class RevokeDBSecurityGroupIngress < Choreography

      ####
      #  Create a new instance of the RevokeDBSecurityGroupIngress Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/RDS/RevokeDBSecurityGroupIngress")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RevokeDBSecurityGroupIngressInputSet
      ####
      def new_input_set()
        return RevokeDBSecurityGroupIngressInputSet.new()
      end

      def make_result_set()
        return RevokeDBSecurityGroupIngressResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RevokeDBSecurityGroupIngressResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RevokeDBSecurityGroupIngress
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RevokeDBSecurityGroupIngressInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the CIDRIP input for this Choreo. 
        # 
        # @param String - (conditional, string) IP range that should be revoked. Required unless EC2SecurityGroupName and EC2SecurityGroupOwnerId are used.
        ###

        def set_CIDRIP(value)
          set_input("CIDRIP", value)
        end
        #### 
        # Set the value of the DBSecurityGroupName input for this Choreo. 
        # 
        # @param String - (required, string) A unique name for the security group you want to revoke ingress from.
        ###

        def set_DBSecurityGroupName(value)
          set_input("DBSecurityGroupName", value)
        end
        #### 
        # Set the value of the EC2SecurityGroupName input for this Choreo. 
        # 
        # @param String - (conditional, string) The EC2 security group to revoke. This and EC2SecurityGroupOwnerId are required if CIDRIP is not used.
        ###

        def set_EC2SecurityGroupName(value)
          set_input("EC2SecurityGroupName", value)
        end
        #### 
        # Set the value of the EC2SecurityGroupOwnerId input for this Choreo. 
        # 
        # @param String - (conditional, string) The account number for the security group owner to revoke. This and EC2SecurityGroupName are required if CIDRIP is not used.
        ###

        def set_EC2SecurityGroupOwnerId(value)
          set_input("EC2SecurityGroupOwnerId", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the RDS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RevokeDBSecurityGroupIngress Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RevokeDBSecurityGroupIngressResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RevokeDBSecurityGroupIngress




    module Util



      ##############################################################################
      #
      # CheckUserRegion
      #
      # 
      #
      ##############################################################################

      class CheckUserRegion < Choreography

        ####
        #  Create a new instance of the CheckUserRegion Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/RDS/Util/CheckUserRegion")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return CheckUserRegionInputSet
        ####
        def new_input_set()
          return CheckUserRegionInputSet.new()
        end

        def make_result_set()
          return CheckUserRegionResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = CheckUserRegionResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the CheckUserRegion
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class CheckUserRegionInputSet < Choreography::InputSet

          #### 
          # Set the value of the UserRegion input for this Choreo. 
          # 
          # @param String - (conditional, string) The region that corresponds to the EC2 endpoint you wish to access.
          ###

          def set_UserRegion(value)
            set_input("UserRegion", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the CheckUserRegion Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class CheckUserRegionResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Endpoint" output from this Choreo execution
        	#
        	# @return String - (string) The regional endpoint for Amazon EC2.
        	####
        	def get_Endpoint()
        	  return @outputs["Endpoint"]
        	end
        end

      end # class CheckUserRegion




    end # module Util

  end # module RDS

  module S3



    ##############################################################################
    #
    # CopyObject
    #
    # Makes a copy of an existing object in S3 Storage.
    #
    ##############################################################################

    class CopyObject < Choreography

      ####
      #  Create a new instance of the CopyObject Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/CopyObject")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CopyObjectInputSet
      ####
      def new_input_set()
        return CopyObjectInputSet.new()
      end

      def make_result_set()
        return CopyObjectResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CopyObjectResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CopyObject
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CopyObjectInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that will be the file destination.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CannedACL input for this Choreo. 
        # 
        # @param String - (optional, string) By default all objects are private (only owner has full access control). Valid values: private, public-read, public-read-write, authenticated-read, bucket-owner-read, bucket-owner-full-control.
        ###

        def set_CannedACL(value)
          set_input("CannedACL", value)
        end
        #### 
        # Set the value of the ContentType input for this Choreo. 
        # 
        # @param String - (optional, string) ContentType. Default is application/octet-stream.
        ###

        def set_ContentType(value)
          set_input("ContentType", value)
        end
        #### 
        # Set the value of the FileToCopy input for this Choreo. 
        # 
        # @param String - (required, string) The name of the file to copy.
        ###

        def set_FileToCopy(value)
          set_input("FileToCopy", value)
        end
        #### 
        # Set the value of the IfMatch input for this Choreo. 
        # 
        # @param String - (optional, string) Copies the object if its entity tag (ETag) matches the specified tag; otherwise returns a 412 HTTP status code error (failed precondition).
        ###

        def set_IfMatch(value)
          set_input("IfMatch", value)
        end
        #### 
        # Set the value of the IfModifiedSince input for this Choreo. 
        # 
        # @param String - (optional, date) Copies if it has been modified since the specified time; otherwise returns a 412 HTTP status code error (failed precondition). Must be valid HTTP date. Can be used with IfMatch only.
        ###

        def set_IfModifiedSince(value)
          set_input("IfModifiedSince", value)
        end
        #### 
        # Set the value of the IfNoneMatch input for this Choreo. 
        # 
        # @param String - (optional, string) Copies the object if its entity tag (ETag) is different from the specified tag; otherwise returns a 412 HTTP status code error (failed precondition).
        ###

        def set_IfNoneMatch(value)
          set_input("IfNoneMatch", value)
        end
        #### 
        # Set the value of the IfUnmodifiedSince input for this Choreo. 
        # 
        # @param String - (optional, date) Copies if it hasn't been modified since the specified time; otherwise returns a 412 HTTP status code error (failed precondition). Must be valid HTTP date. Can be used with IfMatch or IfNoneMatch only.
        ###

        def set_IfUnmodifiedSince(value)
          set_input("IfUnmodifiedSince", value)
        end
        #### 
        # Set the value of the NewFileName input for this Choreo. 
        # 
        # @param String - (required, string) The file name for the new copy.
        ###

        def set_NewFileName(value)
          set_input("NewFileName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the ServerSideEncryption input for this Choreo. 
        # 
        # @param String - (optional, string) Specifies the server-side encryption algorithm to use when Amazon S3 creates the target object. Valid value: AES256.
        ###

        def set_ServerSideEncryption(value)
          set_input("ServerSideEncryption", value)
        end
        #### 
        # Set the value of the StorageClass input for this Choreo. 
        # 
        # @param String - (optional, string) Enables RRS customers to store their noncritical, reproducible data at lower levels of redundancy than Amazon S3's standard storage. Valid Values: STANDARD (default), REDUCED_REDUNDANCY.
        ###

        def set_StorageClass(value)
          set_input("StorageClass", value)
        end
        #### 
        # Set the value of the WebsiteRedirectLocation input for this Choreo. 
        # 
        # @param String - (optional, string) If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Ex: /anotherPage.html, http://www.page.com. Length limit: 2 K.
        ###

        def set_WebsiteRedirectLocation(value)
          set_input("WebsiteRedirectLocation", value)
        end
        #### 
        # Set the value of the VaultFile input for this Choreo. 
        # 
        # @param TembooPath - (optional, vault file) The path to a vault file that you want to upload to an Amazon S3 bucket. Required unless using the FileContents input variable.
        ###

        def set_VaultFile(value)
          set_alias("VaultFile", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CopyObject Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CopyObjectResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CopyObject



    ##############################################################################
    #
    # DeleteBucket
    #
    # Deletes a bucket from your Amazon S3 account.
    #
    ##############################################################################

    class DeleteBucket < Choreography

      ####
      #  Create a new instance of the DeleteBucket Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/DeleteBucket")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteBucketInputSet
      ####
      def new_input_set()
        return DeleteBucketInputSet.new()
      end

      def make_result_set()
        return DeleteBucketResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteBucketResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteBucket
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteBucketInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that will be deleted.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteBucket Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteBucketResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. Note that no content is returned for successful deletions.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteBucket



    ##############################################################################
    #
    # DeleteBucketCORS
    #
    # Deletes the CORS (Cross-Origin Resource Sharing) configuration information set for the specified bucket.
    #
    ##############################################################################

    class DeleteBucketCORS < Choreography

      ####
      #  Create a new instance of the DeleteBucketCORS Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/DeleteBucketCORS")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteBucketCORSInputSet
      ####
      def new_input_set()
        return DeleteBucketCORSInputSet.new()
      end

      def make_result_set()
        return DeleteBucketCORSResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteBucketCORSResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteBucketCORS
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteBucketCORSInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that the CORS configuration should be removed from.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteBucketCORS Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteBucketCORSResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. Note that for a successful exection, this API operation returns an empty 204 response.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteBucketCORS



    ##############################################################################
    #
    # DeleteBucketLifecycle
    #
    # Deletes the lifecycle configuration from the specified bucket.
    #
    ##############################################################################

    class DeleteBucketLifecycle < Choreography

      ####
      #  Create a new instance of the DeleteBucketLifecycle Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/DeleteBucketLifecycle")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteBucketLifecycleInputSet
      ####
      def new_input_set()
        return DeleteBucketLifecycleInputSet.new()
      end

      def make_result_set()
        return DeleteBucketLifecycleResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteBucketLifecycleResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteBucketLifecycle
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteBucketLifecycleInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the lifecycle you want to delete.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteBucketLifecycle Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteBucketLifecycleResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful delete operation, no content is returned, and this output variable should be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteBucketLifecycle



    ##############################################################################
    #
    # DeleteBucketPolicy
    #
    # Deletes the policy on a specified bucket.
    #
    ##############################################################################

    class DeleteBucketPolicy < Choreography

      ####
      #  Create a new instance of the DeleteBucketPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/DeleteBucketPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteBucketPolicyInputSet
      ####
      def new_input_set()
        return DeleteBucketPolicyInputSet.new()
      end

      def make_result_set()
        return DeleteBucketPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteBucketPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteBucketPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteBucketPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the policy you want to delete.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteBucketPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteBucketPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful delete operation, no content is returned, and this output variable should be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteBucketPolicy



    ##############################################################################
    #
    # DeleteBucketTagging
    #
    # Removes a billing tag set from the specified bucket.
    #
    ##############################################################################

    class DeleteBucketTagging < Choreography

      ####
      #  Create a new instance of the DeleteBucketTagging Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/DeleteBucketTagging")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteBucketTaggingInputSet
      ####
      def new_input_set()
        return DeleteBucketTaggingInputSet.new()
      end

      def make_result_set()
        return DeleteBucketTaggingResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteBucketTaggingResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteBucketTagging
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteBucketTaggingInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to remove tags from.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteBucketTagging Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteBucketTaggingResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. A successful execution returns an empty 204 response.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteBucketTagging



    ##############################################################################
    #
    # DeleteBucketWebsite
    #
    # Deletes the website configuration for the specified bucket.
    #
    ##############################################################################

    class DeleteBucketWebsite < Choreography

      ####
      #  Create a new instance of the DeleteBucketWebsite Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/DeleteBucketWebsite")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteBucketWebsiteInputSet
      ####
      def new_input_set()
        return DeleteBucketWebsiteInputSet.new()
      end

      def make_result_set()
        return DeleteBucketWebsiteResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteBucketWebsiteResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteBucketWebsite
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteBucketWebsiteInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the website configuration you want to delete.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteBucketWebsite Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteBucketWebsiteResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful delete operation, no content is returned and this output variable is empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteBucketWebsite



    ##############################################################################
    #
    # DeleteMultipleObjects
    #
    # Deletes multiple objects from an S3 Bucket.
    #
    ##############################################################################

    class DeleteMultipleObjects < Choreography

      ####
      #  Create a new instance of the DeleteMultipleObjects Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/DeleteMultipleObjects")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteMultipleObjectsInputSet
      ####
      def new_input_set()
        return DeleteMultipleObjectsInputSet.new()
      end

      def make_result_set()
        return DeleteMultipleObjectsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteMultipleObjectsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteMultipleObjects
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteMultipleObjectsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The the name of the bucket that contains the objects that you want to delete.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the FileNames input for this Choreo. 
        # 
        # @param String - (required, string) A list of file names to delete (separated by commas).
        ###

        def set_FileNames(value)
          set_input("FileNames", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteMultipleObjects Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteMultipleObjectsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. Note that no content is returned for a successful delete operation.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteMultipleObjects



    ##############################################################################
    #
    # DeleteObject
    #
    # Deletes a specified item from an Amazon S3 bucket.
    #
    ##############################################################################

    class DeleteObject < Choreography

      ####
      #  Create a new instance of the DeleteObject Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/DeleteObject")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteObjectInputSet
      ####
      def new_input_set()
        return DeleteObjectInputSet.new()
      end

      def make_result_set()
        return DeleteObjectResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteObjectResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteObject
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteObjectInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The the name of the bucket that contains the object that you want to delete.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the FileName input for this Choreo. 
        # 
        # @param String - (required, string) The file name that you want to delete.
        ###

        def set_FileName(value)
          set_input("FileName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteObject Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteObjectResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. Note that no content is returned for a successful delete operation.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteObject



    ##############################################################################
    #
    # GetBase64EncodedObject
    #
    # Retrieves a specified item from an Amazon S3 bucket, returns the file content as base64-encoded data, and returns the values of key response headers as output variables if available.
    #
    ##############################################################################

    class GetBase64EncodedObject < Choreography

      ####
      #  Create a new instance of the GetBase64EncodedObject Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBase64EncodedObject")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBase64EncodedObjectInputSet
      ####
      def new_input_set()
        return GetBase64EncodedObjectInputSet.new()
      end

      def make_result_set()
        return GetBase64EncodedObjectResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBase64EncodedObjectResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBase64EncodedObject
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBase64EncodedObjectInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that contains the object to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the FileName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the file to retrieve.
        ###

        def set_FileName(value)
          set_input("FileName", value)
        end
        #### 
        # Set the value of the IfMatch input for this Choreo. 
        # 
        # @param String - (optional, string) Returns the object only if its entity tag (ETag) is the same as the one specified, otherwise returns a 412 (precondition failed) error.
        ###

        def set_IfMatch(value)
          set_input("IfMatch", value)
        end
        #### 
        # Set the value of the IfModifiedSince input for this Choreo. 
        # 
        # @param String - (optional, date) Returns the object only if it has been modified since the specific time, otherwise returns a 304 (not modified) error.
        ###

        def set_IfModifiedSince(value)
          set_input("IfModifiedSince", value)
        end
        #### 
        # Set the value of the IfNoneMatch input for this Choreo. 
        # 
        # @param String - (optional, string) Returns the object only if its entity tag (ETag) is different from the one specified, otherwise retuns a 304 (not modified) error. Will not work correctly with IfModifiedSince.
        ###

        def set_IfNoneMatch(value)
          set_input("IfNoneMatch", value)
        end
        #### 
        # Set the value of the IfUnmodifiedSince input for this Choreo. 
        # 
        # @param String - (optional, date) Returns the object only if it has not been modified since the specified time, otherwise returns a 412 (precondition failed) error.
        ###

        def set_IfUnmodifiedSince(value)
          set_input("IfUnmodifiedSince", value)
        end
        #### 
        # Set the value of the Range input for this Choreo. 
        # 
        # @param String - (optional, string) Downloads the specific range of bytes of an object. Ex: 0-9 (returns the first 10 bytes of an object), 100-1000, etc. If the range value exceeds the end of file, it will return up to the end of file.
        ###

        def set_Range(value)
          set_input("Range", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBase64EncodedObject Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBase64EncodedObjectResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "VersionID" output from this Choreo execution
      	#
      	# @return String - (string) Returns the version ID of the retrieved object if it has a unique version ID.
      	####
      	def get_VersionID()
      	  return @outputs["VersionID"]
      	end
      	####
      	# Retrieve the value for the "WebsiteRedirectLocation" output from this Choreo execution
      	#
      	# @return String - (string) For a bucket configured as a website, this metadata can be set so the website will evaluate the request for the object as a 301 redirect to another object in the same bucket or an external URL.
      	####
      	def get_WebsiteRedirectLocation()
      	  return @outputs["WebsiteRedirectLocation"]
      	end
      	####
      	# Retrieve the value for the "Restore" output from this Choreo execution
      	#
      	# @return String - (string) Provides information about the object restoration operation and expiration time of the restored object copy.
      	####
      	def get_Restore()
      	  return @outputs["Restore"]
      	end
      	####
      	# Retrieve the value for the "Expiration" output from this Choreo execution
      	#
      	# @return String - (string) Appears if the object expiration is configured. It includes expiry-date and URL-encoded rule-id key value pairs providing object expiration information.
      	####
      	def get_Expiration()
      	  return @outputs["Expiration"]
      	end
      	####
      	# Retrieve the value for the "ServerSideEncryption" output from this Choreo execution
      	#
      	# @return String - (string) If the object is stored using server-side encryption, response includes this header with value of the encryption algorithm used. Valid Values: AES256.
      	####
      	def get_ServerSideEncryption()
      	  return @outputs["ServerSideEncryption"]
      	end
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (string) The base64-encoded contents of the file you are retrieving.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      	####
      	# Retrieve the value for the "DeleteMarker" output from this Choreo execution
      	#
      	# @return String - (boolean) Returns true if the object retrieved was a Delete Marker otherwise no value.
      	####
      	def get_DeleteMarker()
      	  return @outputs["DeleteMarker"]
      	end
      end

    end # class GetBase64EncodedObject



    ##############################################################################
    #
    # GetBucketACL
    #
    # Returns the access control list (ACL) of a bucket.
    #
    ##############################################################################

    class GetBucketACL < Choreography

      ####
      #  Create a new instance of the GetBucketACL Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketACL")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketACLInputSet
      ####
      def new_input_set()
        return GetBucketACLInputSet.new()
      end

      def make_result_set()
        return GetBucketACLResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketACLResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketACL
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketACLInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the ACL you want to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketACL Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketACLResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketACL



    ##############################################################################
    #
    # GetBucketCORS
    #
    # Retrieves the CORS (Cross-Origin Resource Sharing) configuration information set for the bucket.
    #
    ##############################################################################

    class GetBucketCORS < Choreography

      ####
      #  Create a new instance of the GetBucketCORS Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketCORS")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketCORSInputSet
      ####
      def new_input_set()
        return GetBucketCORSInputSet.new()
      end

      def make_result_set()
        return GetBucketCORSResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketCORSResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketCORS
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketCORSInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to retrieve the CORS configuration for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketCORS Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketCORSResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketCORS



    ##############################################################################
    #
    # GetBucketLifecycle
    #
    # Returns the lifecycle configuration information set on the bucket.
    #
    ##############################################################################

    class GetBucketLifecycle < Choreography

      ####
      #  Create a new instance of the GetBucketLifecycle Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketLifecycle")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketLifecycleInputSet
      ####
      def new_input_set()
        return GetBucketLifecycleInputSet.new()
      end

      def make_result_set()
        return GetBucketLifecycleResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketLifecycleResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketLifecycle
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketLifecycleInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the lifecycle you want to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketLifecycle Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketLifecycleResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketLifecycle



    ##############################################################################
    #
    # GetBucketList
    #
    # Retrieves a list of the items that are in a specified Amazon S3 storage bucket.
    #
    ##############################################################################

    class GetBucketList < Choreography

      ####
      #  Create a new instance of the GetBucketList Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketList")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketListInputSet
      ####
      def new_input_set()
        return GetBucketListInputSet.new()
      end

      def make_result_set()
        return GetBucketListResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketListResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketList
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketListInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that contains the list of objects that you want to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the Delimiter input for this Choreo. 
        # 
        # @param String - (optional, string) A delimiter is a character you use to group keys. All keys that contain the delimiter are grouped under a single result element, Common Prefixes. For more information see Amazon documentation.
        ###

        def set_Delimiter(value)
          set_input("Delimiter", value)
        end
        #### 
        # Set the value of the Marker input for this Choreo. 
        # 
        # @param String - (optional, string) Specifies the key to start with when listing objects in a bucket. Amazon S3 lists objects in alphabetical order.
        ###

        def set_Marker(value)
          set_input("Marker", value)
        end
        #### 
        # Set the value of the MaxKeys input for this Choreo. 
        # 
        # @param String - (optional, string) Lowers the max number of keys returned in the response from 1000 to specified value.The response will contain the key IsTruncated (true) if there are additional keys that exceed the # of MaxKeys.
        ###

        def set_MaxKeys(value)
          set_input("MaxKeys", value)
        end
        #### 
        # Set the value of the Prefix input for this Choreo. 
        # 
        # @param String - (optional, string) Limits the response to keys that begin with the specified prefix - useful for separating a bucket into different groupings of keys. Ex: specify 'test' to get a list of objects starting with 'test'.
        ###

        def set_Prefix(value)
          set_input("Prefix", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketList Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketListResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketList



    ##############################################################################
    #
    # GetBucketLocation
    #
    # Returns the Region where the bucket is stored. 
    #
    ##############################################################################

    class GetBucketLocation < Choreography

      ####
      #  Create a new instance of the GetBucketLocation Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketLocation")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketLocationInputSet
      ####
      def new_input_set()
        return GetBucketLocationInputSet.new()
      end

      def make_result_set()
        return GetBucketLocationResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketLocationResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketLocation
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketLocationInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the location you want to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketLocation Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketLocationResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "LocationConstraint" output from this Choreo execution
      	#
      	# @return String - (string) The Region returned by the choreo. Valid values: blank (Default US Classic Region AKA us-east-1), EU (AKA eu-west-1), us-west-1, us-west-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1.
      	####
      	def get_LocationConstraint()
      	  return @outputs["LocationConstraint"]
      	end
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketLocation



    ##############################################################################
    #
    # GetBucketLogging
    #
    # Retrieves the logging status and user logging permissions for the specified bucket.
    #
    ##############################################################################

    class GetBucketLogging < Choreography

      ####
      #  Create a new instance of the GetBucketLogging Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketLogging")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketLoggingInputSet
      ####
      def new_input_set()
        return GetBucketLoggingInputSet.new()
      end

      def make_result_set()
        return GetBucketLoggingResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketLoggingResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketLogging
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketLoggingInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to retrieve logging information for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketLogging Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketLoggingResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketLogging



    ##############################################################################
    #
    # GetBucketNotification
    #
    # Retrieves the notification configuration of a specified bucket.
    #
    ##############################################################################

    class GetBucketNotification < Choreography

      ####
      #  Create a new instance of the GetBucketNotification Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketNotification")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketNotificationInputSet
      ####
      def new_input_set()
        return GetBucketNotificationInputSet.new()
      end

      def make_result_set()
        return GetBucketNotificationResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketNotificationResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketNotification
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketNotificationInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to retrieve notification information for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketNotification Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketNotificationResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. Note - if there is no notification configured or notifications are turned off the response will be an empty xml result set or json object (depending on ResponseFormat input).
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketNotification



    ##############################################################################
    #
    # GetBucketPolicy
    #
    # Returns the policy of a specified bucket.
    #
    ##############################################################################

    class GetBucketPolicy < Choreography

      ####
      #  Create a new instance of the GetBucketPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketPolicyInputSet
      ####
      def new_input_set()
        return GetBucketPolicyInputSet.new()
      end

      def make_result_set()
        return GetBucketPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the policy you want to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (json) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketPolicy



    ##############################################################################
    #
    # GetBucketRequestPayment
    #
    # Retrieves the request payment configuration of a specified bucket.
    #
    ##############################################################################

    class GetBucketRequestPayment < Choreography

      ####
      #  Create a new instance of the GetBucketRequestPayment Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketRequestPayment")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketRequestPaymentInputSet
      ####
      def new_input_set()
        return GetBucketRequestPaymentInputSet.new()
      end

      def make_result_set()
        return GetBucketRequestPaymentResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketRequestPaymentResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketRequestPayment
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketRequestPaymentInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to retrieve request payment configuration information for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketRequestPayment Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketRequestPaymentResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketRequestPayment



    ##############################################################################
    #
    # GetBucketTagging
    #
    # Retrieves the billing tag set associated with the specified bucket.
    #
    ##############################################################################

    class GetBucketTagging < Choreography

      ####
      #  Create a new instance of the GetBucketTagging Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketTagging")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketTaggingInputSet
      ####
      def new_input_set()
        return GetBucketTaggingInputSet.new()
      end

      def make_result_set()
        return GetBucketTaggingResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketTaggingResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketTagging
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketTaggingInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to retrieve tagging information for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketTagging Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketTaggingResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketTagging



    ##############################################################################
    #
    # GetBucketVersioning
    #
    # Retrieves the versioning state of a specified bucket.
    #
    ##############################################################################

    class GetBucketVersioning < Choreography

      ####
      #  Create a new instance of the GetBucketVersioning Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketVersioning")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketVersioningInputSet
      ####
      def new_input_set()
        return GetBucketVersioningInputSet.new()
      end

      def make_result_set()
        return GetBucketVersioningResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketVersioningResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketVersioning
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketVersioningInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to retrieve versioning information for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketVersioning Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketVersioningResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketVersioning



    ##############################################################################
    #
    # GetBucketWebsite
    #
    # Returns the website configuration and static URL of a bucket if it is setup as a website.
    #
    ##############################################################################

    class GetBucketWebsite < Choreography

      ####
      #  Create a new instance of the GetBucketWebsite Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetBucketWebsite")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetBucketWebsiteInputSet
      ####
      def new_input_set()
        return GetBucketWebsiteInputSet.new()
      end

      def make_result_set()
        return GetBucketWebsiteResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetBucketWebsiteResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetBucketWebsite
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetBucketWebsiteInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the website configuration you want to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetBucketWebsite Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetBucketWebsiteResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "StaticURL" output from this Choreo execution
      	#
      	# @return String - (string) The URL of the Amazon static website. Note that the region code included in the URL is required for static websites.
      	####
      	def get_StaticURL()
      	  return @outputs["StaticURL"]
      	end
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetBucketWebsite



    ##############################################################################
    #
    # GetObjectACL
    #
    # Returns the access control list (ACL) of a file or object.
    #
    ##############################################################################

    class GetObjectACL < Choreography

      ####
      #  Create a new instance of the GetObjectACL Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetObjectACL")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetObjectACLInputSet
      ####
      def new_input_set()
        return GetObjectACLInputSet.new()
      end

      def make_result_set()
        return GetObjectACLResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetObjectACLResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetObjectACL
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetObjectACLInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket associated with the ACL you want to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the FileName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the file or object you wish to retrieve the ACL for. Ex.: filename.txt or folder/filename.txt.
        ###

        def set_FileName(value)
          set_input("FileName", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetObjectACL Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetObjectACLResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetObjectACL



    ##############################################################################
    #
    # GetObjectTorrent
    #
    # Returns a base64-encoded torrent file from an Amazon S3 bucket.
    #
    ##############################################################################

    class GetObjectTorrent < Choreography

      ####
      #  Create a new instance of the GetObjectTorrent Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetObjectTorrent")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetObjectTorrentInputSet
      ####
      def new_input_set()
        return GetObjectTorrentInputSet.new()
      end

      def make_result_set()
        return GetObjectTorrentResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetObjectTorrentResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetObjectTorrent
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetObjectTorrentInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that contains the object to retrieve.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the FileName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the torrent file to retrieve.
        ###

        def set_FileName(value)
          set_input("FileName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetObjectTorrent Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetObjectTorrentResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The retrieved file. The response is a Bencoded dictionary as defined by the BitTorrent specification, which is then Base64-encoded by Temboo. Decode to get the Bencoded dictionary.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetObjectTorrent



    ##############################################################################
    #
    # GetService
    #
    # Retrieves a list of buckets owned by the authenticated user.
    #
    ##############################################################################

    class GetService < Choreography

      ####
      #  Create a new instance of the GetService Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/GetService")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetServiceInputSet
      ####
      def new_input_set()
        return GetServiceInputSet.new()
      end

      def make_result_set()
        return GetServiceResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetServiceResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetService
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetServiceInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid values are "xml" (the default) and "json".
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetService Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetServiceResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetService



    ##############################################################################
    #
    # PutBucket
    #
    # Creates a new bucket in your Amazon S3 account.
    #
    ##############################################################################

    class PutBucket < Choreography

      ####
      #  Create a new instance of the PutBucket Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucket")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketInputSet
      ####
      def new_input_set()
        return PutBucketInputSet.new()
      end

      def make_result_set()
        return PutBucketResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucket
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that will be created.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CannedACL input for this Choreo. 
        # 
        # @param String - (optional, string) By default all objects are private (only owner has full access control). Valid values: private, public-read, public-read-write, authenticated-read, bucket-owner-read, bucket-owner-full-control.
        ###

        def set_CannedACL(value)
          set_input("CannedACL", value)
        end
        #### 
        # Set the value of the LocationConstraint input for this Choreo. 
        # 
        # @param String - (optional, string) The region to create the bucket in. Valid Values: EU, eu-west-1, us-west-1, us-west-2, ap-southeast-1, ap-southeast-2, ap-northeast-1, sa-east-1, empty string (Default US Classic Region). 
        ###

        def set_LocationConstraint(value)
          set_input("LocationConstraint", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucket Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. Note that no content is returned for successful uploads.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucket



    ##############################################################################
    #
    # PutBucketACL
    #
    # Sets the access control list (ACL) permissions for an existing bucket.
    #
    ##############################################################################

    class PutBucketACL < Choreography

      ####
      #  Create a new instance of the PutBucketACL Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketACL")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketACLInputSet
      ####
      def new_input_set()
        return PutBucketACLInputSet.new()
      end

      def make_result_set()
        return PutBucketACLResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketACLResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketACL
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketACLInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AccessControlList input for this Choreo. 
        # 
        # @param String - (optional, xml) Custom Access Control List xml for advanced configuration. See description for an example, plus Amazon documentation.
        ###

        def set_AccessControlList(value)
          set_input("AccessControlList", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to create or update a policy for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CannedACL input for this Choreo. 
        # 
        # @param String - (conditional, string) Most common ACL usage, required unless creating a custom policy. Values: private, public-read, public-read-write, or authenticated-read.
        ###

        def set_CannedACL(value)
          set_input("CannedACL", value)
        end
        #### 
        # Set the value of the OwnerEmailAddress input for this Choreo. 
        # 
        # @param String - (optional, string) The email address of the owner who is granting permission. Required if creating your own custom ACL policy.
        ###

        def set_OwnerEmailAddress(value)
          set_input("OwnerEmailAddress", value)
        end
        #### 
        # Set the value of the OwnerId input for this Choreo. 
        # 
        # @param String - (optional, string) The canonical user ID of the owner who is granting permission. Required if creating your own custom ACL policy.
        ###

        def set_OwnerId(value)
          set_input("OwnerId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketACL Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketACLResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful ACL creation, no content is returned and this output variable should be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketACL



    ##############################################################################
    #
    # PutBucketCORS
    #
    # Sets the CORS (Cross-Origin Resource Sharing) configuration for a specified bucket.
    #
    ##############################################################################

    class PutBucketCORS < Choreography

      ####
      #  Create a new instance of the PutBucketCORS Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketCORS")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketCORSInputSet
      ####
      def new_input_set()
        return PutBucketCORSInputSet.new()
      end

      def make_result_set()
        return PutBucketCORSResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketCORSResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketCORS
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketCORSInputSet < Choreography::InputSet

        #### 
        # Set the value of the CORSConfiguration input for this Choreo. 
        # 
        # @param String - (optional, xml) The CORS Configuration XML containing one or more CORS Rules for advanced configuration. If provided the Choreo will ignore all other inputs except your AWS Key/Secret and BucketName.
        ###

        def set_CORSConfiguration(value)
          set_input("CORSConfiguration", value)
        end
        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AllowedHeader input for this Choreo. 
        # 
        # @param String - (optional, string) Specifies which headers are allowed in a pre-flight OPTIONS request via the Access-Control-Request-Headers header.
        ###

        def set_AllowedHeader(value)
          set_input("AllowedHeader", value)
        end
        #### 
        # Set the value of the AllowedMethod input for this Choreo. 
        # 
        # @param String - (conditional, string) The HTTP verb that you want to allow the origin to execute. Valid values are: GET, PUT, HEAD, POST, DELETE.
        ###

        def set_AllowedMethod(value)
          set_input("AllowedMethod", value)
        end
        #### 
        # Set the value of the AllowedOrigin input for this Choreo. 
        # 
        # @param String - (conditional, string) An origin that you want to allow cross-domain requests from. This can contain at most one * wild character (i.e. http://*.example.com).
        ###

        def set_AllowedOrigin(value)
          set_input("AllowedOrigin", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to set a CORS configuration for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the ExposeHeader input for this Choreo. 
        # 
        # @param String - (optional, string) A header in the response that you want customers to be able to access from their applications.
        ###

        def set_ExposeHeader(value)
          set_input("ExposeHeader", value)
        end
        #### 
        # Set the value of the ID input for this Choreo. 
        # 
        # @param String - (optional, string) A unique identifier for the rule. The ID value can be up to 255 characters long.
        ###

        def set_ID(value)
          set_input("ID", value)
        end
        #### 
        # Set the value of the MaxAgeSeconds input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The time in seconds that your browser is to cache the preflight response for the specified resource.
        ###

        def set_MaxAgeSeconds(value)
          set_input("MaxAgeSeconds", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketCORS Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketCORSResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. Note that for a successful exection, this API operation returns an empty 200 response.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketCORS



    ##############################################################################
    #
    # PutBucketLifecycle
    #
    # Sets lifecycle configuration for your bucket. This is used to remove objects from a bucket automatically after a certain time or at a certain date.
    #
    ##############################################################################

    class PutBucketLifecycle < Choreography

      ####
      #  Create a new instance of the PutBucketLifecycle Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketLifecycle")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketLifecycleInputSet
      ####
      def new_input_set()
        return PutBucketLifecycleInputSet.new()
      end

      def make_result_set()
        return PutBucketLifecycleResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketLifecycleResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketLifecycle
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketLifecycleInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to create or update a policy for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CustomLifecycleConfiguration input for this Choreo. 
        # 
        # @param String - (optional, xml) Write a custom LifecycleConfiguration xml request for advanced customization. Note - this will overwrite all other inputs other than the AWS AccessKeyId, SecretKeyId, and BucketName.
        ###

        def set_CustomLifecycleConfiguration(value)
          set_input("CustomLifecycleConfiguration", value)
        end
        #### 
        # Set the value of the DateOfExpiration input for this Choreo. 
        # 
        # @param String - (optional, date) Date when the rule takes effect. You can specify either DateOfExpiration OR NumberOfDays. The date value must be in ISO 8601 format, time is always midnight UTC. Ex: 2013-04-24T00:00:00.000Z.
        ###

        def set_DateOfExpiration(value)
          set_input("DateOfExpiration", value)
        end
        #### 
        # Set the value of the LifecycleId input for this Choreo. 
        # 
        # @param String - (optional, string) A unique ID for this lifecycle (i.e. delete-logs-in-30-days-rule).
        ###

        def set_LifecycleId(value)
          set_input("LifecycleId", value)
        end
        #### 
        # Set the value of the NumberOfDays input for this Choreo. 
        # 
        # @param Integer - (conditional, integer) The number of days to wait until the lifecycle expiration kicks in. Required unless you specify DateOfExpiration or a CustomLifecycleConfiguration instead.
        ###

        def set_NumberOfDays(value)
          set_input("NumberOfDays", value)
        end
        #### 
        # Set the value of the Prefix input for this Choreo. 
        # 
        # @param String - (optional, string) Indicating that objects with this prefix will expire and be removed after the number of days specified. If not specified this lifecycle will apply to all objects in the bucket.
        ###

        def set_Prefix(value)
          set_input("Prefix", value)
        end
        #### 
        # Set the value of the Status input for this Choreo. 
        # 
        # @param String - (optional, string) The lifecycle status. Accepted values are: "Enabled" or "Disabled". Defaults to "Enabled".
        ###

        def set_Status(value)
          set_input("Status", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketLifecycle Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketLifecycleResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful lifecycle creation, no content is returned and this output variable should be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketLifecycle



    ##############################################################################
    #
    # PutBucketLogging
    #
    # Sets the logging parameters for a bucket and specifies permissions for who can view and modify the logging parameters. Can also be used to disable logging.
    #
    ##############################################################################

    class PutBucketLogging < Choreography

      ####
      #  Create a new instance of the PutBucketLogging Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketLogging")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketLoggingInputSet
      ####
      def new_input_set()
        return PutBucketLoggingInputSet.new()
      end

      def make_result_set()
        return PutBucketLoggingResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketLoggingResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketLogging
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketLoggingInputSet < Choreography::InputSet

        #### 
        # Set the value of the BucketLoggingStatus input for this Choreo. 
        # 
        # @param String - (optional, xml) An XML file that allows custom config, this can be used as an alternative to the other bucket logging inputs. If provided, the Choreo will ignore all inputs except your AWS Key/Secret and BucketName.
        ###

        def set_BucketLoggingStatus(value)
          set_input("BucketLoggingStatus", value)
        end
        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that you are setting the logging for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the EmailAddress input for this Choreo. 
        # 
        # @param String - (conditional, string) The email address of the person being granted logging permissions.
        ###

        def set_EmailAddress(value)
          set_input("EmailAddress", value)
        end
        #### 
        # Set the value of the Permission input for this Choreo. 
        # 
        # @param String - (conditional, string) The logging permissions given to the Grantee for the bucket. Valid values are: FULL_CONTROL, READ, or WRITE.
        ###

        def set_Permission(value)
          set_input("Permission", value)
        end
        #### 
        # Set the value of the TargetBucket input for this Choreo. 
        # 
        # @param String - (conditional, string) The name of the target bucket. To disable logging, just leave this blank.
        ###

        def set_TargetBucket(value)
          set_input("TargetBucket", value)
        end
        #### 
        # Set the value of the TargetPrefix input for this Choreo. 
        # 
        # @param String - (conditional, string) Lets you specify a prefix for the keys that the log files will be stored under. Defaults to "/logs"
        ###

        def set_TargetPrefix(value)
          set_input("TargetPrefix", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketLogging Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketLoggingResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. A successful execution returns an empty 200 response.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketLogging



    ##############################################################################
    #
    # PutBucketNotification
    #
    # Enables Amazon SNS notifications of specified events for a bucket.
    #
    ##############################################################################

    class PutBucketNotification < Choreography

      ####
      #  Create a new instance of the PutBucketNotification Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketNotification")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketNotificationInputSet
      ####
      def new_input_set()
        return PutBucketNotificationInputSet.new()
      end

      def make_result_set()
        return PutBucketNotificationResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketNotificationResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketNotification
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketNotificationInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to create a notification for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the Event input for this Choreo. 
        # 
        # @param String - (optional, string) A bucket event for which to send notifications. Valid value:  "s3:ReducedRedundancyLostObject" (The default and currently only supported notification event).
        ###

        def set_Event(value)
          set_input("Event", value)
        end
        #### 
        # Set the value of the Topic input for this Choreo. 
        # 
        # @param String - (conditional, string) The Amazon SNS topic arn that  Amazon S3 will publish a message to report the specified events for the bucket. If this is not supplied, notifications will be turned off.
        ###

        def set_Topic(value)
          set_input("Topic", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketNotification Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketNotificationResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (string) Stores the response from Amazon. Note that for a successful execution, no content is returned and this output variable should be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketNotification



    ##############################################################################
    #
    # PutBucketPolicy
    #
    # Allows you to add to or replace a policy on a bucket.
    #
    ##############################################################################

    class PutBucketPolicy < Choreography

      ####
      #  Create a new instance of the PutBucketPolicy Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketPolicy")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketPolicyInputSet
      ####
      def new_input_set()
        return PutBucketPolicyInputSet.new()
      end

      def make_result_set()
        return PutBucketPolicyResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketPolicyResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketPolicy
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketPolicyInputSet < Choreography::InputSet

        #### 
        # Set the value of the Policy input for this Choreo. 
        # 
        # @param String - (required, json) A JSON string containing the policy information.  See Choreo documentation for a sample JSON policy.
        ###

        def set_Policy(value)
          set_input("Policy", value)
        end
        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to create or update a policy for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketPolicy Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketPolicyResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful policy creation, no content is returned and this output variable is empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketPolicy



    ##############################################################################
    #
    # PutBucketRequestPayment
    #
    # Sets the request payment configuration of a bucket. 
    #
    ##############################################################################

    class PutBucketRequestPayment < Choreography

      ####
      #  Create a new instance of the PutBucketRequestPayment Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketRequestPayment")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketRequestPaymentInputSet
      ####
      def new_input_set()
        return PutBucketRequestPaymentInputSet.new()
      end

      def make_result_set()
        return PutBucketRequestPaymentResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketRequestPaymentResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketRequestPayment
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketRequestPaymentInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to create a request payment configuration for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the Payer input for this Choreo. 
        # 
        # @param String - (required, string) Specifies who pays for the download and request fees. Valid values:  Requester or BucketOwner.
        ###

        def set_Payer(value)
          set_input("Payer", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketRequestPayment Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketRequestPaymentResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful execution, no content is returned and this output variable should be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketRequestPayment



    ##############################################################################
    #
    # PutBucketTagging
    #
    # Adds a set of billing tags to an existing bucket.
    #
    ##############################################################################

    class PutBucketTagging < Choreography

      ####
      #  Create a new instance of the PutBucketTagging Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketTagging")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketTaggingInputSet
      ####
      def new_input_set()
        return PutBucketTaggingInputSet.new()
      end

      def make_result_set()
        return PutBucketTaggingResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketTaggingResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketTagging
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketTaggingInputSet < Choreography::InputSet

        #### 
        # Set the value of the Tags input for this Choreo. 
        # 
        # @param String - (optional, xml) An XML file describing the key/values for the tag set. Note - if you use this input, the Key and Value input variables will be ignored.
        ###

        def set_Tags(value)
          set_input("Tags", value)
        end
        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to add tags to.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the Key input for this Choreo. 
        # 
        # @param String - (conditional, string) The tag name.
        ###

        def set_Key(value)
          set_input("Key", value)
        end
        #### 
        # Set the value of the Value input for this Choreo. 
        # 
        # @param String - (conditional, string) The tag value.
        ###

        def set_Value(value)
          set_input("Value", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketTagging Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketTaggingResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful execution, no content is returned and this output variable should be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketTagging



    ##############################################################################
    #
    # PutBucketVersioning
    #
    # Sets the versioning state of an existing bucket.
    #
    ##############################################################################

    class PutBucketVersioning < Choreography

      ####
      #  Create a new instance of the PutBucketVersioning Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketVersioning")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketVersioningInputSet
      ####
      def new_input_set()
        return PutBucketVersioningInputSet.new()
      end

      def make_result_set()
        return PutBucketVersioningResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketVersioningResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketVersioning
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketVersioningInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket to create a notification for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the Status input for this Choreo. 
        # 
        # @param String - (required, string) Indicates whether or not the bucket has versioning enabled. Valid values are: Enabled or Suspended (case-sensitive).
        ###

        def set_Status(value)
          set_input("Status", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketVersioning Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketVersioningResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful execution, no content is returned and this output variable should be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketVersioning



    ##############################################################################
    #
    # PutBucketWebsiteRedirect
    #
    # Configures the specified bucket as a website and sets the web request redirects to a designated endpoint.
    #
    ##############################################################################

    class PutBucketWebsiteRedirect < Choreography

      ####
      #  Create a new instance of the PutBucketWebsiteRedirect Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketWebsiteRedirect")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketWebsiteRedirectInputSet
      ####
      def new_input_set()
        return PutBucketWebsiteRedirectInputSet.new()
      end

      def make_result_set()
        return PutBucketWebsiteRedirectResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketWebsiteRedirectResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketWebsiteRedirect
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketWebsiteRedirectInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that you wish to configure.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CustomWebsiteRedirection input for this Choreo. 
        # 
        # @param String - (optional, xml) A custom xml file for adding advanced website redirection rule(s). See description and Amazon  docs for details. Note - inputting a custom xml file will overwrite all other optional input values.
        ###

        def set_CustomWebsiteRedirection(value)
          set_input("CustomWebsiteRedirection", value)
        end
        #### 
        # Set the value of the ErrorDocument input for this Choreo. 
        # 
        # @param String - (optional, string) The object key name to use when a 4XX class error occurs. Returns specified page when such an error occurs. Ex.: Error.html.
        ###

        def set_ErrorDocument(value)
          set_input("ErrorDocument", value)
        end
        #### 
        # Set the value of the HostName input for this Choreo. 
        # 
        # @param String - (optional, string) Name of the host where requests will be redirected. Used when setting redirect rules, optional if specifying ReplaceKeyPrefixWith or ReplaceKeyWith input variables). Ex.: example.com.
        ###

        def set_HostName(value)
          set_input("HostName", value)
        end
        #### 
        # Set the value of the HttpErrorCodeReturnedEquals input for this Choreo. 
        # 
        # @param String - (optional, string) The HTTP error code condition for which a redirect occurs. If there's an error and the error code equals this value, then the specified redirect is applied. Can use with KeyPrefixEquals. Ex:  404.
        ###

        def set_HttpErrorCodeReturnedEquals(value)
          set_input("HttpErrorCodeReturnedEquals", value)
        end
        #### 
        # Set the value of the HttpRedirectCode input for this Choreo. 
        # 
        # @param String - (optional, string) The HTTP redirect code to use on the response.
        ###

        def set_HttpRedirectCode(value)
          set_input("HttpRedirectCode", value)
        end
        #### 
        # Set the value of the KeyPrefixEquals input for this Choreo. 
        # 
        # @param String - (optional, string) The name or prefix condition of the object that will trigger the redirect action. Can use with HttpErrorCodeReturnedEquals. Ex:  Single page: ExamplePage.html, All pages with prefix: /images.
        ###

        def set_KeyPrefixEquals(value)
          set_input("KeyPrefixEquals", value)
        end
        #### 
        # Set the value of the Protocol input for this Choreo. 
        # 
        # @param String - (optional, string) Sets protocol to use when redirecting requests. Optional if you are specifying either ReplaceKeyPrefixWith or ReplaceKeyWith optional inputs. Possible values: http, https.
        ###

        def set_Protocol(value)
          set_input("Protocol", value)
        end
        #### 
        # Set the value of the ReplaceKeyPrefixWith input for this Choreo. 
        # 
        # @param String - (optional, string) The object key prefix to use in the redirect request. Redirects requests to the specified prefix. Cannot be used with ReplaceKeyWith. Ex.: /documents.
        ###

        def set_ReplaceKeyPrefixWith(value)
          set_input("ReplaceKeyPrefixWith", value)
        end
        #### 
        # Set the value of the ReplaceKeyWith input for this Choreo. 
        # 
        # @param String - (optional, string) The specific object key to use in the redirect request. Cannot be used with ReplaceKeyPrefixWith. Ex.: error.html.
        ###

        def set_ReplaceKeyWith(value)
          set_input("ReplaceKeyWith", value)
        end
        #### 
        # Set the value of the Suffix input for this Choreo. 
        # 
        # @param String - (optional, string) The default page returned when there is a request to a directory. I.e.: if you input index.html, a request for /images/ will return the data for the object '/images/index.html'. Default is index.html.
        ###

        def set_Suffix(value)
          set_input("Suffix", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketWebsiteRedirect Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketWebsiteRedirectResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful website configuration request, no content is returned and this output variable will be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketWebsiteRedirect



    ##############################################################################
    #
    # PutBucketWebsiteRedirectAll
    #
    # Configures the specified bucket as a website and redirects all web requests to the designated hostname.
    #
    ##############################################################################

    class PutBucketWebsiteRedirectAll < Choreography

      ####
      #  Create a new instance of the PutBucketWebsiteRedirectAll Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutBucketWebsiteRedirectAll")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutBucketWebsiteRedirectAllInputSet
      ####
      def new_input_set()
        return PutBucketWebsiteRedirectAllInputSet.new()
      end

      def make_result_set()
        return PutBucketWebsiteRedirectAllResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutBucketWebsiteRedirectAllResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutBucketWebsiteRedirectAll
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutBucketWebsiteRedirectAllInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that you wish to configure.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the HostName input for this Choreo. 
        # 
        # @param String - (required, string) Name of the host where requests will be redirected. Ex.: example.com
        ###

        def set_HostName(value)
          set_input("HostName", value)
        end
        #### 
        # Set the value of the Protocol input for this Choreo. 
        # 
        # @param String - (optional, string) Protocol to use (http, https) when redirecting requests. The default is http.
        ###

        def set_Protocol(value)
          set_input("Protocol", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutBucketWebsiteRedirectAll Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutBucketWebsiteRedirectAllResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful website configuration request, no content is returned and this output variable will be empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutBucketWebsiteRedirectAll



    ##############################################################################
    #
    # PutObject
    #
    # Uploads a file to your Amazon S3 storage bucket.
    #
    ##############################################################################

    class PutObject < Choreography

      ####
      #  Create a new instance of the PutObject Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutObject")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutObjectInputSet
      ####
      def new_input_set()
        return PutObjectInputSet.new()
      end

      def make_result_set()
        return PutObjectResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutObjectResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutObject
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutObjectInputSet < Choreography::InputSet

        #### 
        # Set the value of the FileContents input for this Choreo. 
        # 
        # @param String - (required, string) The Base64-encoded file contents that you want to upload to an AmazonS3 bucket. This is required unless providing a URL to a hosted file to upload, using the UploadSourceURL input.
        ###

        def set_FileContents(value)
          set_input("FileContents", value)
        end
        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that will be the file destination.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CannedACL input for this Choreo. 
        # 
        # @param String - (optional, string) By default all objects are private (only owner has full access control). Valid values: private, public-read, public-read-write, authenticated-read, bucket-owner-read, bucket-owner-full-control.
        ###

        def set_CannedACL(value)
          set_input("CannedACL", value)
        end
        #### 
        # Set the value of the ContentType input for this Choreo. 
        # 
        # @param String - (optional, string) Sets the content-type (text/html, image/jpeg, etc.). Default is application/octet-stream.
        ###

        def set_ContentType(value)
          set_input("ContentType", value)
        end
        #### 
        # Set the value of the FileName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the file to put in S3 Storage. Ex.: file.txt or folder/file.txt
        ###

        def set_FileName(value)
          set_input("FileName", value)
        end
        #### 
        # Set the value of the ServerSideEncryption input for this Choreo. 
        # 
        # @param String - (optional, string) Specifies the server-side encryption algorithm to use when Amazon S3 creates the target object. Valid value: AES256.
        ###

        def set_ServerSideEncryption(value)
          set_input("ServerSideEncryption", value)
        end
        #### 
        # Set the value of the StorageClass input for this Choreo. 
        # 
        # @param String - (optional, string) Enables RRS customers to store their noncritical, reproducible data at lower levels of redundancy than Amazon S3's standard storage. Valid Values: STANDARD (default), REDUCED_REDUNDANCY.
        ###

        def set_StorageClass(value)
          set_input("StorageClass", value)
        end
        #### 
        # Set the value of the UploadSourcePassword input for this Choreo. 
        # 
        # @param String - (optional, string) The password to use when Basic Authentiation is required to access a file located at the URL specified in the UploadSourceURL input.
        ###

        def set_UploadSourcePassword(value)
          set_input("UploadSourcePassword", value)
        end
        #### 
        # Set the value of the UploadSourceURL input for this Choreo. 
        # 
        # @param String - (optional, string) A URL to a hosted file that should be uploaded. This is required unless providing a Base64 encoded file for the FileContents input.
        ###

        def set_UploadSourceURL(value)
          set_input("UploadSourceURL", value)
        end
        #### 
        # Set the value of the UploadSourceUsername input for this Choreo. 
        # 
        # @param String - (optional, string) The username to use when Basic Authentiation is required to access a file located at the URL specified in the UploadSourceURL input.
        ###

        def set_UploadSourceUsername(value)
          set_input("UploadSourceUsername", value)
        end
        #### 
        # Set the value of the WebsiteRedirectLocation input for this Choreo. 
        # 
        # @param String - (optional, string) If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Ex: /anotherPage.html, http://www.page.com. Max length: 2 K.
        ###

        def set_WebsiteRedirectLocation(value)
          set_input("WebsiteRedirectLocation", value)
        end
        #### 
        # Set the value of the VaultFile input for this Choreo. 
        # 
        # @param TembooPath - (optional, vault file) The path to a vault file that you want to upload to an Amazon S3 bucket. Required unless using the FileContents input variable.
        ###

        def set_VaultFile(value)
          set_alias("VaultFile", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutObject Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutObjectResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Amazon. Note that no content is returned for successful uploads.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutObject



    ##############################################################################
    #
    # PutObjectACL
    #
    # Sets the access control list (ACL) permissions for an existing object.
    #
    ##############################################################################

    class PutObjectACL < Choreography

      ####
      #  Create a new instance of the PutObjectACL Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/PutObjectACL")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PutObjectACLInputSet
      ####
      def new_input_set()
        return PutObjectACLInputSet.new()
      end

      def make_result_set()
        return PutObjectACLResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PutObjectACLResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the PutObjectACL
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PutObjectACLInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AccessControlList input for this Choreo. 
        # 
        # @param String - (optional, xml) Custom Access Control List xml for advanced configuration. See description for an example, plus Amazon documentation.
        ###

        def set_AccessControlList(value)
          set_input("AccessControlList", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that contains the object that you want to create or update a policy for.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CannedACL input for this Choreo. 
        # 
        # @param String - (conditional, string) Most common ACL usage, required unless creating a custom policy. Values: private, public-read, public-read-write, authenticated-read, bucket-owner-read, or bucket-owner-full-control.
        ###

        def set_CannedACL(value)
          set_input("CannedACL", value)
        end
        #### 
        # Set the value of the FileName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the file or object that you want to put access controls on in S3. Ex.: file.txt or folder/file.txt.
        ###

        def set_FileName(value)
          set_input("FileName", value)
        end
        #### 
        # Set the value of the OwnerEmailAddress input for this Choreo. 
        # 
        # @param String - (optional, string) The email address of the owner who is granting permission. Required if creating your own custom ACL policy.
        ###

        def set_OwnerEmailAddress(value)
          set_input("OwnerEmailAddress", value)
        end
        #### 
        # Set the value of the OwnerId input for this Choreo. 
        # 
        # @param String - (optional, string) The canonical user id of the owner who is granting permission. Required if creating your own custom ACL policy.
        ###

        def set_OwnerId(value)
          set_input("OwnerId", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the PutObjectACL Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PutObjectACLResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - Stores the response from Amazon. Note that for a successful ACL creation, no content is returned and this output variable is empty.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class PutObjectACL




    module Util



      ##############################################################################
      #
      # DownloadFile
      #
      # Generates a HTTP GET request.
      #
      ##############################################################################

      class DownloadFile < Choreography

        ####
        #  Create a new instance of the DownloadFile Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/S3/Util/DownloadFile")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return DownloadFileInputSet
        ####
        def new_input_set()
          return DownloadFileInputSet.new()
        end

        def make_result_set()
          return DownloadFileResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = DownloadFileResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the DownloadFile
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class DownloadFileInputSet < Choreography::InputSet

          #### 
          # Set the value of the Password input for this Choreo. 
          # 
          # @param String - (optional, string) A valid password. This is used if the request required basic authentication.
          ###

          def set_Password(value)
            set_input("Password", value)
          end
          #### 
          # Set the value of the RequestHeaders input for this Choreo. 
          # 
          # @param String - (optional, json) A JSON object containing up to 10 key/value pairs that will be mapped to the HTTP request headers.
          ###

          def set_RequestHeaders(value)
            set_input("RequestHeaders", value)
          end
          #### 
          # Set the value of the RequestParameters input for this Choreo. 
          # 
          # @param String - (optional, json) A JSON object containing up to 10 key/value pairs that will be mapped to the url string as http parameters.
          ###

          def set_RequestParameters(value)
            set_input("RequestParameters", value)
          end
          #### 
          # Set the value of the URL input for this Choreo. 
          # 
          # @param String - (required, string) The base URL for the request (including http:// or https://).
          ###

          def set_URL(value)
            set_input("URL", value)
          end
          #### 
          # Set the value of the Username input for this Choreo. 
          # 
          # @param String - (optional, string) A valid username. This is used if the request required basic authentication.
          ###

          def set_Username(value)
            set_input("Username", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the DownloadFile Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class DownloadFileResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "ResponseStatusCode" output from this Choreo execution
        	#
        	# @return String - (integer) The response status code.
        	####
        	def get_ResponseStatusCode()
        	  return @outputs["ResponseStatusCode"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - The response from the server.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        end

      end # class DownloadFile



      ##############################################################################
      #
      # GetDataStream
      #
      # Retrieves a specified item from an Amazon S3 bucket, returns the file content as base64-encoded data, and returns the values of key response headers as output variables if available.
      #
      ##############################################################################

      class GetDataStream < Choreography

        ####
        #  Create a new instance of the GetDataStream Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/S3/Util/GetDataStream")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return GetDataStreamInputSet
        ####
        def new_input_set()
          return GetDataStreamInputSet.new()
        end

        def make_result_set()
          return GetDataStreamResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = GetDataStreamResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the GetDataStream
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class GetDataStreamInputSet < Choreography::InputSet

          #### 
          # Set the value of the AWSAccessKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
          ###

          def set_AWSAccessKeyId(value)
            set_input("AWSAccessKeyId", value)
          end
          #### 
          # Set the value of the AWSSecretKeyId input for this Choreo. 
          # 
          # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
          ###

          def set_AWSSecretKeyId(value)
            set_input("AWSSecretKeyId", value)
          end
          #### 
          # Set the value of the BucketName input for this Choreo. 
          # 
          # @param String - (required, string) The name of the bucket that contains the object to retrieve.
          ###

          def set_BucketName(value)
            set_input("BucketName", value)
          end
          #### 
          # Set the value of the FileName input for this Choreo. 
          # 
          # @param String - (required, string) The name of the file to retrieve.
          ###

          def set_FileName(value)
            set_input("FileName", value)
          end
          #### 
          # Set the value of the IfMatch input for this Choreo. 
          # 
          # @param String - (optional, string) Returns the object only if its entity tag (ETag) is the same as the one specified, otherwise returns a 412 (precondition failed) error.
          ###

          def set_IfMatch(value)
            set_input("IfMatch", value)
          end
          #### 
          # Set the value of the IfModifiedSince input for this Choreo. 
          # 
          # @param String - (optional, date) Returns the object only if it has been modified since the specific time, otherwise returns a 304 (not modified) error.
          ###

          def set_IfModifiedSince(value)
            set_input("IfModifiedSince", value)
          end
          #### 
          # Set the value of the IfNoneMatch input for this Choreo. 
          # 
          # @param String - (optional, string) Returns the object only if its entity tag (ETag) is different from the one specified, otherwise retuns a 304 (not modified) error. Will not work correctly with IfModifiedSince.
          ###

          def set_IfNoneMatch(value)
            set_input("IfNoneMatch", value)
          end
          #### 
          # Set the value of the IfUnmodifiedSince input for this Choreo. 
          # 
          # @param String - (optional, date) Returns the object only if it has not been modified since the specified time, otherwise returns a 412 (precondition failed) error.
          ###

          def set_IfUnmodifiedSince(value)
            set_input("IfUnmodifiedSince", value)
          end
          #### 
          # Set the value of the Range input for this Choreo. 
          # 
          # @param String - (optional, string) Downloads the specific range of bytes of an object. Ex: 0-9 (returns the first 10 bytes of an object), 100-1000, etc. If the range value exceeds the end of file, it will return up to the end of file.
          ###

          def set_Range(value)
            set_input("Range", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the GetDataStream Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class GetDataStreamResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "VersionID" output from this Choreo execution
        	#
        	# @return String - (string) Returns the version ID of the retrieved object if it has a unique version ID.
        	####
        	def get_VersionID()
        	  return @outputs["VersionID"]
        	end
        	####
        	# Retrieve the value for the "WebsiteRedirectLocation" output from this Choreo execution
        	#
        	# @return String - (string) For a bucket configured as a website, this metadata can be set so the website will evaluate the request for the object as a 301 redirect to another object in the same bucket or an external URL.
        	####
        	def get_WebsiteRedirectLocation()
        	  return @outputs["WebsiteRedirectLocation"]
        	end
        	####
        	# Retrieve the value for the "ServerSideEncryption" output from this Choreo execution
        	#
        	# @return String - (string) If the object is stored using server-side encryption, response includes this header with value of the encryption algorithm used. Valid Values: AES256.
        	####
        	def get_ServerSideEncryption()
        	  return @outputs["ServerSideEncryption"]
        	end
        	####
        	# Retrieve the value for the "Response" output from this Choreo execution
        	#
        	# @return String - (string) The base64-encoded contents of the file you are retrieving.
        	####
        	def get_Response()
        	  return @outputs["Response"]
        	end
        	####
        	# Retrieve the value for the "Expiration" output from this Choreo execution
        	#
        	# @return String - (string) Appears if the object expiration is configured. It includes expiry-date and URL-encoded rule-id key value pairs providing object expiration information.
        	####
        	def get_Expiration()
        	  return @outputs["Expiration"]
        	end
        	####
        	# Retrieve the value for the "Restore" output from this Choreo execution
        	#
        	# @return String - (string) Provides information about the object restoration operation and expiration time of the restored object copy.
        	####
        	def get_Restore()
        	  return @outputs["Restore"]
        	end
        	####
        	# Retrieve the value for the "DeleteMarker" output from this Choreo execution
        	#
        	# @return String - (boolean) Returns true if the object retrieved was a Delete Marker otherwise no value.
        	####
        	def get_DeleteMarker()
        	  return @outputs["DeleteMarker"]
        	end
        end

      end # class GetDataStream



      ##############################################################################
      #
      # SplitQueryParameters
      #
      # 
      #
      ##############################################################################

      class SplitQueryParameters < Choreography

        ####
        #  Create a new instance of the SplitQueryParameters Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/S3/Util/SplitQueryParameters")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return SplitQueryParametersInputSet
        ####
        def new_input_set()
          return SplitQueryParametersInputSet.new()
        end

        def make_result_set()
          return SplitQueryParametersResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = SplitQueryParametersResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the SplitQueryParameters
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class SplitQueryParametersInputSet < Choreography::InputSet

          #### 
          # Set the value of the QueryParamString input for this Choreo. 
          # 
          # @param String - (required, string) Query parameter string to split.
          ###

          def set_QueryParamString(value)
            set_input("QueryParamString", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the SplitQueryParameters Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class SplitQueryParametersResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "QueryParamJSON" output from this Choreo execution
        	#
        	# @return String - (json) 
        	####
        	def get_QueryParamJSON()
        	  return @outputs["QueryParamJSON"]
        	end
        end

      end # class SplitQueryParameters




    end # module Util
    ##############################################################################
    #
    # ZipBucket
    #
    # Creates a zip file containing all objects within the specified bucket and returns a download link for the new compressed file.
    #
    ##############################################################################

    class ZipBucket < Choreography

      ####
      #  Create a new instance of the ZipBucket Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/ZipBucket")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ZipBucketInputSet
      ####
      def new_input_set()
        return ZipBucketInputSet.new()
      end

      def make_result_set()
        return ZipBucketResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ZipBucketResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ZipBucket
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ZipBucketInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that contains the list of objects that you want to zip.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CannedACL input for this Choreo. 
        # 
        # @param String - (conditional, string) This sets the permissions for the newly created zip file. Valid values are: private, public-read, public-read-write, authenticated-read, bucket-owner-read, or bucket-owner-full-control.
        ###

        def set_CannedACL(value)
          set_input("CannedACL", value)
        end
        #### 
        # Set the value of the Delimiter input for this Choreo. 
        # 
        # @param String - (optional, string) A delimiter is a character you use to group keys. All keys that contain the delimiter are grouped under a single result element, Common Prefixes. For more information see Amazon documentation.
        ###

        def set_Delimiter(value)
          set_input("Delimiter", value)
        end
        #### 
        # Set the value of the Prefix input for this Choreo. 
        # 
        # @param String - (optional, string) Limits the response to keys that begin with the specified prefix - useful for separating a bucket into different groupings of keys. Ex: specify 'test' to get a list of objects starting with 'test'.
        ###

        def set_Prefix(value)
          set_input("Prefix", value)
        end
        #### 
        # Set the value of the ZipFileLocation input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the bucket to put the new zip file in. When not specified, the zip file will be put in the bucket that contains the files being zipped.
        ###

        def set_ZipFileLocation(value)
          set_input("ZipFileLocation", value)
        end
        #### 
        # Set the value of the ZipFileName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the zip file that will be created. If not specified, the original bucket name will be used with .zip extension.
        ###

        def set_ZipFileName(value)
          set_input("ZipFileName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ZipBucket Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ZipBucketResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "URL" output from this Choreo execution
      	#
      	# @return String - (string) The URL location of the new zip file.
      	####
      	def get_URL()
      	  return @outputs["URL"]
      	end
      end

    end # class ZipBucket



    ##############################################################################
    #
    # ZipObject
    #
    # Creates a zipped version of the specified S3 file and returns a download link for the new compressed file.
    #
    ##############################################################################

    class ZipObject < Choreography

      ####
      #  Create a new instance of the ZipObject Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/S3/ZipObject")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ZipObjectInputSet
      ####
      def new_input_set()
        return ZipObjectInputSet.new()
      end

      def make_result_set()
        return ZipObjectResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ZipObjectResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ZipObject
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ZipObjectInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the BucketName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the bucket that contains the object to retrieve and zip.
        ###

        def set_BucketName(value)
          set_input("BucketName", value)
        end
        #### 
        # Set the value of the CannedACL input for this Choreo. 
        # 
        # @param String - (conditional, string) This sets the permissions for the newly created zip file. Valid values are: private, public-read, public-read-write, authenticated-read, bucket-owner-read, or bucket-owner-full-control.
        ###

        def set_CannedACL(value)
          set_input("CannedACL", value)
        end
        #### 
        # Set the value of the FileName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the file to retrieve and zip.
        ###

        def set_FileName(value)
          set_input("FileName", value)
        end
        #### 
        # Set the value of the ZipFileLocation input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the bucket to put the new zip file in. When not specified, the zip file will be put in the bucket where the original uncompressed file is located.
        ###

        def set_ZipFileLocation(value)
          set_input("ZipFileLocation", value)
        end
        #### 
        # Set the value of the ZipFileName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the zip file that will be created. If not specified, the original file name will be used with .zip extension.
        ###

        def set_ZipFileName(value)
          set_input("ZipFileName", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ZipObject Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ZipObjectResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "URL" output from this Choreo execution
      	#
      	# @return String - (string) The URL location of the new zip file.
      	####
      	def get_URL()
      	  return @outputs["URL"]
      	end
      end

    end # class ZipObject




  end # module S3

  module SNS



    ##############################################################################
    #
    # AddPermission
    #
    # Creates a statement for a topic's access control policy which allows an AWS account to have access to the specified Amazon SNS actions.
    #
    ##############################################################################

    class AddPermission < Choreography

      ####
      #  Create a new instance of the AddPermission Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/AddPermission")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AddPermissionInputSet
      ####
      def new_input_set()
        return AddPermissionInputSet.new()
      end

      def make_result_set()
        return AddPermissionResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AddPermissionResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AddPermission
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AddPermissionInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The AWS account number of the user that will be granted access to a specified action. Enter account number omitting any dashes.
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ActionName input for this Choreo. 
        # 
        # @param String - (required, string) The action you want to allow for a specified user (i.e. DeleteTopic, Publish, GetTopicAttributes, etc).
        ###

        def set_ActionName(value)
          set_input("ActionName", value)
        end
        #### 
        # Set the value of the Label input for this Choreo. 
        # 
        # @param String - (required, string) The unique identifier for the new policy statement.
        ###

        def set_Label(value)
          set_input("Label", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic whos access control policy you want to adjust.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AddPermission Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AddPermissionResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AddPermission



    ##############################################################################
    #
    # ConfirmSubscription
    #
    # Verifies that the endpoint owner wishes to receive messages by verifying the token sent during the Subscribe action.
    #
    ##############################################################################

    class ConfirmSubscription < Choreography

      ####
      #  Create a new instance of the ConfirmSubscription Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/ConfirmSubscription")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ConfirmSubscriptionInputSet
      ####
      def new_input_set()
        return ConfirmSubscriptionInputSet.new()
      end

      def make_result_set()
        return ConfirmSubscriptionResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ConfirmSubscriptionResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ConfirmSubscription
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ConfirmSubscriptionInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AuthenticateOnUnsubscribed input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Indicates that you want to disable the ability to unsubscribe from the subscription without authenticating. Specify 1 to enable this flag.
        ###

        def set_AuthenticateOnUnsubscribed(value)
          set_input("AuthenticateOnUnsubscribed", value)
        end
        #### 
        # Set the value of the Token input for this Choreo. 
        # 
        # @param String - (required, string) The short-lived token sent to an endpoint during the Subscribe action.
        ###

        def set_Token(value)
          set_input("Token", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic you want to confirm a subscription for.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ConfirmSubscription Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ConfirmSubscriptionResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ConfirmSubscription



    ##############################################################################
    #
    # CreateTopic
    #
    # Creates a new topic that notifications can be published to.
    #
    ##############################################################################

    class CreateTopic < Choreography

      ####
      #  Create a new instance of the CreateTopic Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/CreateTopic")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateTopicInputSet
      ####
      def new_input_set()
        return CreateTopicInputSet.new()
      end

      def make_result_set()
        return CreateTopicResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateTopicResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateTopic
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateTopicInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Name input for this Choreo. 
        # 
        # @param String - (required, string) The name of the topic you want to create.
        ###

        def set_Name(value)
          set_input("Name", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateTopic Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateTopicResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateTopic



    ##############################################################################
    #
    # DeleteTopic
    #
    # Deletes a specified topic and all its subscriptions.
    #
    ##############################################################################

    class DeleteTopic < Choreography

      ####
      #  Create a new instance of the DeleteTopic Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/DeleteTopic")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteTopicInputSet
      ####
      def new_input_set()
        return DeleteTopicInputSet.new()
      end

      def make_result_set()
        return DeleteTopicResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteTopicResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteTopic
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteTopicInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic you want to delete.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteTopic Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteTopicResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteTopic



    ##############################################################################
    #
    # GetTopicAttributes
    #
    # Returns properties for a specified topic.
    #
    ##############################################################################

    class GetTopicAttributes < Choreography

      ####
      #  Create a new instance of the GetTopicAttributes Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/GetTopicAttributes")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetTopicAttributesInputSet
      ####
      def new_input_set()
        return GetTopicAttributesInputSet.new()
      end

      def make_result_set()
        return GetTopicAttributesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetTopicAttributesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetTopicAttributes
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetTopicAttributesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic you want to retrieve attributes for.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetTopicAttributes Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetTopicAttributesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetTopicAttributes



    ##############################################################################
    #
    # ListSubscriptions
    #
    # Returns a list of the user's subscriptions. Each call returns a limited list of subscriptions, up to 100.
    #
    ##############################################################################

    class ListSubscriptions < Choreography

      ####
      #  Create a new instance of the ListSubscriptions Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/ListSubscriptions")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListSubscriptionsInputSet
      ####
      def new_input_set()
        return ListSubscriptionsInputSet.new()
      end

      def make_result_set()
        return ListSubscriptionsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListSubscriptionsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListSubscriptions
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListSubscriptionsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the NextToken input for this Choreo. 
        # 
        # @param String - (optional, string) The token returned from a previous LIstSubscriptions request.
        ###

        def set_NextToken(value)
          set_input("NextToken", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListSubscriptions Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListSubscriptionsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListSubscriptions



    ##############################################################################
    #
    # ListSubscriptionsByTopic
    #
    # Returns a list of the subscriptions for a specified topic.
    #
    ##############################################################################

    class ListSubscriptionsByTopic < Choreography

      ####
      #  Create a new instance of the ListSubscriptionsByTopic Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/ListSubscriptionsByTopic")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListSubscriptionsByTopicInputSet
      ####
      def new_input_set()
        return ListSubscriptionsByTopicInputSet.new()
      end

      def make_result_set()
        return ListSubscriptionsByTopicResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListSubscriptionsByTopicResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListSubscriptionsByTopic
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListSubscriptionsByTopicInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the NextToken input for this Choreo. 
        # 
        # @param String - (optional, string) The token returned from a previous LIstSubscriptionsByTopic request.
        ###

        def set_NextToken(value)
          set_input("NextToken", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic that you want to find subscriptions for.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListSubscriptionsByTopic Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListSubscriptionsByTopicResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListSubscriptionsByTopic



    ##############################################################################
    #
    # ListTopics
    #
    # Returns a list of the user's topics.
    #
    ##############################################################################

    class ListTopics < Choreography

      ####
      #  Create a new instance of the ListTopics Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/ListTopics")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListTopicsInputSet
      ####
      def new_input_set()
        return ListTopicsInputSet.new()
      end

      def make_result_set()
        return ListTopicsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListTopicsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListTopics
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListTopicsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the NextToken input for this Choreo. 
        # 
        # @param String - (optional, string) The token returned from a previous LIstTopics request.
        ###

        def set_NextToken(value)
          set_input("NextToken", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListTopics Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListTopicsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListTopics



    ##############################################################################
    #
    # Publish
    #
    # Sends a message to a topic's subscribed endpoints.
    #
    ##############################################################################

    class Publish < Choreography

      ####
      #  Create a new instance of the Publish Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/Publish")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return PublishInputSet
      ####
      def new_input_set()
        return PublishInputSet.new()
      end

      def make_result_set()
        return PublishResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = PublishResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the Publish
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class PublishInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the MessageStructure input for this Choreo. 
        # 
        # @param String - (optional, string) Can be set to 'json' if you are providing a valid JSON object for the Message input variable.
        ###

        def set_MessageStructure(value)
          set_input("MessageStructure", value)
        end
        #### 
        # Set the value of the Message input for this Choreo. 
        # 
        # @param String - (required, string) The text for the message you want to send to the topic.
        ###

        def set_Message(value)
          set_input("Message", value)
        end
        #### 
        # Set the value of the Subject input for this Choreo. 
        # 
        # @param String - (optional, string) The "Subject" line of the message when the message is delivered to e-mail endpoints or as a JSON message.
        ###

        def set_Subject(value)
          set_input("Subject", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic you want to publish to.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the Publish Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class PublishResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class Publish



    ##############################################################################
    #
    # RemovePermission
    #
    # Removes the statement from a topic's access control policy that was created with the AddPermission action.
    #
    ##############################################################################

    class RemovePermission < Choreography

      ####
      #  Create a new instance of the RemovePermission Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/RemovePermission")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RemovePermissionInputSet
      ####
      def new_input_set()
        return RemovePermissionInputSet.new()
      end

      def make_result_set()
        return RemovePermissionResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RemovePermissionResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RemovePermission
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RemovePermissionInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Label input for this Choreo. 
        # 
        # @param String - (required, string) The unique identifier for the policy statement that you want to delete.
        ###

        def set_Label(value)
          set_input("Label", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic that has an access control policy you want to adjust.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RemovePermission Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RemovePermissionResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RemovePermission



    ##############################################################################
    #
    # SetTopicAttributes
    #
    # Allows a topic owner to update the attribute of a topic to a new value.
    #
    ##############################################################################

    class SetTopicAttributes < Choreography

      ####
      #  Create a new instance of the SetTopicAttributes Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/SetTopicAttributes")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return SetTopicAttributesInputSet
      ####
      def new_input_set()
        return SetTopicAttributesInputSet.new()
      end

      def make_result_set()
        return SetTopicAttributesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = SetTopicAttributesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the SetTopicAttributes
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class SetTopicAttributesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AttributeName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the attribute you want to modify. Valid values are: Policy and DisplayName.
        ###

        def set_AttributeName(value)
          set_input("AttributeName", value)
        end
        #### 
        # Set the value of the AttributeValue input for this Choreo. 
        # 
        # @param String - (required, string) The new value for the attribute that you want to update.
        ###

        def set_AttributeValue(value)
          set_input("AttributeValue", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic that has an attribute that you want to set.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the SetTopicAttributes Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class SetTopicAttributesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class SetTopicAttributes



    ##############################################################################
    #
    # Subscribe
    #
    # Sends the endpoint a confirmation message in preparation for subscribing an endpoint.
    #
    ##############################################################################

    class Subscribe < Choreography

      ####
      #  Create a new instance of the Subscribe Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/Subscribe")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return SubscribeInputSet
      ####
      def new_input_set()
        return SubscribeInputSet.new()
      end

      def make_result_set()
        return SubscribeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = SubscribeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the Subscribe
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class SubscribeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Endpoint input for this Choreo. 
        # 
        # @param String - (required, string) The endpoint that will receive the notifications. Can be an email address, URL, or the ARN of an Amazon SQS queue depending on the protocol specified.
        ###

        def set_Endpoint(value)
          set_input("Endpoint", value)
        end
        #### 
        # Set the value of the Protocol input for this Choreo. 
        # 
        # @param String - (required, string) The protocol you want to use. Accepted values are: http, https, email, email-json, or sqs.
        ###

        def set_Protocol(value)
          set_input("Protocol", value)
        end
        #### 
        # Set the value of the TopicArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the topic you want to subscribe to.
        ###

        def set_TopicArn(value)
          set_input("TopicArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the Subscribe Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class SubscribeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class Subscribe



    ##############################################################################
    #
    # Unsubscribe
    #
    # Deletes a specified subscription.
    #
    ##############################################################################

    class Unsubscribe < Choreography

      ####
      #  Create a new instance of the Unsubscribe Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SNS/Unsubscribe")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return UnsubscribeInputSet
      ####
      def new_input_set()
        return UnsubscribeInputSet.new()
      end

      def make_result_set()
        return UnsubscribeResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = UnsubscribeResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the Unsubscribe
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class UnsubscribeInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the SubscriptionArn input for this Choreo. 
        # 
        # @param String - (required, string) The ARN of the subscription you want to delete.
        ###

        def set_SubscriptionArn(value)
          set_input("SubscriptionArn", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SNS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the Unsubscribe Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class UnsubscribeResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class Unsubscribe




    module Util



      ##############################################################################
      #
      # CheckUserRegion
      #
      # 
      #
      ##############################################################################

      class CheckUserRegion < Choreography

        ####
        #  Create a new instance of the CheckUserRegion Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/SNS/Util/CheckUserRegion")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return CheckUserRegionInputSet
        ####
        def new_input_set()
          return CheckUserRegionInputSet.new()
        end

        def make_result_set()
          return CheckUserRegionResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = CheckUserRegionResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the CheckUserRegion
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class CheckUserRegionInputSet < Choreography::InputSet

          #### 
          # Set the value of the UserRegion input for this Choreo. 
          # 
          # @param String - (conditional, string) The region that corresponds to the EC2 endpoint you wish to access.
          ###

          def set_UserRegion(value)
            set_input("UserRegion", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the CheckUserRegion Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class CheckUserRegionResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Endpoint" output from this Choreo execution
        	#
        	# @return String - (string) The regional endpoint for Amazon EC2.
        	####
        	def get_Endpoint()
        	  return @outputs["Endpoint"]
        	end
        end

      end # class CheckUserRegion




    end # module Util

  end # module SNS

  module SQS



    ##############################################################################
    #
    # AddPermission
    #
    # Adds a permission to a queue for a specific principal user.
    #
    ##############################################################################

    class AddPermission < Choreography

      ####
      #  Create a new instance of the AddPermission Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/AddPermission")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return AddPermissionInputSet
      ####
      def new_input_set()
        return AddPermissionInputSet.new()
      end

      def make_result_set()
        return AddPermissionResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = AddPermissionResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the AddPermission
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class AddPermissionInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId1 input for this Choreo. 
        # 
        # @param Integer - (required, integer) The AWS account number of the user that will be granted access to a specified action. Enter account number omitting any dashes.
        ###

        def set_AWSAccountId1(value)
          set_input("AWSAccountId1", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the ActionName input for this Choreo. 
        # 
        # @param String - (required, string) The action to allow for a specified user. Valid values: SendMessage, ReceiveMessage, DeleteMessage,ChangeMessageVisibility, GetQueueAttributes.
        ###

        def set_ActionName(value)
          set_input("ActionName", value)
        end
        #### 
        # Set the value of the Label input for this Choreo. 
        # 
        # @param String - (required, string) The unique identifier for the new permission that is being set.
        ###

        def set_Label(value)
          set_input("Label", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue that you're granting access to.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the AddPermission Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class AddPermissionResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class AddPermission



    ##############################################################################
    #
    # ChangeMessageVisibility
    #
    # Updates the visibility timeout parameter of a message.
    #
    ##############################################################################

    class ChangeMessageVisibility < Choreography

      ####
      #  Create a new instance of the ChangeMessageVisibility Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/ChangeMessageVisibility")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ChangeMessageVisibilityInputSet
      ####
      def new_input_set()
        return ChangeMessageVisibilityInputSet.new()
      end

      def make_result_set()
        return ChangeMessageVisibilityResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ChangeMessageVisibilityResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ChangeMessageVisibility
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ChangeMessageVisibilityInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The AWS account id associated with the queue. Enter account number omitting any dashes.
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue that contains the message.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the ReceiptHandle input for this Choreo. 
        # 
        # @param String - (required, string) The receipt handle associated with the message you want to modify. This is returned in the RecieveMessage request.
        ###

        def set_ReceiptHandle(value)
          set_input("ReceiptHandle", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VisibilityTimeout input for this Choreo. 
        # 
        # @param Integer - (required, integer) The new value for the visibility timeout of the message (in seconds).
        ###

        def set_VisibilityTimeout(value)
          set_input("VisibilityTimeout", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ChangeMessageVisibility Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ChangeMessageVisibilityResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ChangeMessageVisibility



    ##############################################################################
    #
    # CreateQueue
    #
    # Creates a new queue with a specified queue name.
    #
    ##############################################################################

    class CreateQueue < Choreography

      ####
      #  Create a new instance of the CreateQueue Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/CreateQueue")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return CreateQueueInputSet
      ####
      def new_input_set()
        return CreateQueueInputSet.new()
      end

      def make_result_set()
        return CreateQueueResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = CreateQueueResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the CreateQueue
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class CreateQueueInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the DefaultVisibilityTimeout input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The visibility timeout (in seconds) to use for the newly created queue.
        ###

        def set_DefaultVisibilityTimeout(value)
          set_input("DefaultVisibilityTimeout", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue you want to create.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the CreateQueue Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class CreateQueueResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class CreateQueue



    ##############################################################################
    #
    # DeleteMessage
    #
    # Deletes a particular message from a specified queue.
    #
    ##############################################################################

    class DeleteMessage < Choreography

      ####
      #  Create a new instance of the DeleteMessage Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/DeleteMessage")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteMessageInputSet
      ####
      def new_input_set()
        return DeleteMessageInputSet.new()
      end

      def make_result_set()
        return DeleteMessageResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteMessageResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteMessage
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteMessageInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The AWS account id associated with the queue. Enter account number omitting any dashes.
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue that contains the message you want to delete.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the ReceiptHandle input for this Choreo. 
        # 
        # @param String - (required, string) The receipt handle associated with the message you want to delete. This is returned in the RecieveMessage request.
        ###

        def set_ReceiptHandle(value)
          set_input("ReceiptHandle", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteMessage Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteMessageResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteMessage



    ##############################################################################
    #
    # DeleteQueue
    #
    # Deletes a queue with a specified queue URL.
    #
    ##############################################################################

    class DeleteQueue < Choreography

      ####
      #  Create a new instance of the DeleteQueue Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/DeleteQueue")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteQueueInputSet
      ####
      def new_input_set()
        return DeleteQueueInputSet.new()
      end

      def make_result_set()
        return DeleteQueueResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteQueueResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteQueue
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteQueueInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The id for the AWS account associated with the queue you're deleting a message from (remove all dashes in the account number).
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue you want to delete.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteQueue Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteQueueResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteQueue



    ##############################################################################
    #
    # GetQueueAttributes
    #
    # Retrieves one or all attributes of a queue.
    #
    ##############################################################################

    class GetQueueAttributes < Choreography

      ####
      #  Create a new instance of the GetQueueAttributes Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/GetQueueAttributes")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetQueueAttributesInputSet
      ####
      def new_input_set()
        return GetQueueAttributesInputSet.new()
      end

      def make_result_set()
        return GetQueueAttributesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetQueueAttributesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetQueueAttributes
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetQueueAttributesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AttributeName input for this Choreo. 
        # 
        # @param String - (optional, string) The name of the attribute that you want to retrieve for the specified queue. Defaults to 'All'.
        ###

        def set_AttributeName(value)
          set_input("AttributeName", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue to retrieve attributes for.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetQueueAttributes Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetQueueAttributesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetQueueAttributes



    ##############################################################################
    #
    # ListQueues
    #
    # Returns a list of your queues.
    #
    ##############################################################################

    class ListQueues < Choreography

      ####
      #  Create a new instance of the ListQueues Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/ListQueues")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListQueuesInputSet
      ####
      def new_input_set()
        return ListQueuesInputSet.new()
      end

      def make_result_set()
        return ListQueuesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListQueuesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListQueues
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListQueuesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the QueueNamePrefix input for this Choreo. 
        # 
        # @param String - (optional, string) A string used to filter the list of queues.
        ###

        def set_QueueNamePrefix(value)
          set_input("QueueNamePrefix", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListQueues Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListQueuesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListQueues



    ##############################################################################
    #
    # ReceiveMessage
    #
    # Returns one or more messages from the specified queue.
    #
    ##############################################################################

    class ReceiveMessage < Choreography

      ####
      #  Create a new instance of the ReceiveMessage Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/ReceiveMessage")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ReceiveMessageInputSet
      ####
      def new_input_set()
        return ReceiveMessageInputSet.new()
      end

      def make_result_set()
        return ReceiveMessageResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ReceiveMessageResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ReceiveMessage
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ReceiveMessageInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The id for the AWS account associated with the queue you're retrieving a message from (remove all dashes in the account number).
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AttributeName input for this Choreo. 
        # 
        # @param String - (optional, string) The attribute you to return. Values are: All (default), SenderId, SentTimestamp, ApproximateReceiveCount, or ApproximateFirstReceiveTimestamp.
        ###

        def set_AttributeName(value)
          set_input("AttributeName", value)
        end
        #### 
        # Set the value of the MaxNumberOfMessages input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The maximum number of messages to return. Defaults to 1.
        ###

        def set_MaxNumberOfMessages(value)
          set_input("MaxNumberOfMessages", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue you want to retrieve a message from.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end
        #### 
        # Set the value of the VisibilityTimeout input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The duration (in seconds) that the received messages are hidden from future retrieve requests after a ReceiveMessage request (max is 43200).
        ###

        def set_VisibilityTimeout(value)
          set_input("VisibilityTimeout", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ReceiveMessage Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ReceiveMessageResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ReceiveMessage



    ##############################################################################
    #
    # RemovePermission
    #
    # Removes any permission in the queue policy by specifying the permission label.
    #
    ##############################################################################

    class RemovePermission < Choreography

      ####
      #  Create a new instance of the RemovePermission Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/RemovePermission")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return RemovePermissionInputSet
      ####
      def new_input_set()
        return RemovePermissionInputSet.new()
      end

      def make_result_set()
        return RemovePermissionResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = RemovePermissionResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the RemovePermission
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class RemovePermissionInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the Label input for this Choreo. 
        # 
        # @param String - (required, string) The unique identifier for the permission that is being removed.
        ###

        def set_Label(value)
          set_input("Label", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue that that has the policy you want to adjust.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the RemovePermission Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class RemovePermissionResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class RemovePermission



    ##############################################################################
    #
    # SendMessage
    #
    # Sends a message to a specified queue.
    #
    ##############################################################################

    class SendMessage < Choreography

      ####
      #  Create a new instance of the SendMessage Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/SendMessage")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return SendMessageInputSet
      ####
      def new_input_set()
        return SendMessageInputSet.new()
      end

      def make_result_set()
        return SendMessageResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = SendMessageResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the SendMessage
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class SendMessageInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The id for the AWS account associated with the queue you're sending a message to (remove all dashes in the account number).
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the MessageBody input for this Choreo. 
        # 
        # @param String - (required, string) The message to send. Maximum size is 64 KB.
        ###

        def set_MessageBody(value)
          set_input("MessageBody", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue you want to send a message to.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the SendMessage Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class SendMessageResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class SendMessage



    ##############################################################################
    #
    # SetQueueAttributes
    #
    # Sets an attribute of a specified queue.
    #
    ##############################################################################

    class SetQueueAttributes < Choreography

      ####
      #  Create a new instance of the SetQueueAttributes Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Amazon/SQS/SetQueueAttributes")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return SetQueueAttributesInputSet
      ####
      def new_input_set()
        return SetQueueAttributesInputSet.new()
      end

      def make_result_set()
        return SetQueueAttributesResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = SetQueueAttributesResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the SetQueueAttributes
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class SetQueueAttributesInputSet < Choreography::InputSet

        #### 
        # Set the value of the AWSAccessKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Access Key ID provided by Amazon Web Services.
        ###

        def set_AWSAccessKeyId(value)
          set_input("AWSAccessKeyId", value)
        end
        #### 
        # Set the value of the AWSAccountId input for this Choreo. 
        # 
        # @param Integer - (required, integer) The AWS account number of the queue owner. Enter account number omitting any dashes.
        ###

        def set_AWSAccountId(value)
          set_input("AWSAccountId", value)
        end
        #### 
        # Set the value of the AWSSecretKeyId input for this Choreo. 
        # 
        # @param String - (required, string) The Secret Key ID provided by Amazon Web Services.
        ###

        def set_AWSSecretKeyId(value)
          set_input("AWSSecretKeyId", value)
        end
        #### 
        # Set the value of the AttributeName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the attribute that you want to set. Valid values are: VisibilityTimeout, Policy, MaximumMessageSize, or MessageRetentionPeriod.
        ###

        def set_AttributeName(value)
          set_input("AttributeName", value)
        end
        #### 
        # Set the value of the AttributeValue input for this Choreo. 
        # 
        # @param String - (required, string) The value of the attribute you want to set. Corresponds to the AttributeName you specify.
        ###

        def set_AttributeValue(value)
          set_input("AttributeValue", value)
        end
        #### 
        # Set the value of the QueueName input for this Choreo. 
        # 
        # @param String - (required, string) The name of the queue you want to set attributes for.
        ###

        def set_QueueName(value)
          set_input("QueueName", value)
        end
        #### 
        # Set the value of the UserRegion input for this Choreo. 
        # 
        # @param String - (optional, string) The AWS region that corresponds to the SQS endpoint you wish to access. The default region is "us-east-1". See description below for valid values.
        ###

        def set_UserRegion(value)
          set_input("UserRegion", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the SetQueueAttributes Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class SetQueueAttributesResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - (xml) The response from Amazon.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class SetQueueAttributes




    module Util



      ##############################################################################
      #
      # CheckUserRegion
      #
      # 
      #
      ##############################################################################

      class CheckUserRegion < Choreography

        ####
        #  Create a new instance of the CheckUserRegion Choreo. A TembooSession object, containing a valid
        #  set of Temboo credentials, must be supplied.
        ####
        def initialize(session)
          super(session, "/Library/Amazon/SQS/Util/CheckUserRegion")
        end

        #### 
        # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
        #
        # @return CheckUserRegionInputSet
        ####
        def new_input_set()
          return CheckUserRegionInputSet.new()
        end

        def make_result_set()
          return CheckUserRegionResultSet.new()
        end

        ####
        # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
        # and return a ResultSet containing the execution results.
        # @param choreoInputs
        # @return
        # @throws TembooException
        ####
        def execute(input_set = nil)
          resp = super(input_set)
          results = CheckUserRegionResultSet.new(resp)
          return results
        end

        ####
        # An InputSet with methods appropriate for specifying the inputs to the CheckUserRegion
        # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
        ####
        class CheckUserRegionInputSet < Choreography::InputSet

          #### 
          # Set the value of the UserRegion input for this Choreo. 
          # 
          # @param String - (conditional, string) The region that corresponds to the EC2 endpoint you wish to access.
          ###

          def set_UserRegion(value)
            set_input("UserRegion", value)
          end

        end

        ####
        # A ResultSet with methods tailored to the values returned by the CheckUserRegion Choreo.
        # The ResultSet object is used to retrieve the results of a Choreo execution.
        ####
        class CheckUserRegionResultSet < Choreography::ResultSet
        	####
        	# Retrieve the value for the "Endpoint" output from this Choreo execution
        	#
        	# @return String - (string) The regional endpoint for Amazon EC2.
        	####
        	def get_Endpoint()
        	  return @outputs["Endpoint"]
        	end
        end

      end # class CheckUserRegion




    end # module Util

  end # module SQS

end # module Amazon