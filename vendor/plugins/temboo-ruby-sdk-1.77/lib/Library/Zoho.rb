require "temboo"

module Zoho




  module CRM



    ##############################################################################
    #
    # ConvertLead
    #
    # Converts a lead to a potential, account, or contact in your Zoho CRM account.
    #
    ##############################################################################

    class ConvertLead < Choreography

      ####
      #  Create a new instance of the ConvertLead Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/ConvertLead")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ConvertLeadInputSet
      ####
      def new_input_set()
        return ConvertLeadInputSet.new()
      end

      def make_result_set()
        return ConvertLeadResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ConvertLeadResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ConvertLead
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ConvertLeadInputSet < Choreography::InputSet

        #### 
        # Set the value of the Amount input for this Choreo. 
        # 
        # @param BigDecimal - (conditional, decimal) Corresponds to the Amount field in Zoho. Required if CreatePotential is set to 1.
        ###

        def set_Amount(value)
          set_input("Amount", value)
        end
        #### 
        # Set the value of the AssignTo input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Assign To field in Zoho
        ###

        def set_AssignTo(value)
          set_input("AssignTo", value)
        end
        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the ClosingDate input for this Choreo. 
        # 
        # @param String - (conditional, date) Corresponds to the Closing Date field in Zoho. Formatted like MM/dd/yyyy. Required if CreatePotential is set to 1.
        ###

        def set_ClosingDate(value)
          set_input("ClosingDate", value)
        end
        #### 
        # Set the value of the ContactRole input for this Choreo. 
        # 
        # @param String - (conditional, string) Corresponds to the Contact Role field in Zoho. Required if CreatePotential is set to 1.
        ###

        def set_ContactRole(value)
          set_input("ContactRole", value)
        end
        #### 
        # Set the value of the CreatePotential input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Whether or not to create a potential
        ###

        def set_CreatePotential(value)
          set_input("CreatePotential", value)
        end
        #### 
        # Set the value of the ID input for this Choreo. 
        # 
        # @param Integer - (required, integer) The ID for the lead that you wish to convert to a potential
        ###

        def set_ID(value)
          set_input("ID", value)
        end
        #### 
        # Set the value of the NotifyLeadOwner input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Whether or not to notifiy the lead owner. Defaults to 0 for false.
        ###

        def set_NotifyLeadOwner(value)
          set_input("NotifyLeadOwner", value)
        end
        #### 
        # Set the value of the NotifyNewEntityOwner input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Whether or not to notify the new entity owner. Defaults to 0 for false.
        ###

        def set_NotifyNewEntityOwner(value)
          set_input("NotifyNewEntityOwner", value)
        end
        #### 
        # Set the value of the PotentialName input for this Choreo. 
        # 
        # @param String - (conditional, string) Corresponds to the Potential Name field in Zoho. Required if CreatePotential is set to 1.
        ###

        def set_PotentialName(value)
          set_input("PotentialName", value)
        end
        #### 
        # Set the value of the PotentialStage input for this Choreo. 
        # 
        # @param String - (conditional, string) Corresponds to the Potential Stage field in Zoho. Required if CreatePotential is set to 1.
        ###

        def set_PotentialStage(value)
          set_input("PotentialStage", value)
        end
        #### 
        # Set the value of the Probability input for this Choreo. 
        # 
        # @param Integer - (conditional, integer) Corresponds to the Probability field in Zoho. Required if CreatePotential is set to 1.
        ###

        def set_Probability(value)
          set_input("Probability", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ConvertLead Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ConvertLeadResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ConvertLead



    ##############################################################################
    #
    # DeleteRecords
    #
    # Deletes a specified record from a Zoho CRM account.
    #
    ##############################################################################

    class DeleteRecords < Choreography

      ####
      #  Create a new instance of the DeleteRecords Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/DeleteRecords")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DeleteRecordsInputSet
      ####
      def new_input_set()
        return DeleteRecordsInputSet.new()
      end

      def make_result_set()
        return DeleteRecordsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DeleteRecordsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DeleteRecords
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DeleteRecordsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the ID input for this Choreo. 
        # 
        # @param Integer - (required, integer) The ID for the record you want to delete
        ###

        def set_ID(value)
          set_input("ID", value)
        end
        #### 
        # Set the value of the Module input for this Choreo. 
        # 
        # @param String - (optional, string) The Zoho module you want to access. Defaults to Leads.
        ###

        def set_Module(value)
          set_input("Module", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DeleteRecords Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DeleteRecordsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DeleteRecords



    ##############################################################################
    #
    # GenerateAuthToken
    #
    # Generates an authentication token.
    #
    ##############################################################################

    class GenerateAuthToken < Choreography

      ####
      #  Create a new instance of the GenerateAuthToken Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/GenerateAuthToken")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GenerateAuthTokenInputSet
      ####
      def new_input_set()
        return GenerateAuthTokenInputSet.new()
      end

      def make_result_set()
        return GenerateAuthTokenResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GenerateAuthTokenResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GenerateAuthToken
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GenerateAuthTokenInputSet < Choreography::InputSet

        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho password.
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the Username input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho CRM username.
        ###

        def set_Username(value)
          set_input("Username", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GenerateAuthToken Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GenerateAuthTokenResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "AuthenticationToken" output from this Choreo execution
      	#
      	# @return String - (string) The authentication token returned from Zoho.
      	####
      	def get_AuthenticationToken()
      	  return @outputs["AuthenticationToken"]
      	end
      end

    end # class GenerateAuthToken



    ##############################################################################
    #
    # GetCVRecord
    #
    # Retrieves data with respect to the Custom View in Zoho CRM.
    #
    ##############################################################################

    class GetCVRecord < Choreography

      ####
      #  Create a new instance of the GetCVRecord Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/GetCVRecord")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetCVRecordInputSet
      ####
      def new_input_set()
        return GetCVRecordInputSet.new()
      end

      def make_result_set()
        return GetCVRecordResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetCVRecordResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetCVRecord
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetCVRecordInputSet < Choreography::InputSet

        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the CVName input for this Choreo. 
        # 
        # @param String - (optional, string) Used to retrieve records from a specific customer view. Defaults to 'All Open Leads'.
        ###

        def set_CVName(value)
          set_input("CVName", value)
        end
        #### 
        # Set the value of the FromIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The beginning index of the result set to return. Defaults to 1.
        ###

        def set_FromIndex(value)
          set_input("FromIndex", value)
        end
        #### 
        # Set the value of the LastModifiedDate input for this Choreo. 
        # 
        # @param String - (optional, date) Used to return records with a created or modified date that is after the specified time.  (i.e. 2010-04-21 11:09:23)
        ###

        def set_LastModifiedDate(value)
          set_input("LastModifiedDate", value)
        end
        #### 
        # Set the value of the Module input for this Choreo. 
        # 
        # @param String - (optional, string) The Zoho module you want to access. Defaults to Leads.
        ###

        def set_Module(value)
          set_input("Module", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the ToIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The ending index of the result set to return. Defaults to 20. Max is 200.
        ###

        def set_ToIndex(value)
          set_input("ToIndex", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetCVRecord Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetCVRecordResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetCVRecord



    ##############################################################################
    #
    # GetMyRecords
    #
    # Retrieves data by owner of the authentication token specified.
    #
    ##############################################################################

    class GetMyRecords < Choreography

      ####
      #  Create a new instance of the GetMyRecords Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/GetMyRecords")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetMyRecordsInputSet
      ####
      def new_input_set()
        return GetMyRecordsInputSet.new()
      end

      def make_result_set()
        return GetMyRecordsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetMyRecordsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetMyRecords
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetMyRecordsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the FromIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The beginning index of the result set to return. Defaults to 1.
        ###

        def set_FromIndex(value)
          set_input("FromIndex", value)
        end
        #### 
        # Set the value of the LastModifiedTime input for this Choreo. 
        # 
        # @param String - (optional, date) Used to return records with a created or modified date that is after the specified time.  (i.e. 2010-04-21 11:09:23)
        ###

        def set_LastModifiedTime(value)
          set_input("LastModifiedTime", value)
        end
        #### 
        # Set the value of the Module input for this Choreo. 
        # 
        # @param String - (optional, string) The Zoho module you want to access. Defaults to Leads.
        ###

        def set_Module(value)
          set_input("Module", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SelectColumns input for this Choreo. 
        # 
        # @param String - (optional, string) The columns to return separated by commas (i.e. First Name,Last Name,Email). When left empty, only IDs are returned.
        ###

        def set_SelectColumns(value)
          set_input("SelectColumns", value)
        end
        #### 
        # Set the value of the SortColumnString input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Used to specify a column to sort by
        ###

        def set_SortColumnString(value)
          set_input("SortColumnString", value)
        end
        #### 
        # Set the value of the SortOrderString input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrderString(value)
          set_input("SortOrderString", value)
        end
        #### 
        # Set the value of the ToIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The ending index of the result set to return. Defaults to 20. Max is 200.
        ###

        def set_ToIndex(value)
          set_input("ToIndex", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetMyRecords Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetMyRecordsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetMyRecords



    ##############################################################################
    #
    # GetRecords
    #
    # Retrieves all users data specified in the API request.
    #
    ##############################################################################

    class GetRecords < Choreography

      ####
      #  Create a new instance of the GetRecords Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/GetRecords")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetRecordsInputSet
      ####
      def new_input_set()
        return GetRecordsInputSet.new()
      end

      def make_result_set()
        return GetRecordsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetRecordsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetRecords
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetRecordsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the FromIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The beginning index of the result set to return. Defaults to 1.
        ###

        def set_FromIndex(value)
          set_input("FromIndex", value)
        end
        #### 
        # Set the value of the LastModifiedTime input for this Choreo. 
        # 
        # @param String - (optional, date) Used to return records with a created or modified date that is after the specified time.  (i.e. 2010-04-21 11:09:23)
        ###

        def set_LastModifiedTime(value)
          set_input("LastModifiedTime", value)
        end
        #### 
        # Set the value of the Module input for this Choreo. 
        # 
        # @param String - (optional, string) The Zoho module you want to access. Defaults to 'Leads'.
        ###

        def set_Module(value)
          set_input("Module", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SelectColumns input for this Choreo. 
        # 
        # @param String - (optional, string) The columns to return separated by commas (i.e. First Name,Last Name,Email). When left empty, only IDs are returned.
        ###

        def set_SelectColumns(value)
          set_input("SelectColumns", value)
        end
        #### 
        # Set the value of the SortColumnString input for this Choreo. 
        # 
        # @param String - (optional, string) Used to specify a column to sort by (in ascending order)
        ###

        def set_SortColumnString(value)
          set_input("SortColumnString", value)
        end
        #### 
        # Set the value of the SortOrderString input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrderString(value)
          set_input("SortOrderString", value)
        end
        #### 
        # Set the value of the ToIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The ending index of the result set to return. Defaults to 20. Max is 200.
        ###

        def set_ToIndex(value)
          set_input("ToIndex", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetRecords Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetRecordsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetRecords



    ##############################################################################
    #
    # GetRecordsById
    #
    # Retrieves records from your Zoho CRM account by ID.
    #
    ##############################################################################

    class GetRecordsById < Choreography

      ####
      #  Create a new instance of the GetRecordsById Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/GetRecordsById")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetRecordsByIdInputSet
      ####
      def new_input_set()
        return GetRecordsByIdInputSet.new()
      end

      def make_result_set()
        return GetRecordsByIdResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetRecordsByIdResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetRecordsById
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetRecordsByIdInputSet < Choreography::InputSet

        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the ID input for this Choreo. 
        # 
        # @param Integer - (required, integer) The ID for the Zoho record to lookup
        ###

        def set_ID(value)
          set_input("ID", value)
        end
        #### 
        # Set the value of the Module input for this Choreo. 
        # 
        # @param String - (optional, string) The Zoho module you want to access. Defaults to 'Leads'.
        ###

        def set_Module(value)
          set_input("Module", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetRecordsById Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetRecordsByIdResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetRecordsById



    ##############################################################################
    #
    # GetSearchRecords
    #
    # Lets you to search your Zoho CRM account for records based on Zoho's search expressions.
    #
    ##############################################################################

    class GetSearchRecords < Choreography

      ####
      #  Create a new instance of the GetSearchRecords Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/GetSearchRecords")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetSearchRecordsInputSet
      ####
      def new_input_set()
        return GetSearchRecordsInputSet.new()
      end

      def make_result_set()
        return GetSearchRecordsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetSearchRecordsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetSearchRecords
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetSearchRecordsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the FromIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The beginning index of the result set to return. Defaults to 1.
        ###

        def set_FromIndex(value)
          set_input("FromIndex", value)
        end
        #### 
        # Set the value of the Module input for this Choreo. 
        # 
        # @param String - (optional, string) The Zoho module you want to access. Defaults to 'Leads'.
        ###

        def set_Module(value)
          set_input("Module", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SearchColumn input for this Choreo. 
        # 
        # @param String - (required, string) Specify the name of the column you want to search (i.e. Email)
        ###

        def set_SearchColumn(value)
          set_input("SearchColumn", value)
        end
        #### 
        # Set the value of the SearchExpression input for this Choreo. 
        # 
        # @param String - (required, string) Specify an expression to use in your search (i.e. =, <>, contains, starts with, ends with, doesn't contain, <, >, <=, =>)
        ###

        def set_SearchExpression(value)
          set_input("SearchExpression", value)
        end
        #### 
        # Set the value of the SearchString input for this Choreo. 
        # 
        # @param String - (required, string) Specify a search string to use in the search (i.e. *gmail.com*)
        ###

        def set_SearchString(value)
          set_input("SearchString", value)
        end
        #### 
        # Set the value of the SelectColumns input for this Choreo. 
        # 
        # @param String - (optional, string) The columns to return separated by commas (i.e. First Name,Last Name,Email). When left empty, only IDs are returned.
        ###

        def set_SelectColumns(value)
          set_input("SelectColumns", value)
        end
        #### 
        # Set the value of the ToIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The ending index of the result set to return. Defaults to 20. Max is 200.
        ###

        def set_ToIndex(value)
          set_input("ToIndex", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetSearchRecords Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetSearchRecordsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetSearchRecords



    ##############################################################################
    #
    # GetSearchRecordsByPDC
    #
    # Retrieves records from your Zoho CRM account and searches by predefined columns.
    #
    ##############################################################################

    class GetSearchRecordsByPDC < Choreography

      ####
      #  Create a new instance of the GetSearchRecordsByPDC Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/GetSearchRecordsByPDC")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return GetSearchRecordsByPDCInputSet
      ####
      def new_input_set()
        return GetSearchRecordsByPDCInputSet.new()
      end

      def make_result_set()
        return GetSearchRecordsByPDCResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = GetSearchRecordsByPDCResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the GetSearchRecordsByPDC
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class GetSearchRecordsByPDCInputSet < Choreography::InputSet

        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the FromIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The beginning index of the result set to return. Defaults to 1.
        ###

        def set_FromIndex(value)
          set_input("FromIndex", value)
        end
        #### 
        # Set the value of the Module input for this Choreo. 
        # 
        # @param String - (required, string) The Zoho module you want to access. Defaults to 'Leads'.
        ###

        def set_Module(value)
          set_input("Module", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SearchColumn input for this Choreo. 
        # 
        # @param String - (required, string) The column name you want to search (such as "email", the column names used in this method are in lowercase)
        ###

        def set_SearchColumn(value)
          set_input("SearchColumn", value)
        end
        #### 
        # Set the value of the SearchValue input for this Choreo. 
        # 
        # @param String - (required, string) Specify a search value for the column you're searching
        ###

        def set_SearchValue(value)
          set_input("SearchValue", value)
        end
        #### 
        # Set the value of the SelectColumns input for this Choreo. 
        # 
        # @param String - (optional, string) The columns to return separated by commas (i.e. First Name,Last Name,Email). When left empty, only IDs are returned.
        ###

        def set_SelectColumns(value)
          set_input("SelectColumns", value)
        end
        #### 
        # Set the value of the ToIndex input for this Choreo. 
        # 
        # @param Integer - (optional, integer) The ending index of the result set to return. Defaults to 20. Max is 200.
        ###

        def set_ToIndex(value)
          set_input("ToIndex", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the GetSearchRecordsByPDC Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class GetSearchRecordsByPDCResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class GetSearchRecordsByPDC



    ##############################################################################
    #
    # InsertRecords
    #
    # Inserts records into your Zoho CRM account.
    #
    ##############################################################################

    class InsertRecords < Choreography

      ####
      #  Create a new instance of the InsertRecords Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/CRM/InsertRecords")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return InsertRecordsInputSet
      ####
      def new_input_set()
        return InsertRecordsInputSet.new()
      end

      def make_result_set()
        return InsertRecordsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = InsertRecordsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the InsertRecords
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class InsertRecordsInputSet < Choreography::InputSet

        #### 
        # Set the value of the AnnualRevenue input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Annual Revenue field in Zoho
        ###

        def set_AnnualRevenue(value)
          set_input("AnnualRevenue", value)
        end
        #### 
        # Set the value of the AuthenticationToken input for this Choreo. 
        # 
        # @param String - (required, string) A valid authentication token. Permanent authentication tokens can be generated by the GenerateAuthToken Choreo.
        ###

        def set_AuthenticationToken(value)
          set_input("AuthenticationToken", value)
        end
        #### 
        # Set the value of the CampaignSource input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Campaign Source field in Zoho
        ###

        def set_CampaignSource(value)
          set_input("CampaignSource", value)
        end
        #### 
        # Set the value of the City input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the City field in Zoho
        ###

        def set_City(value)
          set_input("City", value)
        end
        #### 
        # Set the value of the Company input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Company field in Zoho
        ###

        def set_Company(value)
          set_input("Company", value)
        end
        #### 
        # Set the value of the Country input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Country field in Zoho
        ###

        def set_Country(value)
          set_input("Country", value)
        end
        #### 
        # Set the value of the Description input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Description field in Zoho
        ###

        def set_Description(value)
          set_input("Description", value)
        end
        #### 
        # Set the value of the EmailOptOut input for this Choreo. 
        # 
        # @param Boolean - (optional, boolean) Corresponds to the Email Opt Out field in Zoho. Defaults to 0 for false.
        ###

        def set_EmailOptOut(value)
          set_input("EmailOptOut", value)
        end
        #### 
        # Set the value of the Email input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Email field in Zoho
        ###

        def set_Email(value)
          set_input("Email", value)
        end
        #### 
        # Set the value of the Fax input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Fax field in Zoho
        ###

        def set_Fax(value)
          set_input("Fax", value)
        end
        #### 
        # Set the value of the FirstName input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the First Name field in Zoho
        ###

        def set_FirstName(value)
          set_input("FirstName", value)
        end
        #### 
        # Set the value of the Industry input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Industry field in Zoho
        ###

        def set_Industry(value)
          set_input("Industry", value)
        end
        #### 
        # Set the value of the LastName input for this Choreo. 
        # 
        # @param String - (required, string) Corresponds to the Last Name field in Zoho
        ###

        def set_LastName(value)
          set_input("LastName", value)
        end
        #### 
        # Set the value of the LeadOwner input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Lead Owner field in Zoho
        ###

        def set_LeadOwner(value)
          set_input("LeadOwner", value)
        end
        #### 
        # Set the value of the LeadSource input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Lead Source field in Zoho
        ###

        def set_LeadSource(value)
          set_input("LeadSource", value)
        end
        #### 
        # Set the value of the LeadStatus input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Lead Status field in Zoho
        ###

        def set_LeadStatus(value)
          set_input("LeadStatus", value)
        end
        #### 
        # Set the value of the Mobile input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Mobile field in Zoho
        ###

        def set_Mobile(value)
          set_input("Mobile", value)
        end
        #### 
        # Set the value of the Module input for this Choreo. 
        # 
        # @param String - (optional, string) The Zoho module you want to access. Defaults to 'Leads'.
        ###

        def set_Module(value)
          set_input("Module", value)
        end
        #### 
        # Set the value of the NumOfEmployees input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Num Of Employees field in Zoho
        ###

        def set_NumOfEmployees(value)
          set_input("NumOfEmployees", value)
        end
        #### 
        # Set the value of the Phone input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Phone field in Zoho
        ###

        def set_Phone(value)
          set_input("Phone", value)
        end
        #### 
        # Set the value of the Rating input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Rating field in Zoho
        ###

        def set_Rating(value)
          set_input("Rating", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that the response should be in. Valid formats are: json and xml (the default).
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the Salutation input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Salutation field in Zoho
        ###

        def set_Salutation(value)
          set_input("Salutation", value)
        end
        #### 
        # Set the value of the SkypeID input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Skype ID field in Zoho
        ###

        def set_SkypeID(value)
          set_input("SkypeID", value)
        end
        #### 
        # Set the value of the State input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the State field in Zoho
        ###

        def set_State(value)
          set_input("State", value)
        end
        #### 
        # Set the value of the Street input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Street field in Zoho
        ###

        def set_Street(value)
          set_input("Street", value)
        end
        #### 
        # Set the value of the Title input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Title field in Zoho
        ###

        def set_Title(value)
          set_input("Title", value)
        end
        #### 
        # Set the value of the Website input for this Choreo. 
        # 
        # @param String - (optional, string) Corresponds to the Website field in Zoho
        ###

        def set_Website(value)
          set_input("Website", value)
        end
        #### 
        # Set the value of the ZipCode input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Corresponds to the Zip Code field in Zoho
        ###

        def set_ZipCode(value)
          set_input("ZipCode", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the InsertRecords Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class InsertRecordsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Format corresponds to the ResponseFormat input. Defaults to xml.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class InsertRecords




  end # module CRM
  ##############################################################################
  #
  # Login
  #
  # Retrieves a ticket number from Zoho.  If a previously generated ticket has expired, the Login Choreo will retrieve a new one.
  #
  ##############################################################################

  class Login < Choreography

    ####
    #  Create a new instance of the Login Choreo. A TembooSession object, containing a valid
    #  set of Temboo credentials, must be supplied.
    ####
    def initialize(session)
      super(session, "/Library/Zoho/Login")
    end

    #### 
    # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
    #
    # @return LoginInputSet
    ####
    def new_input_set()
      return LoginInputSet.new()
    end

    def make_result_set()
      return LoginResultSet.new()
    end

    ####
    # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
    # and return a ResultSet containing the execution results.
    # @param choreoInputs
    # @return
    # @throws TembooException
    ####
    def execute(input_set = nil)
      resp = super(input_set)
      results = LoginResultSet.new(resp)
      return results
    end

    ####
    # An InputSet with methods appropriate for specifying the inputs to the Login
    # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
    ####
    class LoginInputSet < Choreography::InputSet

      #### 
      # Set the value of the LoginID input for this Choreo. 
      # 
      # @param String - (required, string) Your Zoho username (or login id)
      ###

      def set_LoginID(value)
        set_input("LoginID", value)
      end
      #### 
      # Set the value of the Password input for this Choreo. 
      # 
      # @param String - (required, string) Your Zoho password
      ###

      def set_Password(value)
        set_input("Password", value)
      end
      #### 
      # Set the value of the Service input for this Choreo. 
      # 
      # @param String - (required, string) The service that is being accessed.
      ###

      def set_Service(value)
        set_input("Service", value)
      end

    end

    ####
    # A ResultSet with methods tailored to the values returned by the Login Choreo.
    # The ResultSet object is used to retrieve the results of a Choreo execution.
    ####
    class LoginResultSet < Choreography::ResultSet
    	####
    	# Retrieve the value for the "Ticket" output from this Choreo execution
    	#
    	# @return String - (string) Stores the ticket that is archived in the vault as well as all new tickets retrieved when expired tickets are detected.
    	####
    	def get_Ticket()
    	  return @outputs["Ticket"]
    	end
    	####
    	# Retrieve the value for the "TicketStatus" output from this Choreo execution
    	#
    	# @return String - 
    	####
    	def get_TicketStatus()
    	  return @outputs["TicketStatus"]
    	end
    end

  end # class Login




  module Sheet



    ##############################################################################
    #
    # DownloadSpreadsheet
    #
    # Downloads a specified spreadsheet in a user's Zoho Sheet Account.
    #
    ##############################################################################

    class DownloadSpreadsheet < Choreography

      ####
      #  Create a new instance of the DownloadSpreadsheet Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Sheet/DownloadSpreadsheet")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DownloadSpreadsheetInputSet
      ####
      def new_input_set()
        return DownloadSpreadsheetInputSet.new()
      end

      def make_result_set()
        return DownloadSpreadsheetResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DownloadSpreadsheetResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DownloadSpreadsheet
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DownloadSpreadsheetInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the BookId input for this Choreo. 
        # 
        # @param Integer - (required, integer) Specifies the unique spreadsheet id to download.
        ###

        def set_BookId(value)
          set_input("BookId", value)
        end
        #### 
        # Set the value of the DownloadFormat input for this Choreo. 
        # 
        # @param String - (required, string) Specifies the file format in which the documents need to be downloaded. Possible values for documents: xls, xlsx, ods, sxc, pdf, html, csv, tsv.
        ###

        def set_DownloadFormat(value)
          set_input("DownloadFormat", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DownloadSpreadsheet Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DownloadSpreadsheetResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the DownloadFormat input.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DownloadSpreadsheet



    ##############################################################################
    #
    # ListAllSpreadsheets
    #
    # Lists all the spreadsheets associated with a user's Zoho Sheet Account.
    #
    ##############################################################################

    class ListAllSpreadsheets < Choreography

      ####
      #  Create a new instance of the ListAllSpreadsheets Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Sheet/ListAllSpreadsheets")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListAllSpreadsheetsInputSet
      ####
      def new_input_set()
        return ListAllSpreadsheetsInputSet.new()
      end

      def make_result_set()
        return ListAllSpreadsheetsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListAllSpreadsheetsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListAllSpreadsheets
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListAllSpreadsheetsInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the Limit input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the number of documents to be listed.
        ###

        def set_Limit(value)
          set_input("Limit", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the OrderBy input for this Choreo. 
        # 
        # @param String - (optional, string) Order documents by createdTime, lastModifiedTime or name.
        ###

        def set_OrderBy(value)
          set_input("OrderBy", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SortOrder input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrder(value)
          set_input("SortOrder", value)
        end
        #### 
        # Set the value of the StartFrom input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the initial document number from which the documents will be listed.
        ###

        def set_StartFrom(value)
          set_input("StartFrom", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListAllSpreadsheets Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListAllSpreadsheetsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the ResponseFormat input. Defaults to XML.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListAllSpreadsheets



    ##############################################################################
    #
    # ListPublicSpreadsheets
    #
    # Lists all the spreadsheets that have been made "public" from a user's Zoho Sheet  Account.
    #
    ##############################################################################

    class ListPublicSpreadsheets < Choreography

      ####
      #  Create a new instance of the ListPublicSpreadsheets Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Sheet/ListPublicSpreadsheets")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListPublicSpreadsheetsInputSet
      ####
      def new_input_set()
        return ListPublicSpreadsheetsInputSet.new()
      end

      def make_result_set()
        return ListPublicSpreadsheetsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListPublicSpreadsheetsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListPublicSpreadsheets
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListPublicSpreadsheetsInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the Limit input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the number of documents to be listed.
        ###

        def set_Limit(value)
          set_input("Limit", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the OrderBy input for this Choreo. 
        # 
        # @param String - (optional, string) Order documents by createdTime, lastModifiedTime or name.
        ###

        def set_OrderBy(value)
          set_input("OrderBy", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SortOrder input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrder(value)
          set_input("SortOrder", value)
        end
        #### 
        # Set the value of the StartFrom input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the initial document number from which the documents will be listed.
        ###

        def set_StartFrom(value)
          set_input("StartFrom", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListPublicSpreadsheets Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListPublicSpreadsheetsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the ResponseFormat input. Defaults to XML.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListPublicSpreadsheets



    ##############################################################################
    #
    # ListSharedSpreadsheets
    #
    # Lists all the spreadsheets that have been "shared" to a user's Zoho Sheet Account.
    #
    ##############################################################################

    class ListSharedSpreadsheets < Choreography

      ####
      #  Create a new instance of the ListSharedSpreadsheets Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Sheet/ListSharedSpreadsheets")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListSharedSpreadsheetsInputSet
      ####
      def new_input_set()
        return ListSharedSpreadsheetsInputSet.new()
      end

      def make_result_set()
        return ListSharedSpreadsheetsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListSharedSpreadsheetsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListSharedSpreadsheets
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListSharedSpreadsheetsInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the Limit input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the number of documents to be listed.
        ###

        def set_Limit(value)
          set_input("Limit", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the OrderBy input for this Choreo. 
        # 
        # @param String - (optional, string) Order documents by createdTime, lastModifiedTime or name.
        ###

        def set_OrderBy(value)
          set_input("OrderBy", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SortOrder input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrder(value)
          set_input("SortOrder", value)
        end
        #### 
        # Set the value of the StartFrom input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the initial document number from which the documents will be listed.
        ###

        def set_StartFrom(value)
          set_input("StartFrom", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListSharedSpreadsheets Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListSharedSpreadsheetsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the ResponseFormat input. Defaults to XML.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListSharedSpreadsheets



    ##############################################################################
    #
    # ListTrashedSpreadsheets
    #
    # Lists all the spreadsheets that have been "trashed" from a user's Zoho Sheet Account.
    #
    ##############################################################################

    class ListTrashedSpreadsheets < Choreography

      ####
      #  Create a new instance of the ListTrashedSpreadsheets Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Sheet/ListTrashedSpreadsheets")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListTrashedSpreadsheetsInputSet
      ####
      def new_input_set()
        return ListTrashedSpreadsheetsInputSet.new()
      end

      def make_result_set()
        return ListTrashedSpreadsheetsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListTrashedSpreadsheetsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListTrashedSpreadsheets
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListTrashedSpreadsheetsInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the Limit input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the number of documents to be listed.
        ###

        def set_Limit(value)
          set_input("Limit", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the OrderBy input for this Choreo. 
        # 
        # @param String - (optional, string) Order documents by createdTime, lastModifiedTime or name.
        ###

        def set_OrderBy(value)
          set_input("OrderBy", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SortOrder input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrder(value)
          set_input("SortOrder", value)
        end
        #### 
        # Set the value of the StartFrom input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the initial document number from which the documents will be listed.
        ###

        def set_StartFrom(value)
          set_input("StartFrom", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListTrashedSpreadsheets Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListTrashedSpreadsheetsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the ResponseFormat input. Defaults to XML.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListTrashedSpreadsheets




  end # module Sheet

  module Writer



    ##############################################################################
    #
    # DownloadDocument
    #
    # Downloads a specified document in a user's Zoho Writer Account.
    #
    ##############################################################################

    class DownloadDocument < Choreography

      ####
      #  Create a new instance of the DownloadDocument Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Writer/DownloadDocument")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return DownloadDocumentInputSet
      ####
      def new_input_set()
        return DownloadDocumentInputSet.new()
      end

      def make_result_set()
        return DownloadDocumentResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = DownloadDocumentResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the DownloadDocument
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class DownloadDocumentInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the DocumentId input for this Choreo. 
        # 
        # @param Integer - (required, integer) Specifies the unique document id to download.
        ###

        def set_DocumentId(value)
          set_input("DocumentId", value)
        end
        #### 
        # Set the value of the DownloadFormat input for this Choreo. 
        # 
        # @param String - (required, string) Specifies the file format in which the documents need to be downloaded. Possible values for documents: doc, docx, pdf, html, sxw, odt, rtf.
        ###

        def set_DownloadFormat(value)
          set_input("DownloadFormat", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the DownloadDocument Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class DownloadDocumentResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the DownloadFormat input.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class DownloadDocument



    ##############################################################################
    #
    # ListAllDocuments
    #
    # Lists all the documents associated with a user's Zoho Writer Account.
    #
    ##############################################################################

    class ListAllDocuments < Choreography

      ####
      #  Create a new instance of the ListAllDocuments Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Writer/ListAllDocuments")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListAllDocumentsInputSet
      ####
      def new_input_set()
        return ListAllDocumentsInputSet.new()
      end

      def make_result_set()
        return ListAllDocumentsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListAllDocumentsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListAllDocuments
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListAllDocumentsInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the Limit input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the number of documents to be listed.
        ###

        def set_Limit(value)
          set_input("Limit", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the OrderBy input for this Choreo. 
        # 
        # @param String - (optional, string) Order documents by createdTime, lastModifiedTime or name.
        ###

        def set_OrderBy(value)
          set_input("OrderBy", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SortOrder input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrder(value)
          set_input("SortOrder", value)
        end
        #### 
        # Set the value of the StartFrom input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the initial document number from which the documents will be listed.
        ###

        def set_StartFrom(value)
          set_input("StartFrom", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListAllDocuments Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListAllDocumentsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the ResponseFormat input. Defaults to XML.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListAllDocuments



    ##############################################################################
    #
    # ListPublicDocuments
    #
    # Lists all the documents that have been made "public" from a user's Zoho Writer Account.
    #
    ##############################################################################

    class ListPublicDocuments < Choreography

      ####
      #  Create a new instance of the ListPublicDocuments Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Writer/ListPublicDocuments")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListPublicDocumentsInputSet
      ####
      def new_input_set()
        return ListPublicDocumentsInputSet.new()
      end

      def make_result_set()
        return ListPublicDocumentsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListPublicDocumentsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListPublicDocuments
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListPublicDocumentsInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the Limit input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the number of documents to be listed.
        ###

        def set_Limit(value)
          set_input("Limit", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the OrderBy input for this Choreo. 
        # 
        # @param String - (optional, string) Order documents by createdTime, lastModifiedTime or name.
        ###

        def set_OrderBy(value)
          set_input("OrderBy", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SortOrder input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrder(value)
          set_input("SortOrder", value)
        end
        #### 
        # Set the value of the StartFrom input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the initial document number from which the documents will be listed.
        ###

        def set_StartFrom(value)
          set_input("StartFrom", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListPublicDocuments Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListPublicDocumentsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the ResponseFormat input. Defaults to XML.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListPublicDocuments



    ##############################################################################
    #
    # ListSharedDocuments
    #
    # Lists all the documents that have been "shared" to a user's Zoho Writer Account.
    #
    ##############################################################################

    class ListSharedDocuments < Choreography

      ####
      #  Create a new instance of the ListSharedDocuments Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Writer/ListSharedDocuments")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListSharedDocumentsInputSet
      ####
      def new_input_set()
        return ListSharedDocumentsInputSet.new()
      end

      def make_result_set()
        return ListSharedDocumentsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListSharedDocumentsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListSharedDocuments
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListSharedDocumentsInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the Limit input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the number of documents to be listed.
        ###

        def set_Limit(value)
          set_input("Limit", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the OrderBy input for this Choreo. 
        # 
        # @param String - (optional, string) Order documents by createdTime, lastModifiedTime or name.
        ###

        def set_OrderBy(value)
          set_input("OrderBy", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SortOrder input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrder(value)
          set_input("SortOrder", value)
        end
        #### 
        # Set the value of the StartFrom input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the initial document number from which the documents will be listed.
        ###

        def set_StartFrom(value)
          set_input("StartFrom", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListSharedDocuments Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListSharedDocumentsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the ResponseFormat input. Defaults to XML.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListSharedDocuments



    ##############################################################################
    #
    # ListTrashedDocuments
    #
    # Lists all the documents that have been "trashed" from a user's Zoho Writer Account.
    #
    ##############################################################################

    class ListTrashedDocuments < Choreography

      ####
      #  Create a new instance of the ListTrashedDocuments Choreo. A TembooSession object, containing a valid
      #  set of Temboo credentials, must be supplied.
      ####
      def initialize(session)
        super(session, "/Library/Zoho/Writer/ListTrashedDocuments")
      end

      #### 
      # Obtain an InputSet object, used to define inputs for an execution of this Choreo.
      #
      # @return ListTrashedDocumentsInputSet
      ####
      def new_input_set()
        return ListTrashedDocumentsInputSet.new()
      end

      def make_result_set()
        return ListTrashedDocumentsResultSet.new()
      end

      ####
      # Execute the Choreo using the specified InputSet as parameters, wait for the Choreo to complete 
      # and return a ResultSet containing the execution results.
      # @param choreoInputs
      # @return
      # @throws TembooException
      ####
      def execute(input_set = nil)
        resp = super(input_set)
        results = ListTrashedDocumentsResultSet.new(resp)
        return results
      end

      ####
      # An InputSet with methods appropriate for specifying the inputs to the ListTrashedDocuments
      # Choreo. The InputSet object is used to specify input parameters when executing this Choreo.
      ####
      class ListTrashedDocumentsInputSet < Choreography::InputSet

        #### 
        # Set the value of the APIKey input for this Choreo. 
        # 
        # @param String - (required, string) The API Key provided by Zoho
        ###

        def set_APIKey(value)
          set_input("APIKey", value)
        end
        #### 
        # Set the value of the Limit input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the number of documents to be listed.
        ###

        def set_Limit(value)
          set_input("Limit", value)
        end
        #### 
        # Set the value of the LoginID input for this Choreo. 
        # 
        # @param String - (required, string) Your Zoho username (or login id)
        ###

        def set_LoginID(value)
          set_input("LoginID", value)
        end
        #### 
        # Set the value of the OrderBy input for this Choreo. 
        # 
        # @param String - (optional, string) Order documents by createdTime, lastModifiedTime or name.
        ###

        def set_OrderBy(value)
          set_input("OrderBy", value)
        end
        #### 
        # Set the value of the Password input for this Choreo. 
        # 
        # @param String - (required, password) Your Zoho password
        ###

        def set_Password(value)
          set_input("Password", value)
        end
        #### 
        # Set the value of the ResponseFormat input for this Choreo. 
        # 
        # @param String - (optional, string) The format that response should be in. Can be set to xml or json. Defaults to xml.
        ###

        def set_ResponseFormat(value)
          set_input("ResponseFormat", value)
        end
        #### 
        # Set the value of the SortOrder input for this Choreo. 
        # 
        # @param String - (optional, string) Sorting order: asc or desc. Default sort order is set to ascending.
        ###

        def set_SortOrder(value)
          set_input("SortOrder", value)
        end
        #### 
        # Set the value of the StartFrom input for this Choreo. 
        # 
        # @param Integer - (optional, integer) Sets the initial document number from which the documents will be listed.
        ###

        def set_StartFrom(value)
          set_input("StartFrom", value)
        end

      end

      ####
      # A ResultSet with methods tailored to the values returned by the ListTrashedDocuments Choreo.
      # The ResultSet object is used to retrieve the results of a Choreo execution.
      ####
      class ListTrashedDocumentsResultSet < Choreography::ResultSet
      	####
      	# Retrieve the value for the "Response" output from this Choreo execution
      	#
      	# @return String - The response from Zoho. Corresponds to the ResponseFormat input. Defaults to XML.
      	####
      	def get_Response()
      	  return @outputs["Response"]
      	end
      end

    end # class ListTrashedDocuments




  end # module Writer

end # module Zoho